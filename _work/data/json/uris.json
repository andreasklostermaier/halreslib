[
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:24.584136713+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:24.584136713+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e0d36b0eebfa18522868cc610932ede9a392a437b91bb8f6f4758d8d3fa1d00d",
        "url": "https://crates.io/"
    },
    {
        "auto_descr": "The Rust quick reference cheat sheet that aims at providing help on writing basic syntax and methods. ",
        "crea_time": "2024-08-29T17:45:24.835904375+02:00",
        "crea_user": "api",
        "host": "quickref.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:24.835904375+02:00",
        "modi_user": "api",
        "path": "/rust",
        "scheme": "https",
        "title": "Rust Cheat Sheet & Quick Reference",
        "uri_uuid": "edd417f7585ccbf9b8fa8bfcf0b0d6927981fd7d973a1c9facd184edca3ea59e",
        "url": "https://quickref.me/rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:25.477877897+02:00",
        "crea_user": "api",
        "host": "meet.jit.si",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:25.477877897+02:00",
        "modi_user": "api",
        "path": "/RustHackAndLearnBerlin",
        "scheme": "https",
        "title": "Jitsi Meet",
        "uri_uuid": "07f2db58f4138a94acc152564d752e7168b50db27c036efa03f1962384b4359d",
        "url": "https://meet.jit.si/RustHackAndLearnBerlin"
    },
    {
        "auto_descr": "OpenTechSchool is a community initiative offering free programming workshops and meetups to technology enthusiasts of all genders, backgrounds, and experience levels. It supports volunteer coaches in setting up events by taking care of the organizational details, encouraging coaches to create origin",
        "crea_time": "2024-08-29T17:45:25.649675925+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:25.649675925+02:00",
        "modi_user": "api",
        "path": "/de-DE/opentechschool-berlin/",
        "scheme": "https",
        "title": "OpenTechSchool Berlin | Meetup",
        "uri_uuid": "63396a4bf7e348635dd0d98c1d663cefed7d3cdb324ac209fbafbae7ec579a0b",
        "url": "https://www.meetup.com/de-DE/opentechschool-berlin/"
    },
    {
        "auto_descr": "A Berlin-local Rust community",
        "crea_time": "2024-08-29T17:45:25.886823524+02:00",
        "crea_user": "api",
        "host": "berline.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:25.886823524+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Berline.rs",
        "uri_uuid": "f7f7933302db50bf11adeb8e7ad58466171c3cfe2cb99d5f97826c0fa850b98f",
        "url": "https://berline.rs/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:26.010416949+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:26.010416949+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "This Week in Rust",
        "uri_uuid": "da91be2584ab1d485ee1314824870b2c88d6c29c9aa7fcc17b437f3450f224e5",
        "url": "https://this-week-in-rust.org/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:45:26.158901376+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:26.158901376+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rustacean Station",
        "uri_uuid": "9d68f1a1e0cabe4ae1c738d51546044744a742162d1fd1ba363a034d71950bd2",
        "url": "https://rustacean-station.org/"
    },
    {
        "auto_descr": "List of Rust libraries and applications. An unofficial experimental opinionated alternative to crates.io",
        "crea_time": "2024-08-29T17:45:26.639445995+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:26.639445995+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Lib.rs — home for Rust crates // Lib.rs",
        "uri_uuid": "3464791519ee0070cc5501a6ce22359a55f6ef2deedd981218a6c269a61df1af",
        "url": "https://lib.rs/"
    },
    {
        "auto_descr": "A curated list of Rust code and resources. Contribute to rust-unofficial/awesome-rust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:27.236699274+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:27.236699274+02:00",
        "modi_user": "api",
        "path": "/rust-unofficial/awesome-rust",
        "scheme": "https",
        "title": "GitHub - rust-unofficial/awesome-rust: A curated list of Rust code and resources.",
        "uri_uuid": "da3ca2316443a59e52f0935603180bf2c13b93cfa855b8eb988e9dca0b5fdf0e",
        "url": "https://github.com/rust-unofficial/awesome-rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:28.350940305+02:00",
        "crea_user": "api",
        "host": "preview.redd.it",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:28.350940305+02:00",
        "modi_user": "api",
        "path": "/dt1wan02aa561.png",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f54a5722df47bdef44f332db850d04150b622c23020a156eb86ff57b0895f210",
        "url": "https://preview.redd.it/dt1wan02aa561.png?width=960&crop=smart&auto=webp&s=f64cf833f2fbd5bd84a045501a212477562e51cf"
    },
    {
        "auto_descr": ":crab: Small exercises to get you used to reading and writing Rust code! - rust-lang/rustlings",
        "crea_time": "2024-08-29T17:45:28.560233433+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:28.560233433+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rustlings",
        "scheme": "https",
        "title": "GitHub - rust-lang/rustlings: :crab: Small exercises to get you used to reading and writing Rust code!",
        "uri_uuid": "118f3849e1d7efbf62129de9c79389880cb34b08632e3025701d35c2b4a9dc9c",
        "url": "https://github.com/rust-lang/rustlings"
    },
    {
        "auto_descr": "Educational blog posts for Rust beginners. Contribute to pretzelhammer/rust-blog development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:29.339149573+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:29.339149573+02:00",
        "modi_user": "api",
        "path": "/pretzelhammer/rust-blog/blob/master/posts/tour-of-rusts-standard-library-traits.md",
        "scheme": "https",
        "title": "rust-blog/posts/tour-of-rusts-standard-library-traits.md at master · pretzelhammer/rust-blog · GitHub",
        "uri_uuid": "f04aa5d278e38709c9680a447f30bebd5f8b5d3c04458c3cf67aaa289b3df53d",
        "url": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/tour-of-rusts-standard-library-traits.md"
    },
    {
        "auto_descr": "Interested in learning a new programming language that's growing in use and popularity? Start here! Lay the foundation of knowledge you need to build fast and effective programs in Rust.",
        "crea_time": "2024-08-29T17:45:30.237457250+02:00",
        "crea_user": "api",
        "host": "docs.microsoft.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:30.237457250+02:00",
        "modi_user": "api",
        "path": "/en-us/learn/paths/rust-first-steps/",
        "scheme": "https",
        "title": "Take your first steps with Rust - Training | Microsoft Learn",
        "uri_uuid": "fd3586225c7433a8eb3c1013857e0894de12146714f45ed0de46ad58989f71ce",
        "url": "https://docs.microsoft.com/en-us/learn/paths/rust-first-steps/"
    },
    {
        "auto_descr": "Learn, practice and get world-class mentoring in over 50 languages. 100% free.",
        "crea_time": "2024-08-29T17:45:30.578515727+02:00",
        "crea_user": "api",
        "host": "exercism.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:30.578515727+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Exercism",
        "uri_uuid": "12412fc9581c70fbdd8e9cc831ffcdae31374a1a71017875d10432e4ec7d94a7",
        "url": "https://exercism.io/"
    },
    {
        "auto_descr": "Today you are frustrated.",
        "crea_time": "2024-08-29T17:45:30.973975679+02:00",
        "crea_user": "api",
        "host": "msirringhaus.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:30.973975679+02:00",
        "modi_user": "api",
        "path": "/Where-everything-went-wrong/",
        "scheme": "https",
        "title": "Where everything went wrong... – traitshifter – Who are you today?",
        "uri_uuid": "e532d70db30e80731cb4f03b59bc09dd1b9acca366a120ca0b5d77c84877c52a",
        "url": "https://msirringhaus.github.io/Where-everything-went-wrong/"
    },
    {
        "auto_descr": "Error handling Isn't All About Errors by Jane LusbyError handling in rust is incredibly diverse and constantly evolving. As such it is often a source of conf...",
        "crea_time": "2024-08-29T17:45:31.095646215+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:31.095646215+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "RustConf 2020 - Error handling Isn't All About Errors by Jane Lusby - YouTube",
        "uri_uuid": "da0afd6dcaac1cb3090f00301cd6c9d3065772e08180f35472fe3b036e285c12",
        "url": "https://www.youtube.com/watch?v=rAF8mLI0naQ"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:31.676603464+02:00",
        "crea_user": "api",
        "host": "dev.to",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:31.676603464+02:00",
        "modi_user": "api",
        "path": "/senyeezus/ergonomic-error-handling-with-rust-13bj",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "32422414a3f8ee36c8881bebba3e434b1d34ca69eef26fd856d81c67d7ec44f5",
        "url": "https://dev.to/senyeezus/ergonomic-error-handling-with-rust-13bj"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:31.826900572+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:31.826900572+02:00",
        "modi_user": "api",
        "path": "/crates/anyhow",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "acb94ac6302bd203b68bf4ea2f38014d0b96902645b28b4477fbe6735bcf5a28",
        "url": "https://crates.io/crates/anyhow"
    },
    {
        "auto_descr": "Das Team will gemeinsam mit der Community den richtigen Weg für Asynchronous I/O gestalten, um die Sprache besser für verteilte Systeme aufzustellen.",
        "crea_time": "2024-08-29T17:45:32.039768633+02:00",
        "crea_user": "api",
        "host": "www.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:32.039768633+02:00",
        "modi_user": "api",
        "path": "/news/Programmiersprache-Rust-Arbeitsgruppe-zielt-auf-strahlende-asynchrone-Zukunft-5992475.html",
        "scheme": "https",
        "title": "\n    Programmiersprache: Rust-Arbeitsgruppe zielt auf strahlende asynchrone Zukunft | heise online\n",
        "uri_uuid": "21b028e72e1e8b0f616c6dc59fbd9a854156ba6316378a3efed65c0b2f9788a4",
        "url": "https://www.heise.de/news/Programmiersprache-Rust-Arbeitsgruppe-zielt-auf-strahlende-asynchrone-Zukunft-5992475.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:45:32.399731825+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:32.399731825+02:00",
        "modi_user": "api",
        "path": "/async-book/01_getting_started/01_chapter.html",
        "scheme": "https",
        "title": "Getting Started - Asynchronous Programming in Rust",
        "uri_uuid": "57729b49e0523c8cde305583ae4c9afd988a58a96a50192d434027ae37ec8f60",
        "url": "https://rust-lang.github.io/async-book/01_getting_started/01_chapter.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:32.507650884+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:32.507650884+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "Why asynchronous Rust doesn't work | Hacker News",
        "uri_uuid": "f69dab132f4091bfa11dcfb0682542a8000cc2f623fb03f1779c03b34ed167b3",
        "url": "https://news.ycombinator.com/item?id=26406989"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:34.803487764+02:00",
        "crea_user": "api",
        "host": "ibraheem.ca",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:34.803487764+02:00",
        "modi_user": "api",
        "path": "/writings/async-rust-from-the-ground-up/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "faafe460beaa390ec82610cea3788391fde59e490563aaf6565bb6fefc7556c8",
        "url": "https://ibraheem.ca/writings/async-rust-from-the-ground-up/"
    },
    {
        "auto_descr": "So! Rust futures! Easy peasy lemon squeezy. Until it's not. So let's do the easy\nthing, and then instead of waiting for the hard thing to  sneak up on us , we'll\n...",
        "crea_time": "2024-08-29T17:45:35.131671048+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:35.131671048+02:00",
        "modi_user": "api",
        "path": "/articles/understanding-rust-futures-by-going-way-too-deep",
        "scheme": "https",
        "title": "\n        \n        Understanding Rust futures by going way too deep\n        \n    ",
        "uri_uuid": "1dd60b5e8502140257e15a62ae3ab55796dad57a18aa1e537baa0119fe7aa27b",
        "url": "https://fasterthanli.me/articles/understanding-rust-futures-by-going-way-too-deep"
    },
    {
        "auto_descr": "emacs.d files for making Emacs a Rust development environment - rksm/emacs-rust-config",
        "crea_time": "2024-08-29T17:45:36.222333928+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:36.222333928+02:00",
        "modi_user": "api",
        "path": "/rksm/emacs-rust-config",
        "scheme": "https",
        "title": "GitHub - rksm/emacs-rust-config: emacs.d files for making Emacs a Rust development environment",
        "uri_uuid": "000da0383c5fee7949990a38d1617acc069d1ebbd88fdda6beedaaba031f0694",
        "url": "https://github.com/rksm/emacs-rust-config"
    },
    {
        "auto_descr": "AreWeWebYet gives insight on whether you can build your latest web-project on top of Rust",
        "crea_time": "2024-08-29T17:45:37.085002401+02:00",
        "crea_user": "api",
        "host": "www.arewewebyet.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:37.085002401+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Are we web yet? Yes, and it's freaking fast! ",
        "uri_uuid": "f4b78513ff5f8f2fedfc14c89f3c8dfb0ad884a843536639304f06bc03ff0d93",
        "url": "https://www.arewewebyet.org/"
    },
    {
        "auto_descr": "In this article, we'll explore the top Rust web frameworks to use in your next frontend and backend development projects.",
        "crea_time": "2024-08-29T17:45:37.212392313+02:00",
        "crea_user": "api",
        "host": "blog.logrocket.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:37.212392313+02:00",
        "modi_user": "api",
        "path": "/the-current-state-of-rust-web-frameworks/",
        "scheme": "https",
        "title": "Exploring the top Rust web frameworks - LogRocket Blog",
        "uri_uuid": "1ff0bbb1651d84e913ddf134bad36fc7af6c82b041387fa4287497338c0f5093",
        "url": "https://blog.logrocket.com/the-current-state-of-rust-web-frameworks/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:37.571021035+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:37.571021035+02:00",
        "modi_user": "api",
        "path": "/crates/actix-web",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ab8c79f45fd7cb9d29d79cc1b3499183bdd9a5da23aa42d070c5992c6afa32d5",
        "url": "https://crates.io/crates/actix-web"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:37.772500289+02:00",
        "crea_user": "api",
        "host": "m.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:37.772500289+02:00",
        "modi_user": "api",
        "path": "/developer/artikel/Jan-Erik-Rediger-Entwickler-aus-allen-Program",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "7546b5dd1a05f8207559a04a49cf0d59011391e72fd898e850905302a2cdf694",
        "url": "https://m.heise.de/developer/artikel/Jan-Erik-Rediger-Entwickler-aus-allen-Program"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:39.195340049+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:39.195340049+02:00",
        "modi_user": "api",
        "path": "/crates/tide",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "7b24db372b996f125d3fa6c64b308008e6ae38be78f1b6d670854807b85f019c",
        "url": "https://crates.io/crates/tide"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:39.426273431+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:39.426273431+02:00",
        "modi_user": "api",
        "path": "/crates/warp",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b0ce974cc08165b9a0ba23cfcf362acb37412284b2cb2024a52af810b8bee0eb",
        "url": "https://crates.io/crates/warp"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:39.639984593+02:00",
        "crea_user": "api",
        "host": "dl.acm.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:39.639984593+02:00",
        "modi_user": "api",
        "path": "/doi/10.1145/3296979.3192369",
        "scheme": "https",
        "title": "",
        "uri_uuid": "03cc5f6bf5b5bc50841a1266fae3cd7ddf19aecec7a0ef402109c1dc2357a871",
        "url": "https://dl.acm.org/doi/10.1145/3296979.3192369"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:40.304184263+02:00",
        "crea_user": "api",
        "host": "www.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:40.304184263+02:00",
        "modi_user": "api",
        "path": "/downloads.html%20.",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "95b4b39c06774b096c2fc32d5f8717007cea9ee29dc967299c27a55632b7858b",
        "url": "https://www.rust-lang.org/downloads.html%20."
    },
    {
        "auto_descr": "A language empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:45:40.810216825+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:40.810216825+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "\n            Learn Rust - Rust Programming Language\n        ",
        "uri_uuid": "094f8d05bb8cec4f500baa91ba13c7c63a366b57ebc886ad93c1ef1575cbc36b",
        "url": "https://doc.rust-lang.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:41.821496805+02:00",
        "crea_user": "api",
        "host": "rustlab.it",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:41.821496805+02:00",
        "modi_user": "api",
        "path": "/%20(we%20get%20a%20discount)",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "24e459922939283350cd434c9f05c5ba7f92c38468e0165201454c45e496de46",
        "url": "https://rustlab.it/%20(we%20get%20a%20discount)"
    },
    {
        "auto_descr": "EuroRust is a 2 day conference for the European Rust community – October 10th & 11th, 2024 – in Vienna & online",
        "crea_time": "2024-08-29T17:45:42.587114055+02:00",
        "crea_user": "api",
        "host": "eurorust.eu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:42.587114055+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "EuroRust 2024, October 10th & 11th, Vienna & online",
        "uri_uuid": "ed5538ea9528d68b39d6a87ef653400785581240875cc3def89df760f1ffb44b",
        "url": "https://eurorust.eu/"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:43.137752126+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:43.137752126+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs",
        "scheme": "https",
        "title": "GitHub - radumarias/rfs: Distributed filesystem written in Rust",
        "uri_uuid": "9ede9f902dce222b56c526228cd0ef7582dd4d1eaaa4a4ceb22d9815d41796c0",
        "url": "https://github.com/radumarias/rfs"
    },
    {
        "auto_descr": "it would be very interesting to build a distributed filesystem. I imaged it to be something like Hadoop filesystem or S3, with FUSE",
        "crea_time": "2024-08-29T17:45:43.812633648+02:00",
        "crea_user": "api",
        "host": "systemweakness.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:43.812633648+02:00",
        "modi_user": "api",
        "path": "/hitchhikers-guide-to-building-a-distributed-filesystem-in-rust-the-very-beginning-2c02eb7313e7",
        "scheme": "https",
        "title": "The Hitchhiker’s Guide to Building a Distributed Filesystem in Rust. The very beginning… | System Weakness",
        "uri_uuid": "1f0e942c014aeb54793c52118d62f30d4ae362da0685f875c34d713e20ba3164",
        "url": "https://systemweakness.com/hitchhikers-guide-to-building-a-distributed-filesystem-in-rust-the-very-beginning-2c02eb7313e7"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:45.019276470+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:45.019276470+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Concepts",
        "scheme": "https",
        "title": "Concepts · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "b996c7d65363b563f8fa89bad2090fa618397c8a5bfcd8d925a0aea950a3d586",
        "url": "https://github.com/radumarias/rfs/wiki/Concepts"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:45.592516496+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:45.592516496+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Sharding",
        "scheme": "https",
        "title": "Home · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "f5d2c5608637812cea1784bafeffa8fd3c0403a2c56f349dc84a4cf4f3c51112",
        "url": "https://github.com/radumarias/rfs/wiki/Sharding"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:46.290411685+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:46.290411685+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Determine-when-a-node-goes-down",
        "scheme": "https",
        "title": "Determine when a node goes down · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "24f789c5df264a6cfd5047091a88e69191ee34678ee636b50c98991822750096",
        "url": "https://github.com/radumarias/rfs/wiki/Determine-when-a-node-goes-down"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:46.893783751+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:46.893783751+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Distributed-DB",
        "scheme": "https",
        "title": "Home · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "8f06020a8f4c4d0ff5401726e5d94cce95ea729d1092e8bf2f6679b3dd909994",
        "url": "https://github.com/radumarias/rfs/wiki/Distributed-DB"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:47.367352240+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:47.367352240+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Coordinator-and-Data-nodes",
        "scheme": "https",
        "title": "Coordinator and Data nodes · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "20de2dc5215ec6152d505d01862cfd3b72ca83245955dc8791128a750f485799",
        "url": "https://github.com/radumarias/rfs/wiki/Coordinator-and-Data-nodes"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:47.916180707+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:47.916180707+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Communication-between-Coordinator-and-Data-nodes",
        "scheme": "https",
        "title": "Communication between Coordinator and Data nodes · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "1870f3a42eab8bd4f15fad7ab9e337549a3392d51b5196c7fdf2a427ec0dd2d1",
        "url": "https://github.com/radumarias/rfs/wiki/Communication-between-Coordinator-and-Data-nodes"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:48.630010034+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:48.630010034+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/Distributed-Hash-Table",
        "scheme": "https",
        "title": "Distributed Hash Table · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "e005ae2f051a2e4a85322e0d48bd1a108d5315d95774e193f1c7125f15b2ecba",
        "url": "https://github.com/radumarias/rfs/wiki/Distributed-Hash-Table"
    },
    {
        "auto_descr": "Distributed filesystem written in Rust. Contribute to radumarias/rfs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:45:49.195326253+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:49.195326253+02:00",
        "modi_user": "api",
        "path": "/radumarias/rfs/wiki/File-sync",
        "scheme": "https",
        "title": "Home · radumarias/rfs Wiki · GitHub",
        "uri_uuid": "fb79e8ec738e8d298a5a664a24781cea6d0da533ae96dd448857c29cf24928e6",
        "url": "https://github.com/radumarias/rfs/wiki/File-sync"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:49.645384235+02:00",
        "crea_user": "api",
        "host": "www.mongodb.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:49.645384235+02:00",
        "modi_user": "api",
        "path": "/docs/manual/core/sharding-choose-a-shard-key/",
        "scheme": "https",
        "title": "Choose a Shard Key - MongoDB Manual v7.0",
        "uri_uuid": "0904f6b58bbfacabc4d24c204020522b1cee357f44efabfe111aebaea401bca9",
        "url": "https://www.mongodb.com/docs/manual/core/sharding-choose-a-shard-key/#std-label-shard-key-monotonic"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:45:50.180618626+02:00",
        "crea_user": "api",
        "host": "www.twitch.tv",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:50.180618626+02:00",
        "modi_user": "api",
        "path": "/henningbastelt%20(6pm%20CEST%20on%20sundays)",
        "scheme": "https",
        "title": "Twitch",
        "uri_uuid": "7017e75d96d9059ff402c07eefefefafd3e61384ec830c5a608a968810e70a93",
        "url": "https://www.twitch.tv/henningbastelt%20(6pm%20CEST%20on%20sundays)"
    },
    {
        "auto_descr": "Use a GAT for Searcher associated type because this trait is always implemented for every lifetime anyway.\ncc #27721",
        "crea_time": "2024-08-29T17:45:50.375474312+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:50.375474312+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/127481",
        "scheme": "https",
        "title": "Remove generic lifetime parameter of trait `Pattern` by a1phyr · Pull Request #127481 · rust-lang/rust · GitHub",
        "uri_uuid": "15d55744ee5c3545cb1e803c956fdb83136578166f6432298a12fa435507910d",
        "url": "https://github.com/rust-lang/rust/pull/127481"
    },
    {
        "auto_descr": "Closes: #102012.\nFor local_waker and context_ext related things, I just moved them to dedicated feature gates and reused their own tracking issue (maybe it's better to open a new one later, but at ...",
        "crea_time": "2024-08-29T17:45:52.153221682+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:52.153221682+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/128228",
        "scheme": "https",
        "title": "Stabilize `const_waker` by slanterns · Pull Request #128228 · rust-lang/rust · GitHub",
        "uri_uuid": "1195fe63a0b601424919ce30661269a3a480df373e54becad9bafe3288465cf6",
        "url": "https://github.com/rust-lang/rust/pull/128228"
    },
    {
        "auto_descr": "Closes: #53485.\nQuestion: does \n  \n    \n      rust/compiler/rustc_lint_defs/src/builtin.rs\n    \n    \n        Lines 1986 to 1994\n      in\n      8fe0c75\n    \n  \n  \n    \n\n        \n          \n         ...",
        "crea_time": "2024-08-29T17:45:53.882884845+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:53.882884845+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/128279",
        "scheme": "https",
        "title": "Stabilize `is_sorted` by slanterns · Pull Request #128279 · rust-lang/rust · GitHub",
        "uri_uuid": "8db0fe55cf6507f84917d5cca2e39376654e6fc46473a92c2714a50b74efad52",
        "url": "https://github.com/rust-lang/rust/pull/128279"
    },
    {
        "auto_descr": "Tracking issue #120140. Closes #120140.\nAs the FCP is now nearing its end I have opened a stabilization PR. I have done this separately to the offset_of_enum feature, since that FCP has not started...",
        "crea_time": "2024-08-29T17:45:55.419977269+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:55.419977269+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/128284",
        "scheme": "https",
        "title": "Stabilize offset_of_nested by GKFX · Pull Request #128284 · rust-lang/rust · GitHub",
        "uri_uuid": "5d2bc67043ba0edd71ab0edd04e2dbdc37279286a8cfcadd62248e5b51e44fcb",
        "url": "https://github.com/rust-lang/rust/pull/128284"
    },
    {
        "auto_descr": "cc tracking issue #112115",
        "crea_time": "2024-08-29T17:45:56.934983999+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:56.934983999+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/127444",
        "scheme": "https",
        "title": "`impl Send + Sync` and override `count` for the `CStr::bytes` iterator by Sky9x · Pull Request #127444 · rust-lang/rust · GitHub",
        "uri_uuid": "a7148c8326c8687bfb2a3578cf6b3d81ba0d009e52ba0e75d3e7ef33ef1d366a",
        "url": "https://github.com/rust-lang/rust/pull/127444"
    },
    {
        "auto_descr": "This commit starts using #[diagnostic::do_not_recommend] in the standard library to improve some error messages. In this case we just hide a certain nightly only impl as suggested in #121521\nThe re...",
        "crea_time": "2024-08-29T17:45:59.865123548+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:45:59.865123548+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/128008",
        "scheme": "https",
        "title": "Start using `#[diagnostic::do_not_recommend]` in the standard library by weiznich · Pull Request #128008 · rust-lang/rust · GitHub",
        "uri_uuid": "da6e338e8eb62bcb03cf99c252faa5b1c8bb26bc2e58becf2823150a8b9d5175",
        "url": "https://github.com/rust-lang/rust/pull/128008"
    },
    {
        "auto_descr": "Removes unnecessary impl sorting because queries already return their keys in HIR definition order: #120371 (comment)\nr? @cjgillot or @lcnr -- unless I totally misunderstood what was being asked fo...",
        "crea_time": "2024-08-29T17:46:00.940373102+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:00.940373102+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/120812",
        "scheme": "https",
        "title": "Remove unnecessary impl sorting in queries and metadata by compiler-errors · Pull Request #120812 · rust-lang/rust · GitHub",
        "uri_uuid": "7a6c4b0f34733d590627c82c2b66eb2ec5a72a2f4b550e024208c11c18e169a1",
        "url": "https://github.com/rust-lang/rust/pull/120812"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:02.399388667+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:02.399388667+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/1egopg2/what_is_lacking_in_the_rust_ecosystem_2024/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "a6c9b09dd3c0f7aa5dea8fd8ddec6314dda14b9a0ccd7471ef8f68001fcf3d70",
        "url": "https://www.reddit.com/r/rust/comments/1egopg2/what_is_lacking_in_the_rust_ecosystem_2024/"
    },
    {
        "auto_descr": "A tool for managing cargo workspaces and their crates, inspired by lerna - pksunkara/cargo-workspaces",
        "crea_time": "2024-08-29T17:46:02.524915242+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:02.524915242+02:00",
        "modi_user": "api",
        "path": "/pksunkara/cargo-workspaces",
        "scheme": "https",
        "title": "GitHub - pksunkara/cargo-workspaces: A tool for managing cargo workspaces and their crates, inspired by lerna",
        "uri_uuid": "a8dda9459f334261a1e5bcd1d756eb3a58d10b33363fc8713bb5b63ff364a90a",
        "url": "https://github.com/pksunkara/cargo-workspaces"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:03.348317686+02:00",
        "crea_user": "api",
        "host": "globalcloudplatforms.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:03.348317686+02:00",
        "modi_user": "api",
        "path": "/wp-content/uploads/2024/06/globalcloudplatforms_citi.io-i-want-ai-to-do-my-laundry-and-dishes.jpg",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "412b67078a70c837b0ef6d5ee8295af6b1044a5aa38982bb989d05ad627b0dc4",
        "url": "https://globalcloudplatforms.com/wp-content/uploads/2024/06/globalcloudplatforms_citi.io-i-want-ai-to-do-my-laundry-and-dishes.jpg"
    },
    {
        "auto_descr": "The fastest, most powerful way to create an HTML app",
        "crea_time": "2024-08-29T17:46:05.288606332+02:00",
        "crea_user": "api",
        "host": "docs.fastht.ml",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:05.288606332+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "FastHTML – fasthtml",
        "uri_uuid": "864e18016b9873a79904f4c14d136226d8ccab3b48ea38a28560f897e0f24da6",
        "url": "https://docs.fastht.ml/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:05.726640220+02:00",
        "crea_user": "api",
        "host": "meet.jit.si",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:05.726640220+02:00",
        "modi_user": "api",
        "path": "/rust-nbg",
        "scheme": "https",
        "title": "Jitsi Meet",
        "uri_uuid": "8ed49bbe8f510c2ce1911fd27c3597e5b998d5e1ef882a9edb73a4fc66de8c45",
        "url": "https://meet.jit.si/rust-nbg"
    },
    {
        "auto_descr": "Let's talk Rust!What's new in the Rust world? What ideas and projects have you been working on? Join, meet new people and discuss :)Rust brings a breath of fresh air to the world of systems programming to make it enjoyable, fearless, and fun - yet also robust, rigorous, and safe! As Rust aims to emp",
        "crea_time": "2024-08-29T17:46:05.905585909+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:05.905585909+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-noris/",
        "scheme": "https",
        "title": "Rust Nuremberg | Meetup",
        "uri_uuid": "b8c42b64e6a37318527eb5ffed36c45cdf3cc649d17d1f81091038304b0a0ab9",
        "url": "https://www.meetup.com/de-DE/rust-noris/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:06.131386710+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:06.131386710+02:00",
        "modi_user": "api",
        "path": "/crates/bevy_quinnet",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "37fc46a1cb754b0ae98f901194bd8ffabefa9f50a906b9559ba1c02aa5908979",
        "url": "https://crates.io/crates/bevy_quinnet#quic-as-a-game-networking-protocol"
    },
    {
        "auto_descr": "Have you ever wondered why you don't have to import std::result::Result before you can use it?\nThe reason is Rust's prelude, which re-exports a bunch of types that …",
        "crea_time": "2024-08-29T17:46:06.329856389+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:06.329856389+02:00",
        "modi_user": "api",
        "path": "/blog/dont-use-preludes-and-globs/",
        "scheme": "https",
        "title": "Don't Use Preludes And Globs | corrode Rust Consulting",
        "uri_uuid": "f2d288392d79f2900a2bb2e9ac5d72a56ee44fb8b31dd5fc807c857b5745672d",
        "url": "https://corrode.dev/blog/dont-use-preludes-and-globs/"
    },
    {
        "auto_descr": "Many devs dream of one day writing their own operating system. Ideally in their favorite language: Rust. For many of us, this dream remains just that: a dream.\nJeremy Soller from System76, however, didn't just contribute kernel code for Pop!_OS, but also started his own operating system, RedoxOS, which is completely written in Rust. One might get the impression that he likes to tinker with low-level code!\nIn this episode of Rust in Production, Jeremy talks about his journey. From getting hired as a kernel developer at Denver-based company System76 after looking at the job ad for 1 month and finally applying, to being the maintainer of not one but two operating systems, additional system tools, and the Rust-based Cosmic desktop. We'll talk about why it's hard to write correct C code even for exceptional developers like Jeremy and why Rust is so great for refactoring and sharing code across different levels of abstraction.",
        "crea_time": "2024-08-29T17:46:06.472294565+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:06.472294565+02:00",
        "modi_user": "api",
        "path": "/podcast/s02e07-system76/",
        "scheme": "https",
        "title": "System76 with Jeremy Soller - Rust in Production Podcast | corrode Rust Consulting",
        "uri_uuid": "f3b3f30ae33a9c5b71677a247b3a550797f0a33b25f640d46216423e3bdf3a3c",
        "url": "https://corrode.dev/podcast/s02e07-system76/"
    },
    {
        "auto_descr": "Terminal disk space navigator 🔭. Contribute to imsnif/diskonaut development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:06.586607835+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:06.586607835+02:00",
        "modi_user": "api",
        "path": "/imsnif/diskonaut",
        "scheme": "https",
        "title": "GitHub - imsnif/diskonaut: Terminal disk space navigator 🔭",
        "uri_uuid": "82140729b1b351cf25e1175acc036ec9731412182ac96d72719ceb791dc3fb23",
        "url": "https://github.com/imsnif/diskonaut"
    },
    {
        "auto_descr": "CLI utility to find the union, intersection, set difference, etc of files considered as sets of lines - yarrow/zet",
        "crea_time": "2024-08-29T17:46:07.312662813+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:07.312662813+02:00",
        "modi_user": "api",
        "path": "/yarrow/zet",
        "scheme": "https",
        "title": "GitHub - yarrow/zet: CLI utility to find the union, intersection, set difference, etc of files considered as sets of lines",
        "uri_uuid": "6d945ed4048b23963b4419a4511e56bd8a1c6b5b62d39e8cc1f7b67695ce909a",
        "url": "https://github.com/yarrow/zet"
    },
    {
        "auto_descr": "Yet another cross-platform graphical process/system monitor. - ClementTsang/bottom",
        "crea_time": "2024-08-29T17:46:08.193838775+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:08.193838775+02:00",
        "modi_user": "api",
        "path": "/ClementTsang/bottom",
        "scheme": "https",
        "title": "GitHub - ClementTsang/bottom: Yet another cross-platform graphical process/system monitor.",
        "uri_uuid": "5ef190d4a5c2374b5496bb9df2c69da45de7cb40eae8b84b5bec547c4c9eae9b",
        "url": "https://github.com/ClementTsang/bottom"
    },
    {
        "auto_descr": "A linux utility to get information on filesystems, like df but better - Canop/dysk",
        "crea_time": "2024-08-29T17:46:09.110220931+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:09.110220931+02:00",
        "modi_user": "api",
        "path": "/Canop/dysk",
        "scheme": "https",
        "title": "GitHub - Canop/dysk: A linux utility to get information on filesystems, like df but better",
        "uri_uuid": "9bc9bd2444114ea6c2e380424881850ac9a19e991458f3f0f1d8b0bf369c0d80",
        "url": "https://github.com/Canop/dysk"
    },
    {
        "auto_descr": "an efficient awk-like language. Contribute to ezrosent/frawk development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:09.963759167+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:09.963759167+02:00",
        "modi_user": "api",
        "path": "/ezrosent/frawk",
        "scheme": "https",
        "title": "GitHub - ezrosent/frawk: an efficient awk-like language",
        "uri_uuid": "873a013791b4d5a42e9434dc38ba50a10449b4557c29f8ceda31b8e5257917d0",
        "url": "https://github.com/ezrosent/frawk"
    },
    {
        "auto_descr": "Find multi-byte-encoded strings in binary data (Gitlab mirror). - getreu/stringsext",
        "crea_time": "2024-08-29T17:46:10.676203562+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:10.676203562+02:00",
        "modi_user": "api",
        "path": "/getreu/stringsext",
        "scheme": "https",
        "title": "GitHub - getreu/stringsext: Find multi-byte-encoded strings in binary data (Gitlab mirror).",
        "uri_uuid": "a7a68050d1d0dad02637b98da4da54063106cf174c8cd86d2492ad247ec5bf74",
        "url": "https://github.com/getreu/stringsext"
    },
    {
        "auto_descr": "A curated list of replacements for existing software written in Rust - TaKO8Ki/awesome-alternatives-in-rust",
        "crea_time": "2024-08-29T17:46:11.389950702+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:11.389950702+02:00",
        "modi_user": "api",
        "path": "/TaKO8Ki/awesome-alternatives-in-rust",
        "scheme": "https",
        "title": "GitHub - TaKO8Ki/awesome-alternatives-in-rust: A curated list of replacements for existing software written in Rust",
        "uri_uuid": "834f102869603b302ffb7d965a4164f54c8dde1c461a5e4291b39b6916cab13a",
        "url": "https://github.com/TaKO8Ki/awesome-alternatives-in-rust"
    },
    {
        "auto_descr": "A date-time library for Rust that encourages you to jump into the pit of success. - BurntSushi/jiff",
        "crea_time": "2024-08-29T17:46:12.156380548+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:12.156380548+02:00",
        "modi_user": "api",
        "path": "/BurntSushi/jiff",
        "scheme": "https",
        "title": "GitHub - BurntSushi/jiff: A date-time library for Rust that encourages you to jump into the pit of success.",
        "uri_uuid": "f1288b878e5041215e36650f33191267da6ae9646863de84d07362046d75295f",
        "url": "https://github.com/BurntSushi/jiff"
    },
    {
        "auto_descr": "QUIC is a transport protocol that is designed to be more efficient and reliable than TCP, the traditional transport protocol for RPCs. QUIC uses UDP as its underlying transport, which allows it to…",
        "crea_time": "2024-08-29T17:46:12.913877853+02:00",
        "crea_user": "api",
        "host": "asmdhabibullah.medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:12.913877853+02:00",
        "modi_user": "api",
        "path": "/quic-vs-grps-e1c94028aa6b",
        "scheme": "https",
        "title": "QUIC vs gRPS. QUIC and gRPC are two different… | by Abu Sayem Md Habibullah | Medium",
        "uri_uuid": "577e1ca3e59189fc685843e20962ed104532ec9571cd781a85af9f6af92eebdc",
        "url": "https://asmdhabibullah.medium.com/quic-vs-grps-e1c94028aa6b"
    },
    {
        "auto_descr": "QUIC transport protocol implementation",
        "crea_time": "2024-08-29T17:46:13.119568710+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:13.119568710+02:00",
        "modi_user": "api",
        "path": "/quinn/latest/quinn/",
        "scheme": "https",
        "title": "quinn - Rust",
        "uri_uuid": "a86573a0b01c93947d9a376706987adb8ce172b4182b11a666af22112c7b0b11",
        "url": "https://docs.rs/quinn/latest/quinn/"
    },
    {
        "auto_descr": "I'm creating this issue to explore the possibility of developing a spec for gRPC-over-HTTP/3. HTTP/3 is currently an IETF draft, available to view at https://quicwg.org/base-drafts/draft-ietf-quic-http.html. Edit by @ejona86: If you want...",
        "crea_time": "2024-08-29T17:46:13.329212349+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:13.329212349+02:00",
        "modi_user": "api",
        "path": "/grpc/grpc/issues/19126",
        "scheme": "https",
        "title": "Support gRPC over HTTP/3 · Issue #19126 · grpc/grpc · GitHub",
        "uri_uuid": "63d30fbeddb4f0c39f2de81b8cddc42b195e9a6c01d0423e08e49bf14ffc3805",
        "url": "https://github.com/grpc/grpc/issues/19126"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:15.410307178+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:15.410307178+02:00",
        "modi_user": "api",
        "path": "/crates/epochs",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "a70cdaa1442ce062633470f056278da83074d1667ad7449c7825217363b937b9",
        "url": "https://crates.io/crates/epochs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:16.045144797+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:16.045144797+02:00",
        "modi_user": "api",
        "path": "/wiki/Julian_day",
        "scheme": "https",
        "title": "Julian day - Wikipedia",
        "uri_uuid": "10051a9fa03cf5885395283a189c6ffa11de0981ea374f5acc2e02b41acd1e9a",
        "url": "https://en.wikipedia.org/wiki/Julian_day"
    },
    {
        "auto_descr": "Convert various epoch times to chrono::NaiveDateTime times in Rust. - oylenshpeegul/Epochs-rust",
        "crea_time": "2024-08-29T17:46:16.431280990+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:16.431280990+02:00",
        "modi_user": "api",
        "path": "/oylenshpeegul/Epochs-rust",
        "scheme": "https",
        "title": "GitHub - oylenshpeegul/Epochs-rust: Convert various epoch times to chrono::NaiveDateTime times in Rust.",
        "uri_uuid": "68455fd799d4fe245ae9aadc69775d123608e4937746e5b0dc5b5c92b6121cb6",
        "url": "https://github.com/oylenshpeegul/Epochs-rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:17.193133957+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:17.193133957+02:00",
        "modi_user": "api",
        "path": "/crates/epochs/reverse_dependencies",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "06084a2bcfed75169d9227ca47384a1ef191b1791a203dbb2c2c6b24ab37f326",
        "url": "https://crates.io/crates/epochs/reverse_dependencies"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:17.397457121+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:17.397457121+02:00",
        "modi_user": "api",
        "path": "/crates/cargo-semver-checks",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c87acf4d807690ce2ab0955f74ff392c17eab2caaaa92de1034fe519bffc7392",
        "url": "https://crates.io/crates/cargo-semver-checks"
    },
    {
        "auto_descr": "Windows file metadata / forensic tool. Contribute to theflakes/fmd development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:17.606884943+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:17.606884943+02:00",
        "modi_user": "api",
        "path": "/theflakes/fmd/blob/main/Cargo.toml",
        "scheme": "https",
        "title": "fmd/Cargo.toml at main · theflakes/fmd · GitHub",
        "uri_uuid": "3df5b1e6ee010e810e76615d9466784219ee01c67168acca0f0fa75ec848faf7",
        "url": "https://github.com/theflakes/fmd/blob/main/Cargo.toml#L27"
    },
    {
        "auto_descr": "rust moonboard api. Contribute to rroohhh/moonboard-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:18.137262232+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:18.137262232+02:00",
        "modi_user": "api",
        "path": "/rroohhh/moonboard-rs/blob/master/Cargo.toml",
        "scheme": "https",
        "title": "moonboard-rs/Cargo.toml at master · rroohhh/moonboard-rs · GitHub",
        "uri_uuid": "f3b1240f3a5bdaebd7ab1049cbcff89fcd5a05815185f0b1f9f7049310bf13a8",
        "url": "https://github.com/rroohhh/moonboard-rs/blob/master/Cargo.toml#L20"
    },
    {
        "auto_descr": "Contribute to The0x539/dtui development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:18.717481985+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:18.717481985+02:00",
        "modi_user": "api",
        "path": "/The0x539/dtui/blob/trunk/Cargo.toml",
        "scheme": "https",
        "title": "dtui/Cargo.toml at trunk · The0x539/dtui · GitHub",
        "uri_uuid": "07923525d3e726784ee7b0b371a79fa69561b4b9d7bfbb6d4a17f509353782c1",
        "url": "https://github.com/The0x539/dtui/blob/trunk/Cargo.toml#L19"
    },
    {
        "auto_descr": "Parser to analyze MS OLE2 files (Structured Storage, Compound File Binary Format) and MS Office documents. - ole-rs/common/Cargo.toml at master · marirs/ole-rs",
        "crea_time": "2024-08-29T17:46:19.245336110+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:19.245336110+02:00",
        "modi_user": "api",
        "path": "/marirs/ole-rs/blob/master/common/Cargo.toml",
        "scheme": "https",
        "title": "ole-rs/common/Cargo.toml at master · marirs/ole-rs · GitHub",
        "uri_uuid": "437d4566e0e5592782ee2ad479de3ff32cbcd27abcacb6eb22fe253bd53dc242",
        "url": "https://github.com/marirs/ole-rs/blob/master/common/Cargo.toml#L11"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:19.889151775+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:19.889151775+02:00",
        "modi_user": "api",
        "path": "/crates/epochs-cli",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d9c7323327007ac49d90b99be789d73ae66a0f9ad2e20344d996b2f7226754cd",
        "url": "https://crates.io/crates/epochs-cli"
    },
    {
        "auto_descr": "It seems there are new UUID formats, two of which have timestamps in them!\nPerl   A while back, I wrote is_epoch, a little tool to guess if a given string has a timestamp in it. It is written in Perl and comes with the Time::Moment::Epoch module (here is the motivation for that). I decided to add support for these new UUIDs.\n Until now, only UUIDv1 contained a timestamp, so is_epoch ignored other UUIDs.",
        "crea_time": "2024-08-29T17:46:20.108053+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:20.108053+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20220703/",
        "scheme": "https",
        "title": "\n  New UUIDs · oylenshpeegul\n",
        "uri_uuid": "48c5476a0e9659c24f4dd96e6c0787509d5e3576702a39e710548d1000e502f5",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20220703/"
    },
    {
        "auto_descr": "I came across UUIDv7 in 20 languages, a blog post about UUIDv7. I talked about the new UUIDs a couple of years ago. Since then, they have been approved. This post generates one of them in 20 different languages. I noticed Perl wasn't among them, so I wrote it.\n#!/usr/bin/env perl use v5.40; use Time::HiRes; my $value; # Start with 48 bits of the current time in ms my $milliseconds = int(Time::HiRes::time * 1000); vec($value, 0, 32) = $milliseconds >> 16; vec($value, 2, 16) = $milliseconds; # Add 80 bits of random vec($value, $_ + 6, 8) = int(rand(256)) for 0.",
        "crea_time": "2024-08-29T17:46:20.894846664+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:20.894846664+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20240616/",
        "scheme": "https",
        "title": "\n  UUIDv7 in Perl · oylenshpeegul\n",
        "uri_uuid": "1aca3ee1ef64164d5b2af04b0ec693f278b555748817ccb2ff41f93c7f8ef56f",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20240616/"
    },
    {
        "auto_descr": "In this topic, I will try to review the current landscape of Rust libraries for accounting dates and times. In particular, I will touch on the thorny issues concerning support for time standards and UTC leap seconds. \nTh&hellip;",
        "crea_time": "2024-08-29T17:46:21.711759138+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:21.711759138+02:00",
        "modi_user": "api",
        "path": "/t/the-state-of-time-in-rust-leaps-and-bounds/107620",
        "scheme": "https",
        "title": "The state of time in Rust: leaps and bounds - The Rust Programming Language Forum",
        "uri_uuid": "7a5fef4c916de5a0da0cd4189e9f1cf4bc25ae54048b557f562b6865ed00c73c",
        "url": "https://users.rust-lang.org/t/the-state-of-time-in-rust-leaps-and-bounds/107620"
    },
    {
        "auto_descr": "'Zero To Production In Rust' is a hands-on introduction to backend development in Rust.",
        "crea_time": "2024-08-29T17:46:23.362231280+02:00",
        "crea_user": "api",
        "host": "zero2prod.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:23.362231280+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Zero To Production In Rust - An Introduction To Backend Development",
        "uri_uuid": "153d3be26ca4fbb88977909452f1bfba9044366965cd852fca6faabcb3b305f1",
        "url": "https://zero2prod.com/"
    },
    {
        "auto_descr": "The next evolution of ECS-driven physics for Bevy",
        "crea_time": "2024-08-29T17:46:24.012311519+02:00",
        "crea_user": "api",
        "host": "joonaa.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:24.012311519+02:00",
        "modi_user": "api",
        "path": "/blog/06/avian-0-1",
        "scheme": "https",
        "title": "Introducing Avian Physics 0.1 - Joona Aalto",
        "uri_uuid": "7f295c9683ed7d3f2bcfb59a081bbb77a89016273291f7eae4d32bd28f8a7a05",
        "url": "https://joonaa.dev/blog/06/avian-0-1"
    },
    {
        "auto_descr": "Rust newtype with guarantees  🇺🇦 🦀. Contribute to greyblake/nutype development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:24.991974116+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:24.991974116+02:00",
        "modi_user": "api",
        "path": "/greyblake/nutype",
        "scheme": "https",
        "title": "GitHub - greyblake/nutype: Rust newtype with guarantees  🇺🇦 🦀",
        "uri_uuid": "6b916740eab26a0630e5e8bdf9123f26cc0739a54083cd9bed7b272f168f292e",
        "url": "https://github.com/greyblake/nutype"
    },
    {
        "auto_descr": "CedarDB is a relational-first database that supports all your workloads, from transactional to analytical to graph, accessible through PostgreSQL's tools and SQL dialect.",
        "crea_time": "2024-08-29T17:46:25.822921323+02:00",
        "crea_user": "api",
        "host": "cedardb.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:25.822921323+02:00",
        "modi_user": "api",
        "path": "/blog/german_strings/",
        "scheme": "https",
        "title": "Why German Strings are Everywhere | CedarDB - The All-In-One-Database",
        "uri_uuid": "18cc93c69e6cf956c96e57896626cab1b06400191380b74e1461d288236587fc",
        "url": "https://cedardb.com/blog/german_strings/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:25.951277852+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:25.951277852+02:00",
        "modi_user": "api",
        "path": "/crates/uom",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f6cc5d671bb22d0d17e5b2569b323c1d63571c134da3216da4f59c2818db6b47",
        "url": "https://crates.io/crates/uom"
    },
    {
        "auto_descr": "         About",
        "crea_time": "2024-08-29T17:46:26.231950172+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:26.231950172+02:00",
        "modi_user": "api",
        "path": "/compact_str/latest/compact_str/",
        "scheme": "https",
        "title": "compact_str - Rust",
        "uri_uuid": "32c40a42c8b486beb5a80d71e0855cdb006a008c7a41f79891a655d1fb8a633b",
        "url": "https://docs.rs/compact_str/latest/compact_str/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:46:26.435508307+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:26.435508307+02:00",
        "modi_user": "api",
        "path": "/rfcs/2835-project-safe-transmute.html",
        "scheme": "https",
        "title": "2835-project-safe-transmute - The Rust RFC Book",
        "uri_uuid": "3e6a5430958f97aa45d6f77407fe01886c563c739c0313d5ebfcd6d7dc59070d",
        "url": "https://rust-lang.github.io/rfcs/2835-project-safe-transmute.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:26.604335362+02:00",
        "crea_user": "api",
        "host": "devblogs.microsoft.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:26.604335362+02:00",
        "modi_user": "api",
        "path": "/oldnewthing/20240510-00/",
        "scheme": "https",
        "title": "An informal comparison of the three major implementations of std::string - The Old New Thing",
        "uri_uuid": "f77afa8313e7bdd88fc468610efe75a4dadec3533606166626bdd439cf46b746",
        "url": "https://devblogs.microsoft.com/oldnewthing/20240510-00/?p=109742"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:27.017671183+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:27.017671183+02:00",
        "modi_user": "api",
        "path": "/2024/schedule/event/fosdem-2024-2682-semver-in-the-rust-ecosystem-breakage-tooling-and-edge-cases/",
        "scheme": "https",
        "title": "FOSDEM 2024 - SemVer in the Rust ecosystem: breakage, tooling, and edge cases",
        "uri_uuid": "7c1114a48b50f6b2ca5d4080066142edb82c8795fe9bda212ea64f14742f92f0",
        "url": "https://fosdem.org/2024/schedule/event/fosdem-2024-2682-semver-in-the-rust-ecosystem-breakage-tooling-and-edge-cases/"
    },
    {
        "auto_descr": "Rust programming in German. Contribute to michidk/rost development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:27.196780484+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:27.196780484+02:00",
        "modi_user": "api",
        "path": "/michidk/rost",
        "scheme": "https",
        "title": "GitHub - michidk/rost: Rust programming in German.",
        "uri_uuid": "f8a0696d6be7306bfb421ed765d9a0f94fb081025556c21cc409b89b8768f24e",
        "url": "https://github.com/michidk/rost"
    },
    {
        "auto_descr": "What does it actually mean to introduce Rust in an existing project, and having it communicate with other languages in the code base? This article launches a series of blog posts that provide guid ...",
        "crea_time": "2024-08-29T17:46:27.906991263+02:00",
        "crea_user": "api",
        "host": "tweedegolf.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:27.906991263+02:00",
        "modi_user": "api",
        "path": "/en/blog/123/mix-in-rust",
        "scheme": "https",
        "title": "Tweede golf",
        "uri_uuid": "f63a3496c19ba23c85d4898e98ed30487e8880c13f2b5fe666cc4776b6843639",
        "url": "https://tweedegolf.nl/en/blog/123/mix-in-rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:28.255236628+02:00",
        "crea_user": "api",
        "host": "kerkour.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:28.255236628+02:00",
        "modi_user": "api",
        "path": "/rust-http-ecosystem-2024",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f80bfdef16ce595afe151800ee6959835af978ca3074a58e304540ffb2da9b66",
        "url": "https://kerkour.com/rust-http-ecosystem-2024"
    },
    {
        "auto_descr": "This tutorial, video, and repo are a deep dive into the concept of cancellation safety in async code using Tokio and Rust. It affects the tokio::select! macro, and what happens to the racing Futures that don’t win. The examples provided here, along with the video, will go over both code that is is cancellation safe and code that is not. These examples reflect real-world patterns, and are a generalized form of them.",
        "crea_time": "2024-08-29T17:46:28.689293757+02:00",
        "crea_user": "api",
        "host": "developerlife.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:28.689293757+02:00",
        "modi_user": "api",
        "path": "/2024/07/10/rust-async-cancellation-safety-tokio/",
        "scheme": "https",
        "title": "Build with Naz : Rust async in practice tokio::select!, actor pattern & cancel safety | developerlife.com",
        "uri_uuid": "886815436199b521ad29f0c852a7463a8448ddc8742f6d0525b599cd6a1f5f37",
        "url": "https://developerlife.com/2024/07/10/rust-async-cancellation-safety-tokio/"
    },
    {
        "auto_descr": "There are several cases where applications are developed for extreme performance and choosing the cores to be used for an application is required. For instance…",
        "crea_time": "2024-08-29T17:46:29.107836690+02:00",
        "crea_user": "api",
        "host": "blog.veeso.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:29.107836690+02:00",
        "modi_user": "api",
        "path": "/blog/en/how-to-configure-cpu-cores-to-be-used-on-a-tokio-with-core--affinity/",
        "scheme": "https",
        "title": "How to configure CPU cores to be used in a Tokio application with core_affinity",
        "uri_uuid": "137c4e78930bf2b4f0bbd470d415979f2de256b0ba39b3d579f34f83a6882d2d",
        "url": "https://blog.veeso.dev/blog/en/how-to-configure-cpu-cores-to-be-used-on-a-tokio-with-core--affinity/"
    },
    {
        "auto_descr": "For a fun side project recently I needed to put a linux computer’s wifi card into “access point” mode. I was working from Rust and so, even though I could probably have just called out to the nmcli command line tool, I wanted to try to do the whole thing from within my binary. Fortunately, NetworkManager has a D-Bus API that exposes basically all the configuration options available. Also fortunately, Rust has an extensive and fairly well documented D-Bus crate called zbus.",
        "crea_time": "2024-08-29T17:46:29.513353472+02:00",
        "crea_user": "api",
        "host": "rbs.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:29.513353472+02:00",
        "modi_user": "api",
        "path": "/2024/07/network-manager-and-rusts-zbus/",
        "scheme": "https",
        "title": "Network Manager and Rust's zbus",
        "uri_uuid": "af3bbb4200b05e0cb9ce9e634546785ef53a2717a47ad0795adb37332ca045ab",
        "url": "https://rbs.io/2024/07/network-manager-and-rusts-zbus/"
    },
    {
        "auto_descr": "Learn how experts write real production Rust macros with macro_rules!",
        "crea_time": "2024-08-29T17:46:30.037620516+02:00",
        "crea_user": "api",
        "host": "www.howtocodeit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:30.037620516+02:00",
        "modi_user": "api",
        "path": "/articles/writing-production-rust-macros-with-macro-rules",
        "scheme": "https",
        "title": "Writing production Rust macros with macro_rules!",
        "uri_uuid": "f04a260989e9ff4fdce7378cc87080599ffec6e589decb7d4f87fe888351b986",
        "url": "https://www.howtocodeit.com/articles/writing-production-rust-macros-with-macro-rules"
    },
    {
        "auto_descr": "Inline Python code directly in your Rust code.",
        "crea_time": "2024-08-29T17:46:30.601025566+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:30.601025566+02:00",
        "modi_user": "api",
        "path": "/inline-python/latest/inline_python/",
        "scheme": "https",
        "title": "inline_python - Rust",
        "uri_uuid": "ac62d9b03b8f1a665302f5fff943d4ae276084c8fed3fcae89297b82990cfa3b",
        "url": "https://docs.rs/inline-python/latest/inline_python/"
    },
    {
        "auto_descr": "Is your feature request related to a problem? Please describe. The tokio::select! macro is something used quite often in real-world code. However, rustfmt cannot format code inside that call. Describe the solution you'd like Maybe it wou...",
        "crea_time": "2024-08-29T17:46:30.814762630+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:30.814762630+02:00",
        "modi_user": "api",
        "path": "/tokio-rs/tokio/issues/5441",
        "scheme": "https",
        "title": "Format tokio::select! with rustfmt · Issue #5441 · tokio-rs/tokio · GitHub",
        "uri_uuid": "30fa1690f2fd699f42923b0e7ba6da1f48a2e6a98f5248e6f1a32d48b1ebe7d7",
        "url": "https://github.com/tokio-rs/tokio/issues/5441"
    },
    {
        "auto_descr": "Slint, the declarative GUI toolkit for Rust, C++, JavaScript, and Python. Build elegant, modern, stylish, native GUIs for Embedded, Desktop, and Web. Complete your UI design through quick iterations using Live Preview. Tweak everything, like colors, animations, geometries, or text. and verify the changes instantly. Build a responsive UI from a single design. Target different screen resolution and sizes with flexible layouts. Enjoy flexibility that only a native application can provide: Access full operating system APIs, utilize all CPU and GPU cores, connect to any peripheral. Slint compiles your UI design to machine code. Achieve low footprint and minimal resource consumption. The Slint runtime fits in less than 300KiB RAM, features a reactive property system, and is built with Rust. Deliver a smooth user experience. Slint uses the optimal graphics rendering method: GPU accelerated, DMA2D, Framebuffer, or Linebuffer. Continue using your favourite IDE. Choose between our generic language server and VS Code extension: Enjoy code completion, live-preview, code navigation, diagnostics, and syntax highlighting.",
        "crea_time": "2024-08-29T17:46:31.666237693+02:00",
        "crea_user": "api",
        "host": "slint.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:31.666237693+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Slint |\n            Declarative GUI for Rust, C++, JavaScript & Python\n        ",
        "uri_uuid": "1fe449e7568f1bc19d56e5201f64c48c4c66ca68e0958392d54b32e9394219eb",
        "url": "https://slint.dev/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:46:32.202453533+02:00",
        "crea_user": "api",
        "host": "releases.slint.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:32.202453533+02:00",
        "modi_user": "api",
        "path": "/1.3.2/docs/tutorial/rust/",
        "scheme": "https",
        "title": "Introduction - Slint Memory Game Tutorial (Rust)",
        "uri_uuid": "b52300cf6788f97feeffddea5c1a99b6b1aeb07f50088d51217579337e4d7c20",
        "url": "https://releases.slint.dev/1.3.2/docs/tutorial/rust/"
    },
    {
        "auto_descr": "egui: an easy-to-use immediate mode GUI in Rust that runs on both web and native - emilk/egui",
        "crea_time": "2024-08-29T17:46:32.716535219+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:32.716535219+02:00",
        "modi_user": "api",
        "path": "/emilk/egui",
        "scheme": "https",
        "title": "GitHub - emilk/egui: egui: an easy-to-use immediate mode GUI in Rust that runs on both web and native",
        "uri_uuid": "04152f9f3a10a7d4fd2d393e689e699d3386c04e02ced14f1774cae60ba602ba",
        "url": "https://github.com/emilk/egui"
    },
    {
        "auto_descr": "Leptos is a cutting-edge Rust web framework designed for building fast, reliable, web applications.",
        "crea_time": "2024-08-29T17:46:33.619729260+02:00",
        "crea_user": "api",
        "host": "leptos.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:33.619729260+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Home - Leptos",
        "uri_uuid": "977c5d869e3fdec2f35851cc3113046429e1e2f59b0595646045b22d1452790f",
        "url": "https://leptos.dev/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:34.336864332+02:00",
        "crea_user": "api",
        "host": "www.egui.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:34.336864332+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "egui – An immediate mode GUI written in Rust",
        "uri_uuid": "3d653e5354561a4e5eee5d69a080d05c694b8892af1f26605adb411171bee253",
        "url": "https://www.egui.rs/#demo"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:34.678639353+02:00",
        "crea_user": "api",
        "host": "makepad.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:34.678639353+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Makepad",
        "uri_uuid": "4e883c4c42889a78d0d9862730615304b2361ba067f439961045b73c1aa95519",
        "url": "https://makepad.dev/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:46:34.877355344+02:00",
        "crea_user": "api",
        "host": "releases.slint.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:34.877355344+02:00",
        "modi_user": "api",
        "path": "/1.6.0/docs/quickstart/rust/",
        "scheme": "https",
        "title": "Introduction - Slint Memory Game QuickStart (Rust)",
        "uri_uuid": "d4cefc7e1964d5525b27e5638af9d9859934e2b0ffb67f3f783c68a073e97c09",
        "url": "https://releases.slint.dev/1.6.0/docs/quickstart/rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:35.152716998+02:00",
        "crea_user": "api",
        "host": "releases.slint.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:35.152716998+02:00",
        "modi_user": "api",
        "path": "/1.7.0/docs/slint/src/quickstart/",
        "scheme": "https",
        "title": "Quickstart - Slint 1.7.0 Reference",
        "uri_uuid": "fb06519a415b672c6e2acbd2e6d300ce6aadc0147959307bdbf20107dd21b525",
        "url": "https://releases.slint.dev/1.7.0/docs/slint/src/quickstart/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:35.595643122+02:00",
        "crea_user": "api",
        "host": "snapshots.slint.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:35.595643122+02:00",
        "modi_user": "api",
        "path": "/master/editor/",
        "scheme": "https",
        "title": "SlintPad",
        "uri_uuid": "221a966550e4a1826dd0000453ea181b2168471c8a1e405766f5d2d7e5e4398e",
        "url": "https://snapshots.slint.dev/master/editor/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:35.853327815+02:00",
        "crea_user": "api",
        "host": "makepad.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:35.853327815+02:00",
        "modi_user": "api",
        "path": "/makepad/examples/ironfish/src/index.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "499153f027a250e12b673f71f4ba505f40e4fd0fe452b89282963dbe131655f9",
        "url": "https://makepad.nl/makepad/examples/ironfish/src/index.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:36.472088882+02:00",
        "crea_user": "api",
        "host": "makepad.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:36.472088882+02:00",
        "modi_user": "api",
        "path": "/makepad/examples/fractal_zoom/src/index.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "94d576cfb3724b9df1c19534c4dced09285043b416f30d2d448d71cdbd4a2d52",
        "url": "https://makepad.nl/makepad/examples/fractal_zoom/src/index.html"
    },
    {
        "auto_descr": "Aktuelle Stellenangebote bei gematik GmbH! Karriere und interessante Jobs mit Perspektive über eine komfortable und einfache Online-Bewerbung in unserem Jobportal.",
        "crea_time": "2024-08-29T17:46:37.031533985+02:00",
        "crea_user": "api",
        "host": "www.gematik.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:37.031533985+02:00",
        "modi_user": "api",
        "path": "/stellenangebote/stellenangebote.html",
        "scheme": "https",
        "title": "gematik GmbH",
        "uri_uuid": "a11d8b9a9418eaeae992d902fd85fadf38fe9404b40d771717b002e2916bc599",
        "url": "https://www.gematik.de/stellenangebote/stellenangebote.html"
    },
    {
        "auto_descr": "Mit der Software und Hardware von Brainlab werden Daten generiert und optimiert, um radiochirurgische Behandlungen & die Effizienz von Operationen zu verbessern",
        "crea_time": "2024-08-29T17:46:37.615270655+02:00",
        "crea_user": "api",
        "host": "www.brainlab.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:37.615270655+02:00",
        "modi_user": "api",
        "path": "/de/",
        "scheme": "https",
        "title": "Vordenker und Wegbereiter in der Medizintechnik | Brainlab",
        "uri_uuid": "c206a376c574f8288f62e42bbbc601f3db7808dca5315460d61d506edca0669b",
        "url": "https://www.brainlab.com/de/"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:46:38.548895259+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:38.548895259+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "6aa6b344aee1b7061556b92d1ef16292f72f081f5f87bbd38bea3578f707eee4",
        "url": "https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=4287aa0e426e984657a89e785683c889"
    },
    {
        "auto_descr": "Blazingly 🔥 fast 🚀 memory vulnerabilities, written in 100% safe Rust. 🦀 - Speykious/cve-rs",
        "crea_time": "2024-08-29T17:46:38.692289511+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:38.692289511+02:00",
        "modi_user": "api",
        "path": "/Speykious/cve-rs",
        "scheme": "https",
        "title": "GitHub - Speykious/cve-rs: Blazingly 🔥 fast 🚀 memory vulnerabilities, written in 100% safe Rust. 🦀",
        "uri_uuid": "f7758439f8890f91a7df715689115d8f1f4f144b3f1aff3d760c0db945e04daf",
        "url": "https://github.com/Speykious/cve-rs"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:46:39.348476371+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:39.348476371+02:00",
        "modi_user": "api",
        "path": "/polonius/current_status.html",
        "scheme": "https",
        "title": "Current status and roadmap - Polonius",
        "uri_uuid": "e84fbdbc6d5321d93134cf368878bb1097fca6d142bdea6d172a0eda1965c2f4",
        "url": "https://rust-lang.github.io/polonius/current_status.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:39.577108589+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:39.577108589+02:00",
        "modi_user": "api",
        "path": "/babysteps/",
        "scheme": "https",
        "title": "baby steps",
        "uri_uuid": "0f21a9b4865cfdf273d6dbc61f1e593eb12c8215020d2f627e431f16ffae8b08",
        "url": "https://smallcultfollowing.com/babysteps/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:40.313863580+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:40.313863580+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2024/06/02/the-borrow-checker-within/",
        "scheme": "https",
        "title": "The borrow checker within · baby steps",
        "uri_uuid": "1e72a0542729b347b0ae21aec4baaedc3169d49a95f0afda2fde819bb9099120",
        "url": "https://smallcultfollowing.com/babysteps/blog/2024/06/02/the-borrow-checker-within/"
    },
    {
        "auto_descr": "About Leptos",
        "crea_time": "2024-08-29T17:46:41.308445218+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:41.308445218+02:00",
        "modi_user": "api",
        "path": "/leptos/latest/leptos/",
        "scheme": "https",
        "title": "leptos - Rust",
        "uri_uuid": "aa7de96eeb643b0c84119305ba4637be53190c1869e04d1be3e865a3638b43b4",
        "url": "https://docs.rs/leptos/latest/leptos/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:41.557450358+02:00",
        "crea_user": "api",
        "host": "codesandbox.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:41.557450358+02:00",
        "modi_user": "api",
        "path": "/p/devbox/leptos-playground-mpk3dr",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c09c87789e057507a2694060743ec7d1b10aec084ad5e54f6eb7a08cc97807ef",
        "url": "https://codesandbox.io/p/devbox/leptos-playground-mpk3dr"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:41.730420435+02:00",
        "crea_user": "api",
        "host": "www.twitch.tv",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:41.730420435+02:00",
        "modi_user": "api",
        "path": "/henningbastelt",
        "scheme": "https",
        "title": "Twitch",
        "uri_uuid": "eeed3c35a1a00d9d963e9edd4b19b23531ebfa618487ee3d9a8ed99a724a09a0",
        "url": "https://www.twitch.tv/henningbastelt"
    },
    {
        "auto_descr": "Version 6 of Rustlings is a rewrite providing a ton of features and improvements",
        "crea_time": "2024-08-29T17:46:41.903292390+02:00",
        "crea_user": "api",
        "host": "mo8it.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:41.903292390+02:00",
        "modi_user": "api",
        "path": "/blog/rustlings-rewrite/",
        "scheme": "https",
        "title": "Rustlings Rewrite",
        "uri_uuid": "e83aa7bea030daca2e203c9e9586eedef003f7407d5bc2ec60be2aa41de36f3d",
        "url": "https://mo8it.com/blog/rustlings-rewrite/"
    },
    {
        "auto_descr": "This will be the first in a series of Rust tutorials. We will start from the very basics on how to install it and move into the realm of borrowing, traits and so much more. And how will we learn all…",
        "crea_time": "2024-08-29T17:46:44.632953044+02:00",
        "crea_user": "api",
        "host": "blog.devgenius.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:44.632953044+02:00",
        "modi_user": "api",
        "path": "/master-rust-by-playing-video-games-cf5f7d8b1e28",
        "scheme": "https",
        "title": "Master Rust by Playing Video Games! | by Jonathan Österberg | Dev Genius",
        "uri_uuid": "c6d97f4715e5281370efed619109213b485f7bd20be0f04b7a1aea7e2d288eeb",
        "url": "https://blog.devgenius.io/master-rust-by-playing-video-games-cf5f7d8b1e28?gi=dd42ea06a2f4"
    },
    {
        "auto_descr": "This article is my journey into understanding Rust linking mainly in Unix-like systems, Symbol resolution, ELF Format, Rust compilation process, and manually linking static Rust libraries.",
        "crea_time": "2024-08-29T17:46:45.876380005+02:00",
        "crea_user": "api",
        "host": "blog.shrirambalaji.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:45.876380005+02:00",
        "modi_user": "api",
        "path": "/posts/resolving-rust-symbols/",
        "scheme": "https",
        "title": "Resolving Rust Symbols • Shriram Balaji's Blog",
        "uri_uuid": "ccf691b801a823bfc669223ba79f723652f949a59c64747ab9e435d7dcb0bca5",
        "url": "https://blog.shrirambalaji.com/posts/resolving-rust-symbols/"
    },
    {
        "auto_descr": "This post will go over the quickest way to get your Rust code running on the web in 2024!",
        "crea_time": "2024-08-29T17:46:46.229123347+02:00",
        "crea_user": "api",
        "host": "dzfrias.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:46.229123347+02:00",
        "modi_user": "api",
        "path": "/blog/rust-wasm-minimal-setup/",
        "scheme": "https",
        "title": "The Minimal Rust-Wasm Setup for 2024 - dzfrias",
        "uri_uuid": "a96f23448edea092f55e84d64f26b6d91e2a0a4da8b32b55eb67756a61930646",
        "url": "https://dzfrias.dev/blog/rust-wasm-minimal-setup/"
    },
    {
        "auto_descr": "The goal is to build the ultimate robot killer. You’ll compete against other players’ robots in a ranked system — winning more matches will boost your rank. It’s that simple! Additionally, a monthly…",
        "crea_time": "2024-08-29T17:46:46.520583494+02:00",
        "crea_user": "api",
        "host": "blog.devgenius.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:46.520583494+02:00",
        "modi_user": "api",
        "path": "/master-rust-by-playing-video-games-part-2-game-mechanics-110173e9986a",
        "scheme": "https",
        "title": "Master Rust by Playing Video Games (Part 2) — Game Mechanics | by Jonathan Österberg | Jun, 2024 | Dev Genius",
        "uri_uuid": "1a1d31de0c6c48750bd7013f312028064530bff004688ccc3d995fa47108084d",
        "url": "https://blog.devgenius.io/master-rust-by-playing-video-games-part-2-game-mechanics-110173e9986a"
    },
    {
        "auto_descr": "Instead of a garbage collector, Rust offers manual control over exactly how values are stored, and when they are destroyed.\nThis has benefits to predictability, performance, and even correctness (since it is a part of what allows Rust to avoid mutable aliasing), but the price is the complexity of that control, and the multiplicity of storage types.\n…",
        "crea_time": "2024-08-29T17:46:47.579690194+02:00",
        "crea_user": "api",
        "host": "ssbr.xyz",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:47.579690194+02:00",
        "modi_user": "api",
        "path": "/blog/rust-has-three-reference-types/",
        "scheme": "https",
        "title": "::ssbr • Rust has three reference types!",
        "uri_uuid": "4a86d7b863df68c8b67228fdb71ed5c9925fb44ca419c52069a36ac3ecc3e7a4",
        "url": "https://ssbr.xyz/blog/rust-has-three-reference-types/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:48.158610486+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:48.158610486+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2024/06/21/claim-auto-and-otherwise/https://smallcultfollowing.com/babysteps/blog/2024/06/26/claim-followup-1/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e59c50aed9504ea10fbef2817a8f1622c525256fc47f9022385f00bd32f73a5e",
        "url": "https://smallcultfollowing.com/babysteps/blog/2024/06/21/claim-auto-and-otherwise/https://smallcultfollowing.com/babysteps/blog/2024/06/26/claim-followup-1/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:49.233388467+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:49.233388467+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2024/06/21/claim-auto-and-otherwise/",
        "scheme": "https",
        "title": "Claiming, auto and otherwise · baby steps",
        "uri_uuid": "72377fecdc7ff7c17deba5b89bdd26cbbbb8d04f85d6c45169a590fbf24336f5",
        "url": "https://smallcultfollowing.com/babysteps/blog/2024/06/21/claim-auto-and-otherwise/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:50.037674705+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:50.037674705+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2024/06/26/claim-followup-1/",
        "scheme": "https",
        "title": "More thoughts on claiming · baby steps",
        "uri_uuid": "e235ae026786cbd918284f8fcd27310363ab27f880bc6282b506462a7bad7ace",
        "url": "https://smallcultfollowing.com/babysteps/blog/2024/06/26/claim-followup-1/"
    },
    {
        "auto_descr": "A 16-bit floating point type (specifically, the “binary16” type defined in IEEE 754-2008).",
        "crea_time": "2024-08-29T17:46:50.822484711+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:50.822484711+02:00",
        "modi_user": "api",
        "path": "/std/primitive.f16.html",
        "scheme": "https",
        "title": "f16 - Rust",
        "uri_uuid": "f84252e5254a5685e2ea9d97dc9a08736dc815b94d3c04ca2432d1d4d3fcea0c",
        "url": "https://doc.rust-lang.org/std/primitive.f16.html"
    },
    {
        "auto_descr": "A 128-bit floating point type (specifically, the “binary128” type defined in IEEE 754-2008).",
        "crea_time": "2024-08-29T17:46:51.193541739+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:51.193541739+02:00",
        "modi_user": "api",
        "path": "/std/primitive.f128.html",
        "scheme": "https",
        "title": "f128 - Rust",
        "uri_uuid": "70c157d805c9e4a4a37151546c5eca4efd20bff109d535cced5866724b5f2f8e",
        "url": "https://doc.rust-lang.org/std/primitive.f128.html"
    },
    {
        "auto_descr": "First episode of the #mkown series.In this video I write my own SQL database from scratch without using any libraries or third party dependencies. Only the s...",
        "crea_time": "2024-08-29T17:46:51.482201259+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:51.482201259+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Writing My Own Database From Scratch - YouTube",
        "uri_uuid": "16d426aa82cdc241b0314b90325491f0e4702d5705ff1dd110ab6fa6c3fd215c",
        "url": "https://www.youtube.com/watch?v=5Pc18ge9ohI"
    },
    {
        "auto_descr": "We’re on a journey to advance and democratize artificial intelligence through open source and open science.",
        "crea_time": "2024-08-29T17:46:53.791667745+02:00",
        "crea_user": "api",
        "host": "huggingface.co",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:53.791667745+02:00",
        "modi_user": "api",
        "path": "/docs/optimum/concept_guides/quantization",
        "scheme": "https",
        "title": "Quantization",
        "uri_uuid": "7c6f59b3c153f3eeaf323d40a42224362eb26f044144ef5d82343e78d1b7e468",
        "url": "https://huggingface.co/docs/optimum/concept_guides/quantization"
    },
    {
        "auto_descr": "Raspberry Pi GPIO GUI. Contribute to andrewdavidmackenzie/pigg development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:46:54.295033827+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:54.295033827+02:00",
        "modi_user": "api",
        "path": "/andrewdavidmackenzie/pigg/releases/tag/0.2.0",
        "scheme": "https",
        "title": "Release v0.2.0 · andrewdavidmackenzie/pigg · GitHub",
        "uri_uuid": "b22c2ddd7914e0c959c322c81bd44354ae5a1ff6f35705047f0a073717c0f82a",
        "url": "https://github.com/andrewdavidmackenzie/pigg/releases/tag/0.2.0"
    },
    {
        "auto_descr": "Learn to model and handle every conceivable error scenario using idomatic Rust.",
        "crea_time": "2024-08-29T17:46:54.937293759+02:00",
        "crea_user": "api",
        "host": "www.howtocodeit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:54.937293759+02:00",
        "modi_user": "api",
        "path": "/articles/the-definitive-guide-to-rust-error-handling",
        "scheme": "https",
        "title": "The Definitive Guide to Rust Error Handling",
        "uri_uuid": "2945894e13681534c8c23bb5c97be6a9a2590c81054e100179a607b75c1f6f9c",
        "url": "https://www.howtocodeit.com/articles/the-definitive-guide-to-rust-error-handling#handling-rust-errors-with-anyhow"
    },
    {
        "auto_descr": "This tutorial and video are a comprehensive guide to parsing with nom. We cover the basics of parsing and how to use nom to parse a string into a data structure. And more complex topics like human readable error reporting, and building up complex parsers. We will create a variety of different examples ranging from parsing simple CSS like syntax to a full blown Markdown parser.",
        "crea_time": "2024-08-29T17:46:55.291240857+02:00",
        "crea_user": "api",
        "host": "developerlife.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:55.291240857+02:00",
        "modi_user": "api",
        "path": "/2023/02/20/guide-to-nom-parsing/",
        "scheme": "https",
        "title": "Build with Naz : Comprehensive guide to nom parsing | developerlife.com",
        "uri_uuid": "2d2fd916e566c652f05689e0d183bf77197aa615aef3cfe6eae361ebf562ee0c",
        "url": "https://developerlife.com/2023/02/20/guide-to-nom-parsing/"
    },
    {
        "auto_descr": "The uuid library added support for the newly specified version 7 UUID format in its 1.6.0 release recently. You can use version 7 UUIDs to generate random but sortable identifiers that make great keys in database tables. They combine a Unix timestamp in millisecond precision, a counter of user-specified width, and random data, in that order into a unique identifier. The initial implementation in uuid didn’t use a counter when generating version 7 UUIDs, just the timestamp and random data. That simplified the implementation, but means this code may fail:",
        "crea_time": "2024-08-29T17:46:55.686503089+02:00",
        "crea_user": "api",
        "host": "kodraus.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:55.686503089+02:00",
        "modi_user": "api",
        "path": "/rust/2024/06/24/uuid-v7-counters.html",
        "scheme": "https",
        "title": "uuid now properly supports version 7 counters | Some words",
        "uri_uuid": "5ca0d88d7b51cd01676cb9fe84dbd1c5a2c335d675e8a8707a12949184a2ca1e",
        "url": "https://kodraus.github.io/rust/2024/06/24/uuid-v7-counters.html"
    },
    {
        "auto_descr": "TUI framework and developer productivity apps in Rust 🦀 - r3bl-org/r3bl-open-core",
        "crea_time": "2024-08-29T17:46:55.951764814+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:55.951764814+02:00",
        "modi_user": "api",
        "path": "/r3bl-org/r3bl-open-core",
        "scheme": "https",
        "title": "GitHub - r3bl-org/r3bl-open-core: TUI framework and developer productivity apps in Rust 🦀",
        "uri_uuid": "6b46a7e9742663fda4d10140b4f7001bbd8de57ff5a605e14be98043a6515e00",
        "url": "https://github.com/r3bl-org/r3bl-open-core"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:46:56.929875093+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:56.929875093+02:00",
        "modi_user": "api",
        "path": "/crates/caffe2op-concatsplit",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "acecbfc01338489b463ad747f6633be80e8c6d2d48b3c8b485b2e4897928406e",
        "url": "https://crates.io/crates/caffe2op-concatsplit"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:46:57.154986990+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:57.154986990+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "ac921b47889dda5de995931fc506edbdcc8fcf58ea3286e3a6c67020ab11ca90",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=5bac261c92083f887b67e06a6d5990d0"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:46:57.288058727+02:00",
        "crea_user": "api",
        "host": "bevy-cheatbook.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:57.288058727+02:00",
        "modi_user": "api",
        "path": "/pitfalls/performance.html",
        "scheme": "https",
        "title": "Slow Performance - Unofficial Bevy Cheat Book",
        "uri_uuid": "dbad401dfce92c6f7d28433c0736807c2cdb18931ae7bc9422cb6adab2b98971",
        "url": "https://bevy-cheatbook.github.io/pitfalls/performance.html"
    },
    {
        "auto_descr": "Postcard is a binary wire format, a crate providing a `serde` backend, and a growing ecosystem of tools for getting computers, even small embedded ones, prod...",
        "crea_time": "2024-08-29T17:46:57.578272316+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:57.578272316+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Postcard: An Unreasonably Effective Tool for Machine to Machine Communication - James Munns - YouTube",
        "uri_uuid": "885d325613e0fdbc2e52cf989044e121208acb80e973e1eb38b1c68e31afa24d",
        "url": "https://www.youtube.com/watch?v=HtBFvTH5ZKE"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:46:58.275496294+02:00",
        "crea_user": "api",
        "host": "postcard.jamesmunns.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:58.275496294+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Introduction - The Postcard Wire Specification",
        "uri_uuid": "c70a66a72a7c3cf822c3cd50ab0f9f9b4a5be308333f181e1b1eb456a32e1999",
        "url": "https://postcard.jamesmunns.com/"
    },
    {
        "auto_descr": "A gentle introduction to parsing in Rust with Nom",
        "crea_time": "2024-08-29T17:46:58.677117909+02:00",
        "crea_user": "api",
        "host": "blog.adamchalmers.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:58.677117909+02:00",
        "modi_user": "api",
        "path": "/nom-chars/",
        "scheme": "https",
        "title": "Parsing Text with Nom",
        "uri_uuid": "d4a8bd19f11d2298d185073a2052825518c3e94b205ee383b46682e5f39944e2",
        "url": "https://blog.adamchalmers.com/nom-chars/"
    },
    {
        "auto_descr": "Trait for generating responses.",
        "crea_time": "2024-08-29T17:46:58.925263272+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:58.925263272+02:00",
        "modi_user": "api",
        "path": "/axum/latest/axum/response/trait.IntoResponse.html",
        "scheme": "https",
        "title": "IntoResponse in axum::response - Rust",
        "uri_uuid": "8e3c57a5949f724811ca2e8b6cc6bcb590e3328d92812a71d7bb4b287f6b112e",
        "url": "https://docs.rs/axum/latest/axum/response/trait.IntoResponse.html#tymethod.into_response"
    },
    {
        "auto_descr": "Ergonomic and modular web framework built with Tokio, Tower, and Hyper - axum/axum/src/macros.rs at 035c8a36b591bb81b8d107c701ac4b14c0230da3 · tokio-rs/axum",
        "crea_time": "2024-08-29T17:46:59.345214043+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:46:59.345214043+02:00",
        "modi_user": "api",
        "path": "/tokio-rs/axum/blob/035c8a36b591bb81b8d107c701ac4b14c0230da3/axum/src/macros.rs",
        "scheme": "https",
        "title": "axum/axum/src/macros.rs at 035c8a36b591bb81b8d107c701ac4b14c0230da3 · tokio-rs/axum · GitHub",
        "uri_uuid": "4c47d300f92344a2f895ae5d97c39ef180c51e1995da44f1c64d01a5a6de0d7f",
        "url": "https://github.com/tokio-rs/axum/blob/035c8a36b591bb81b8d107c701ac4b14c0230da3/axum/src/macros.rs#L49"
    },
    {
        "auto_descr": "A UTF-8–encoded, growable string.",
        "crea_time": "2024-08-29T17:47:00.514720070+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:00.514720070+02:00",
        "modi_user": "api",
        "path": "/std/string/struct.String.html",
        "scheme": "https",
        "title": "String in std::string - Rust",
        "uri_uuid": "226cf33293dd3a3ea7c86ba6d40ae4649021260fbcf80daaba1ccebb7486d66d",
        "url": "https://doc.rust-lang.org/std/string/struct.String.html#method.leak"
    },
    {
        "auto_descr": "Rust async runtime for educational purposes only. Contribute to zeenix/experiments development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:47:01.227356279+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:01.227356279+02:00",
        "modi_user": "api",
        "path": "/zeenix/experiments/blob/master/static-dbus-signature/src/main.rs",
        "scheme": "https",
        "title": "experiments/static-dbus-signature/src/main.rs at master · zeenix/experiments · GitHub",
        "uri_uuid": "7de4def13dd8c0a20f72ce58a47be15c036db002efcd18c67230bb95ebbbb652",
        "url": "https://github.com/zeenix/experiments/blob/master/static-dbus-signature/src/main.rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:01.889345233+02:00",
        "crea_user": "api",
        "host": "www.phind.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:01.889345233+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "0682dcebd0964c283569842c6b0a2a238cf9a85ba3f20ac2ef97e663ca25d46b",
        "url": "https://www.phind.com/"
    },
    {
        "auto_descr": "Constructs a new `Event`.",
        "crea_time": "2024-08-29T17:47:02.055336963+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:02.055336963+02:00",
        "modi_user": "api",
        "path": "/tracing/latest/tracing/macro.event.html",
        "scheme": "https",
        "title": "event in tracing - Rust",
        "uri_uuid": "d6ba7254add16fa95df98a17ca25197949446eed80123f36258c2d8bc9cafd22",
        "url": "https://docs.rs/tracing/latest/tracing/macro.event.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:47:02.300420248+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:02.300420248+02:00",
        "modi_user": "api",
        "path": "/from-perl-to-rust/strings.html",
        "scheme": "https",
        "title": "Strings - From Perl to Rust",
        "uri_uuid": "8ea623829b77564f15b76064c4b3b3678568997d64b36dbcfa1c418f2e346a95",
        "url": "https://oylenshpeegul.gitlab.io/from-perl-to-rust/strings.html"
    },
    {
        "auto_descr": "A curated list of resources to help you write ergonomic and idiomatic Rust code. Includes tutorials, workshops, and articles by Rust experts.",
        "crea_time": "2024-08-29T17:47:03.095192873+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:03.095192873+02:00",
        "modi_user": "api",
        "path": "/blog/idiomatic-rust-resources/",
        "scheme": "https",
        "title": "Learning Material for Idiomatic Rust | corrode Rust Consulting",
        "uri_uuid": "331c197f2c3b920653a1c62d19c3949f3a1368a13a2238f4bcf6567b5c4de5f5",
        "url": "https://corrode.dev/blog/idiomatic-rust-resources/"
    },
    {
        "auto_descr": "There are many Rust user groups around the world. Here is the full list with location and the number of members.",
        "crea_time": "2024-08-29T17:47:03.402720738+02:00",
        "crea_user": "api",
        "host": "rust.code-maven.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:03.402720738+02:00",
        "modi_user": "api",
        "path": "/user-groups",
        "scheme": "https",
        "title": "Rust Meetup and user groups",
        "uri_uuid": "6f92f2cd6644655abeb0290fd55f96da92d4880e5ee91e9e2129e2963840b617",
        "url": "https://rust.code-maven.com/user-groups"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:47:03.714668708+02:00",
        "crea_user": "api",
        "host": "rust-book.cs.brown.edu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:03.714668708+02:00",
        "modi_user": "api",
        "path": "/ch04-02-references-and-borrowing.html",
        "scheme": "https",
        "title": "References and Borrowing - The Rust Programming Language",
        "uri_uuid": "847afe4a647abd8c7f24132acd647116b2b3ab61fb275bcd1cab986c78e18a94",
        "url": "https://rust-book.cs.brown.edu/ch04-02-references-and-borrowing.html"
    },
    {
        "auto_descr": "Interactively Visualizing Ownership and Borrowing for Rust - rustviz/rustviz",
        "crea_time": "2024-08-29T17:47:07.833705843+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:07.833705843+02:00",
        "modi_user": "api",
        "path": "/rustviz/rustviz",
        "scheme": "https",
        "title": "GitHub - rustviz/rustviz: Interactively Visualizing Ownership and Borrowing for Rust",
        "uri_uuid": "990fb7c215420b95f372f5b3b85afeb57b19f2d881c5f2358868a9b226ebfc67",
        "url": "https://github.com/rustviz/rustviz"
    },
    {
        "auto_descr": "Master programming by recreating your favorite technologies from scratch. - codecrafters-io/build-your-own-x",
        "crea_time": "2024-08-29T17:47:08.864912190+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:08.864912190+02:00",
        "modi_user": "api",
        "path": "/codecrafters-io/build-your-own-x",
        "scheme": "https",
        "title": "GitHub - codecrafters-io/build-your-own-x: Master programming by recreating your favorite technologies from scratch.",
        "uri_uuid": "df6d9515e0ee8d14c390db74c8c0bf65255756edd0d7fcaa0cb4cb7f4eb0a26e",
        "url": "https://github.com/codecrafters-io/build-your-own-x?tab=readme-ov-file"
    },
    {
        "auto_descr": "The Rust Foundation, AdaCore, Arm, Ferrous Systems, OxidOS, HighTec EDV-Systeme GmbH, TrustInSoft, Veecle, and Woven by Toyota have formed a new group dedicated to the responsible use of Rust in safety-critical software.",
        "crea_time": "2024-08-29T17:47:09.665574973+02:00",
        "crea_user": "api",
        "host": "foundation.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:09.665574973+02:00",
        "modi_user": "api",
        "path": "/news/announcing-the-safety-critical-rust-consortium/",
        "scheme": "https",
        "title": "Rust Foundation - Announcing the Safety-Critical Rust Consortium",
        "uri_uuid": "72393d889ce1105e5e08bcbeb5aaedf3064dc044693aeda06c88ad6e57dd9b3f",
        "url": "https://foundation.rust-lang.org/news/announcing-the-safety-critical-rust-consortium/"
    },
    {
        "auto_descr": "Das Safety-Critical Rust Consortium kümmert sich künftig um den verantwortungsvollen Einsatz von Rust in Bereichen wie Verkehr, Biotech und Energiewirtschaft.",
        "crea_time": "2024-08-29T17:47:09.908078309+02:00",
        "crea_user": "api",
        "host": "www.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:09.908078309+02:00",
        "modi_user": "api",
        "path": "/news/Rust-fuer-sicherheitskritische-Systeme-Konsortium-kuemmert-sich-um-den-Einsatz-9761117.html",
        "scheme": "https",
        "title": "\n    Rust für sicherheitskritische Systeme: Konsortium kümmert sich um den Einsatz | heise online\n",
        "uri_uuid": "04bbede30823496e3a4b7887ff41d555358d482f71136a16ed3566293ca9dc84",
        "url": "https://www.heise.de/news/Rust-fuer-sicherheitskritische-Systeme-Konsortium-kuemmert-sich-um-den-Einsatz-9761117.html"
    },
    {
        "auto_descr": "tl;dr",
        "crea_time": "2024-08-29T17:47:10.219886854+02:00",
        "crea_user": "api",
        "host": "lawngno.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:10.219886854+02:00",
        "modi_user": "api",
        "path": "/blog/2024/06/10/divine-provenance.html",
        "scheme": "https",
        "title": "999 crates of Rust on the wall | Gnome home",
        "uri_uuid": "72ef2c83028958533c74e9e780dec297a6d81a1ba25b7a474def238e7bff905a",
        "url": "https://lawngno.me/blog/2024/06/10/divine-provenance.html"
    },
    {
        "auto_descr": "Everything you need to write flexible, future-proof Rust applications using hexagonal architecture.",
        "crea_time": "2024-08-29T17:47:10.538346159+02:00",
        "crea_user": "api",
        "host": "www.howtocodeit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:10.538346159+02:00",
        "modi_user": "api",
        "path": "/articles/master-hexagonal-architecture-rust",
        "scheme": "https",
        "title": "Master hexagonal architecture in Rust",
        "uri_uuid": "635129e9828a83bee11f305245a043cfaa02536fbbee2e238ef3e16f0151f78b",
        "url": "https://www.howtocodeit.com/articles/master-hexagonal-architecture-rust"
    },
    {
        "auto_descr": "miette is an excellent crate that can make error handling in Rust powerful, flexible, and easy to use. It provides a way to create custom error types, add context to errors, and display errors in a user-friendly way. In this article, video, and repo, we’ll explore how to use miette to improve error handling in your Rust applications.",
        "crea_time": "2024-08-29T17:47:11.126177471+02:00",
        "crea_user": "api",
        "host": "developerlife.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:11.126177471+02:00",
        "modi_user": "api",
        "path": "/2024/06/10/rust-miette-error-handling/",
        "scheme": "https",
        "title": "Build with Naz : Rust error handling with miette | developerlife.com",
        "uri_uuid": "752c8bf2a555a0261359fbcfe1a04fe49113c6b616f16f320e8d5ba4385c6475",
        "url": "https://developerlife.com/2024/06/10/rust-miette-error-handling/"
    },
    {
        "auto_descr": "One of the first things any Rust programmer learns is that you can’t pass an object and a reference to that object around at the same time. It’s impossible to do, even indirectly. This limitation has been the subject of countless questions on Stack Overflow and posts on Reddit and the Rust forums and anywhere else where Rust programmers might ask for help. It’s so well-known that most people treat it like an axiom, not just a limitation of Rust as it currently exists, but an inherent limitation of borrow checking in general.",
        "crea_time": "2024-08-29T17:47:11.439002398+02:00",
        "crea_user": "api",
        "host": "blog.polybdenum.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:11.439002398+02:00",
        "modi_user": "api",
        "path": "/2024/06/07/the-inconceivable-types-of-rust-how-to-make-self-borrows-safe.html",
        "scheme": "https",
        "title": "The Inconceivable Types of Rust: How to Make Self-Borrows Safe | Considerations on Codecrafting",
        "uri_uuid": "08e4664b5be18b03f1c3c16517cc82716b6ef048e4ec4dfcc2ae4cf2f2e8fdad",
        "url": "https://blog.polybdenum.com/2024/06/07/the-inconceivable-types-of-rust-how-to-make-self-borrows-safe.html"
    },
    {
        "auto_descr": "RustLab is a conference for developers made by developers",
        "crea_time": "2024-08-29T17:47:11.772392511+02:00",
        "crea_user": "api",
        "host": "rustlab.it",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:11.772392511+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "RustLab | The International Conference on Rust in Florence",
        "uri_uuid": "92fceca219ad2f7767ecbd14c9897ddff146c87db30a0da328897a1827d8d0b6",
        "url": "https://rustlab.it/"
    },
    {
        "auto_descr": "Do you know how a thread in Linux is spawned? What about using raw pipes to schedule work on a CPU? Can we transfer closures between threads? Concurrency and multi-threading are essential in system…",
        "crea_time": "2024-08-29T17:47:12.193835196+02:00",
        "crea_user": "api",
        "host": "levelup.gitconnected.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:12.193835196+02:00",
        "modi_user": "api",
        "path": "/learning-rust-bare-threading-1defb65038c9",
        "scheme": "https",
        "title": "Learning Rust: Bare Threading. Do you know how a thread in Linux is… | by Adrian Macal | Level Up Coding",
        "uri_uuid": "9ff2c4eada2bdccab82cac13ba151bfad0e58ab4f371a92a4fd8dd1f4fb97163",
        "url": "https://levelup.gitconnected.com/learning-rust-bare-threading-1defb65038c9?gi=36460c4481d0"
    },
    {
        "auto_descr": "A post about how Firezone uses Tauri on Linux and Windows",
        "crea_time": "2024-08-29T17:47:14.025506112+02:00",
        "crea_user": "api",
        "host": "www.firezone.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:14.025506112+02:00",
        "modi_user": "api",
        "path": "/blog/using-tauri",
        "scheme": "https",
        "title": "Using Tauri to build a cross-platform security app",
        "uri_uuid": "1a013bfb09b4f138325766db5aaa1ac392121d0c7010608f8c04465caae4c646",
        "url": "https://www.firezone.dev/blog/using-tauri"
    },
    {
        "auto_descr": "A distribution using weighted sampling of discrete items",
        "crea_time": "2024-08-29T17:47:14.953837458+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:14.953837458+02:00",
        "modi_user": "api",
        "path": "/rand/latest/rand/distributions/struct.WeightedIndex.html",
        "scheme": "https",
        "title": "WeightedIndex in rand::distributions - Rust",
        "uri_uuid": "2011b041a7f731fedbfb79b7c5e51b06579e65da9d0a4f5ee2379d80bf76d268",
        "url": "https://docs.rs/rand/latest/rand/distributions/struct.WeightedIndex.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:15.637979103+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:15.637979103+02:00",
        "modi_user": "api",
        "path": "/r/rust/s/hw8ZUdiYCu",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "58ed249ef9d3bebc3d56b1f93f5acdbee4784d5dcc5d30f11932ab38afd06522",
        "url": "https://www.reddit.com/r/rust/s/hw8ZUdiYCu"
    },
    {
        "auto_descr": "Rust actually does have a random number generator in it's standard library!?",
        "crea_time": "2024-08-29T17:47:15.812812208+02:00",
        "crea_user": "api",
        "host": "ibraheem.ca",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:15.812812208+02:00",
        "modi_user": "api",
        "path": "/posts/random-number-generator-in-rust-std/",
        "scheme": "https",
        "title": "The Random Number Generator Hidden In Rust's Standard Library",
        "uri_uuid": "540822566673befe28a3a7b32ccb69a807d8d4e97c7105d542933246a32d3e8f",
        "url": "https://ibraheem.ca/posts/random-number-generator-in-rust-std/"
    },
    {
        "auto_descr": "In this comprehensive Rust course for beginners, you will learn about the core concepts of the language and underlying mechanisms in theory.✏️ Course develop...",
        "crea_time": "2024-08-29T17:47:17.153933676+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:17.153933676+02:00",
        "modi_user": "api",
        "path": "/BpPEoZW5IiY",
        "scheme": "https",
        "title": "Learn Rust Programming - Complete Course 🦀 - YouTube",
        "uri_uuid": "af808cc32b0467c6a6048e5d846748203680acd796fdef40795c0706cca317e7",
        "url": "https://youtu.be/BpPEoZW5IiY?feature=shared"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:18.214483907+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:18.214483907+02:00",
        "modi_user": "api",
        "path": "/rand/latest/rand/distributions/struct.WeightedIndex.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "444c95087c0bbabe4b2dd9a66477e46b0a70a77bd9c74dd191e039085681836f",
        "url": "https://docs.rs/rand/latest/rand/distributions/struct.WeightedIndex.html#example"
    },
    {
        "auto_descr": "A walkthrough of the assembly code idioms the Rust compiler uses to implement the language’s core features (as they appear in Klabnik’s a...",
        "crea_time": "2024-08-29T17:47:49.501453898+02:00",
        "crea_user": "api",
        "host": "media.ccc.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:49.501453898+02:00",
        "modi_user": "api",
        "path": "/v/37c3-11684-rust_binary_analysis_feature_by_feature",
        "scheme": "https",
        "title": "\nRust Binary Analysis, Feature by Feature\n\n- media.ccc.de\n",
        "uri_uuid": "b903bb2aaff77a231186d138d9d2986446d2b075be88ca4c8f89c55ff693a1be",
        "url": "https://media.ccc.de/v/37c3-11684-rust_binary_analysis_feature_by_feature#t=1485"
    },
    {
        "auto_descr": "Sequence-related functionality",
        "crea_time": "2024-08-29T17:47:49.795468765+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:49.795468765+02:00",
        "modi_user": "api",
        "path": "/rand/latest/rand/seq/index.html",
        "scheme": "https",
        "title": "rand::seq - Rust",
        "uri_uuid": "c90de98d1a7a54611e3d9470c19052feee47c66bfac260c0e6435712a36672ff",
        "url": "https://docs.rs/rand/latest/rand/seq/index.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:50.363940557+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:50.363940557+02:00",
        "modi_user": "api",
        "path": "/wiki/Tshe",
        "scheme": "https",
        "title": "Tshe - Wikipedia",
        "uri_uuid": "4ddb7b45a807d63c40d8dae28e41152f26969b27cc593ac54d4d67983f0be222",
        "url": "https://en.wikipedia.org/wiki/Tshe"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:50.693914440+02:00",
        "crea_user": "api",
        "host": "barafael.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:50.693914440+02:00",
        "modi_user": "api",
        "path": "/pils/",
        "scheme": "https",
        "title": "pils REPL",
        "uri_uuid": "e5740a8726ae8b2c3bedbbbb13a7c7c04714bf740a87a02ac4e15a0dd2dfffb4",
        "url": "https://barafael.github.io/pils/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:50.929473276+02:00",
        "crea_user": "api",
        "host": "en.wiktionary.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:50.929473276+02:00",
        "modi_user": "api",
        "path": "/wiki/%C4%A7",
        "scheme": "https",
        "title": "ħ - Wiktionary, the free dictionary",
        "uri_uuid": "b38980d80611f5b8e6e3b790622f903e745f4f7e1ed45982ac20e32985ec37e3",
        "url": "https://en.wiktionary.org/wiki/%C4%A7"
    },
    {
        "auto_descr": "A readline wrapper. Contribute to hanslub42/rlwrap development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:47:51.210120823+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:51.210120823+02:00",
        "modi_user": "api",
        "path": "/hanslub42/rlwrap",
        "scheme": "https",
        "title": "GitHub - hanslub42/rlwrap: A readline wrapper",
        "uri_uuid": "c8c1a8086edab463144feecfb3899ed0abfaa6891ad4047bcf8c6675be8e3710",
        "url": "https://github.com/hanslub42/rlwrap"
    },
    {
        "auto_descr": "Returns the name of a type as a string slice.",
        "crea_time": "2024-08-29T17:47:52.055444613+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:52.055444613+02:00",
        "modi_user": "api",
        "path": "/stable/core/any/fn.type_name.html",
        "scheme": "https",
        "title": "type_name in core::any - Rust",
        "uri_uuid": "d9422a4823e274fee550618cb1fec5f6b23d4940c905026668a9203e26e8dbc2",
        "url": "https://doc.rust-lang.org/stable/core/any/fn.type_name.html"
    },
    {
        "auto_descr": "This contrived example compiles just fine, but running it results in a segmentation fault: static UNIT: &'static &'static () = &&(); fn foo<'a, 'b, T>(_: &'a &'b (), v: &'b T) -> &'a T { v } fn bad<'a, T>(x: &'a T) -> &'static T { let f:...",
        "crea_time": "2024-08-29T17:47:52.206534333+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:52.206534333+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/issues/121184",
        "scheme": "https",
        "title": "Weird lifetimes cause a segfault in safe code · Issue #121184 · rust-lang/rust · GitHub",
        "uri_uuid": "a117b620682b56b6b38bcfd6045e74851dd16fa89397ffd2511d092457b85e74",
        "url": "https://github.com/rust-lang/rust/issues/121184"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:53.044160208+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:53.044160208+02:00",
        "modi_user": "api",
        "path": "/wiki/Effect_system",
        "scheme": "https",
        "title": "Effect system - Wikipedia",
        "uri_uuid": "a7d4cbf477c1a0d9abe8d64d247904d9db5c8f873a2235f2949bae5fb173159c",
        "url": "https://en.wikipedia.org/wiki/Effect_system"
    },
    {
        "auto_descr": "Provides an automatically expanding table-of-contents\n      in a side-panel next to the main content.\n      The TOC must be in a `SidePanel` block, while all\n      the other content must be in a `MainPanel`.",
        "crea_time": "2024-08-29T17:47:53.281645364+02:00",
        "crea_user": "api",
        "host": "koka-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:53.281645364+02:00",
        "modi_user": "api",
        "path": "/koka/doc/book.html",
        "scheme": "https",
        "title": "The Koka Programming Language",
        "uri_uuid": "672b726ac845dcb7921372cb204c32b4976720a4acca9d13c71c2eeba6bd4d60",
        "url": "https://koka-lang.github.io/koka/doc/book.html"
    },
    {
        "auto_descr": "This is a tracking issue for the experimental crabi ABI; see #105586 and rust-lang/compiler-team#631. The feature gate for the issue is #![feature(crabi)]. About tracking issues Tracking issues are used to record the overall progress of ...",
        "crea_time": "2024-08-29T17:47:55.276164852+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:55.276164852+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/issues/111423",
        "scheme": "https",
        "title": "Tracking Issue for the experimental `crabi` ABI · Issue #111423 · rust-lang/rust · GitHub",
        "uri_uuid": "9617abd5d7620f9c4606f059add3d4b70880f6874bf3ca43bf7ad739cd26045f",
        "url": "https://github.com/rust-lang/rust/issues/111423"
    },
    {
        "auto_descr": "Simulating Natural Systems with JavaScript",
        "crea_time": "2024-08-29T17:47:56.445013456+02:00",
        "crea_user": "api",
        "host": "natureofcode.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:56.445013456+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Nature of Code",
        "uri_uuid": "7a6f2d61f82fcebece88bd2ab1b9a090fb234b8f5623e278f818deba429c4bd6",
        "url": "https://natureofcode.com/"
    },
    {
        "auto_descr": "A Creative Coding Framework for Rust. Contribute to nannou-org/nannou development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:47:57.044293419+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:57.044293419+02:00",
        "modi_user": "api",
        "path": "/nannou-org/nannou/tree/master/nature_of_code",
        "scheme": "https",
        "title": "nannou/nature_of_code at master · nannou-org/nannou · GitHub",
        "uri_uuid": "7fb10dda363c16c0f3a910d2a16f1cac91ed8a2cf86124814051b40ebc8cd0cf",
        "url": "https://github.com/nannou-org/nannou/tree/master/nature_of_code"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:47:57.705425810+02:00",
        "crea_user": "api",
        "host": "c2rust.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:57.705425810+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "C2Rust Demonstration",
        "uri_uuid": "457f046676f689f98c0a59f274fb46e876c6ce49151031ba1cfcc19cede635c9",
        "url": "https://c2rust.com/"
    },
    {
        "auto_descr": "Rust for Windows. Contribute to microsoft/windows-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:47:58.549454189+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:58.549454189+02:00",
        "modi_user": "api",
        "path": "/microsoft/windows-rs/blob/master/crates/libs/windows/src/Windows/Win32/Networking/WinInet/impl.rs",
        "scheme": "https",
        "title": "windows-rs/crates/libs/windows/src/Windows/Win32/Networking/WinInet/impl.rs at master · microsoft/windows-rs · GitHub",
        "uri_uuid": "d51f5271146e8113551a85489317226595d12e786ad0e2c944889b55f11be9e7",
        "url": "https://github.com/microsoft/windows-rs/blob/master/crates/libs/windows/src/Windows/Win32/Networking/WinInet/impl.rs"
    },
    {
        "auto_descr": "I missed these in #125017.",
        "crea_time": "2024-08-29T17:47:59.583212908+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:47:59.583212908+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/126543",
        "scheme": "https",
        "title": "rustc_span: Optimize more hygiene operations using `Span::map_ctxt` by petrochenkov · Pull Request #126543 · rust-lang/rust · GitHub",
        "uri_uuid": "127c28218ff129d992dec9086d60125c2f628475fba26b11b16c8cb6d2242554",
        "url": "https://github.com/rust-lang/rust/pull/126543"
    },
    {
        "auto_descr": "This PR stabilizes binary_heap_as_slice:\n// std::collections::BinaryHeap\n\nimpl BinaryHeap<T> {\n    pub fn as_slice(&self) -> &[T]\n}\n\nTracking issue: #83659.\nImplementation PR: #82331.\nFCPs already ...",
        "crea_time": "2024-08-29T17:48:01.249237079+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:01.249237079+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/124012",
        "scheme": "https",
        "title": "Stabilize `binary_heap_as_slice` by slanterns · Pull Request #124012 · rust-lang/rust · GitHub",
        "uri_uuid": "20d89f8814f6bbeea9eeec515f744f4ff44e2760a649a93d012710bd10c7439f",
        "url": "https://github.com/rust-lang/rust/pull/124012"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:48:03.983726632+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:03.983726632+02:00",
        "modi_user": "api",
        "path": "/wiki/Sixel",
        "scheme": "https",
        "title": "Sixel - Wikipedia",
        "uri_uuid": "cc95614bebc6dfc16c1f5cfcb34c7c06fa4db65d19d63abed91f84332ab8c9e5",
        "url": "https://en.wikipedia.org/wiki/Sixel"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:48:04.255349973+02:00",
        "crea_user": "api",
        "host": "www.arewesixelyet.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:04.255349973+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Are We Sixel Yet?",
        "uri_uuid": "4be81a9ad5e5b6715becfa54bf6262ece69d41c5bb9aafb30bb4b290e310cbe0",
        "url": "https://www.arewesixelyet.com/"
    },
    {
        "auto_descr": "Image widgets for Ratatui",
        "crea_time": "2024-08-29T17:48:04.541399905+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:04.541399905+02:00",
        "modi_user": "api",
        "path": "/ratatu-image/latest/ratatu_image/",
        "scheme": "https",
        "title": "ratatu_image - Rust",
        "uri_uuid": "ff8b6e786c27490723e58a08dc89863a79d99fa8af6a59311e35e49561ae6584",
        "url": "https://docs.rs/ratatu-image/latest/ratatu_image/"
    },
    {
        "auto_descr": "Middleware which adds headers for CORS.",
        "crea_time": "2024-08-29T17:48:04.796863824+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:04.796863824+02:00",
        "modi_user": "api",
        "path": "/tower-http/latest/tower_http/cors/index.html",
        "scheme": "https",
        "title": "tower_http::cors - Rust",
        "uri_uuid": "2a8d826e6e1ae7412baef8d1f73ede03ab4f4fd46e4ee72f123b82da68c87513",
        "url": "https://docs.rs/tower-http/latest/tower_http/cors/index.html"
    },
    {
        "auto_descr": "use hyper re-export from rocket_http\nswitch rocket version to master branch\n(use release version once async is available)\nadapt code to incorporate changes from rocket and hyper\n\nThis fixes #79.\nUp...",
        "crea_time": "2024-08-29T17:48:05.170483773+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:05.170483773+02:00",
        "modi_user": "api",
        "path": "/lawliet89/rocket_cors/pull/81",
        "scheme": "https",
        "title": "Use async version from rocket's master branch by HenningHolmDE · Pull Request #81 · lawliet89/rocket_cors · GitHub",
        "uri_uuid": "bf9cb26ec52382ef9d922c10fcfb050f900d727dddc5de824d5ff313fec20fa3",
        "url": "https://github.com/lawliet89/rocket_cors/pull/81"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:48:06.698136925+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:06.698136925+02:00",
        "modi_user": "api",
        "path": "/stable/book/ch15-04-rc.html",
        "scheme": "https",
        "title": "Rc<T>, the Reference Counted Smart Pointer - The Rust Programming Language",
        "uri_uuid": "fba1784ed1d6cef784875f138017280c88d57bf0e30211d0c098f8f77aa0b99a",
        "url": "https://doc.rust-lang.org/stable/book/ch15-04-rc.html"
    },
    {
        "auto_descr": "A collection of lints to catch common mistakes and improve your Rust code.",
        "crea_time": "2024-08-29T17:48:06.857381528+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:06.857381528+02:00",
        "modi_user": "api",
        "path": "/rust-clippy/master/index.html",
        "scheme": "https",
        "title": "Clippy Lints",
        "uri_uuid": "144f86a230ca49c4747a352c8791fa5039a9519c358a4becd82d8b88bc59ed6e",
        "url": "https://rust-lang.github.io/rust-clippy/master/index.html#/clone_on_ref_ptr"
    },
    {
        "auto_descr": "A collection of lints to catch common mistakes and improve your Rust code.",
        "crea_time": "2024-08-29T17:48:07.096270116+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:07.096270116+02:00",
        "modi_user": "api",
        "path": "/rust-clippy/master/index.html",
        "scheme": "https",
        "title": "Clippy Lints",
        "uri_uuid": "7ee1c39afc7d38ed468483a141133a78a57dd77b8e1c0efd16bf195993420814",
        "url": "https://rust-lang.github.io/rust-clippy/master/index.html#/arc?groups=restriction"
    },
    {
        "auto_descr": "A collection of lints to catch common mistakes and improve your Rust code.",
        "crea_time": "2024-08-29T17:48:07.210281758+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:07.210281758+02:00",
        "modi_user": "api",
        "path": "/rust-clippy/master/index.html",
        "scheme": "https",
        "title": "Clippy Lints",
        "uri_uuid": "6eb08d280a1d254443e3feae4680c9c6b0194b332b6eae47d2933aea7a9c3e0d",
        "url": "https://rust-lang.github.io/rust-clippy/master/index.html#/?groups=restriction"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:48:07.329750820+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:07.329750820+02:00",
        "modi_user": "api",
        "path": "/clippy/lints.html",
        "scheme": "https",
        "title": "Clippy's Lints - Clippy Documentation",
        "uri_uuid": "da725132e37319bda132d0f8430f5a4b2b2c1e43d2ca46827ef7dd8029b77892",
        "url": "https://doc.rust-lang.org/clippy/lints.html?highlight=restriction#restriction"
    },
    {
        "auto_descr": "Async Rust is a whole new world of programming. Let's try to understand it by working our way through a series of web servers, learning the details of concurrency and I/O along the way.",
        "crea_time": "2024-08-29T17:48:07.450657398+02:00",
        "crea_user": "api",
        "host": "ibraheem.ca",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:07.450657398+02:00",
        "modi_user": "api",
        "path": "/posts/too-many-web-servers/",
        "scheme": "https",
        "title": "Learning Async Rust With Entirely Too Many Web Servers",
        "uri_uuid": "d871ee2d406393acfbb959a5d5153b3ccb38ccb138f8c179f3d39c834eb4d4a6",
        "url": "https://ibraheem.ca/posts/too-many-web-servers/"
    },
    {
        "auto_descr": "Berlin Code of Conduct",
        "crea_time": "2024-08-29T17:48:08.613991190+02:00",
        "crea_user": "api",
        "host": "berlincodeofconduct.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:08.613991190+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Berlin Code of Conduct",
        "uri_uuid": "53516ce2506ed732437d4afd46906611b7824bf0eae5c0a9655cc75129262fbf",
        "url": "https://berlincodeofconduct.org/"
    },
    {
        "auto_descr": "For Berline Rust Hack and Learn meetup. June 6. 2024",
        "crea_time": "2024-08-29T17:48:08.973194519+02:00",
        "crea_user": "api",
        "host": "slides.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:08.973194519+02:00",
        "modi_user": "api",
        "path": "/lakhin/code-d3896c",
        "scheme": "https",
        "title": "Front-end Webdev in Rust",
        "uri_uuid": "2c06a4dbbb046f28187a68bec51e87a5c24e7a2f49a81691d333c7fd40fb4e25",
        "url": "https://slides.com/lakhin/code-d3896c"
    },
    {
        "auto_descr": "physics2d-arena-prototype",
        "crea_time": "2024-08-29T17:48:09.844562077+02:00",
        "crea_user": "api",
        "host": "codeberg.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:09.844562077+02:00",
        "modi_user": "api",
        "path": "/good_praxis/physics2d-arena-prototype",
        "scheme": "https",
        "title": "good_praxis/physics2d-arena-prototype - Codeberg.org",
        "uri_uuid": "f2bdb44c1a3699d924f52bbedd782ad2920781659e4d53e0e2d3ce62bc4cfe90",
        "url": "https://codeberg.org/good_praxis/physics2d-arena-prototype"
    },
    {
        "auto_descr": "RustNL 2024, The Netherlands - May 7 & 8 2024",
        "crea_time": "2024-08-29T17:48:10.384049834+02:00",
        "crea_user": "api",
        "host": "2024.rustnl.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:10.384049834+02:00",
        "modi_user": "api",
        "path": "/live/",
        "scheme": "https",
        "title": "🔴 Live recordings - RustNL 2024",
        "uri_uuid": "c750fdb6b6b4f69d9e1d293775e917da5257be09260174e25f0fb89e4cba8d0f",
        "url": "https://2024.rustnl.org/live/"
    },
    {
        "auto_descr": "This talk first introduces the specific challenges of developing space-worthy SW in a context of growing customers' expectations, in terms of performance, fe...",
        "crea_time": "2024-08-29T17:48:10.658866001+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:10.658866001+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "ThRust in Space: Initial Momentum - Michaël Melchiore - YouTube",
        "uri_uuid": "05ec26e42a105458e8dbb291ecb75e33764a3ec8ae6e364ea583322422b9ea0f",
        "url": "https://www.youtube.com/watch?v=O09rje6yC90"
    },
    {
        "auto_descr": "A no_std + serde compatible message library for Rust - jamesmunns/postcard",
        "crea_time": "2024-08-29T17:48:11.332050640+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:11.332050640+02:00",
        "modi_user": "api",
        "path": "/jamesmunns/postcard",
        "scheme": "https",
        "title": "GitHub - jamesmunns/postcard: A no_std + serde compatible message library for Rust",
        "uri_uuid": "1e57406f057602ace36e179dc934679435a2cc1d4dfb842537a93da3eab8d04d",
        "url": "https://github.com/jamesmunns/postcard"
    },
    {
        "auto_descr": "When people say that learning Rust is hard, they often mention lifetimes. However, even after seven years of writing Rust, 95% of my code, probably more, doesn't have any lifetime annotations! It is one of the areas of the language that I definite…",
        "crea_time": "2024-08-29T17:48:12.989212440+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:12.989212440+02:00",
        "modi_user": "api",
        "path": "/blog/lifetimes/",
        "scheme": "https",
        "title": "Don't Worry About Lifetimes | corrode Rust Consulting",
        "uri_uuid": "45916b859e050dff807ad95ad1b10e6efeb32bed41bf11e312323a37dccd3807",
        "url": "https://corrode.dev/blog/lifetimes/"
    },
    {
        "auto_descr": "Isaac Daoust is a software developer with an interest in building beautiful and accessible web experiences.",
        "crea_time": "2024-08-29T17:48:13.261795075+02:00",
        "crea_user": "api",
        "host": "isaacdaou.st",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:13.261795075+02:00",
        "modi_user": "api",
        "path": "/blog/forming-clouds/",
        "scheme": "https",
        "title": "Forming Clouds | Isaac Daoust",
        "uri_uuid": "9c51dc292df549de593cfb568ac2411713cc4f3b17bef3dc4400bbab83b79afc",
        "url": "https://isaacdaou.st/blog/forming-clouds/"
    },
    {
        "auto_descr": "Clean up your code, clarify business logic and improve test coverage with Rust's newtype wrappers.",
        "crea_time": "2024-08-29T17:48:13.925080751+02:00",
        "crea_user": "api",
        "host": "www.howtocodeit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:13.925080751+02:00",
        "modi_user": "api",
        "path": "/articles/ultimate-guide-rust-newtypes",
        "scheme": "https",
        "title": "The ultimate guide to Rust newtypes",
        "uri_uuid": "22a2c9069e69bf65a054c83fb91e7ca5351cdc15a523e97a40ee0d868538ce0a",
        "url": "https://www.howtocodeit.com/articles/ultimate-guide-rust-newtypes"
    },
    {
        "auto_descr": "Rust library for OpenAI . Contribute to 64bit/async-openai development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:48:14.350253400+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:14.350253400+02:00",
        "modi_user": "api",
        "path": "/64bit/async-openai",
        "scheme": "https",
        "title": "GitHub - 64bit/async-openai: Rust library for OpenAI",
        "uri_uuid": "8b3c991ee1a5b8f14dd453a6b479a81bb4156dbaa12c23d5458c6ca07935a9e1",
        "url": "https://github.com/64bit/async-openai"
    },
    {
        "auto_descr": ": https://github.com/steadylearner In this post, you will\nlearn how to use ChatGPT with Rust using the async-openai-rustpackage.\n\nYou can find the code used her...",
        "crea_time": "2024-08-29T17:48:15.081732954+02:00",
        "crea_user": "api",
        "host": "www.onlycoiners.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:15.081732954+02:00",
        "modi_user": "api",
        "path": "/user/steadylearner/blog/how-to-use-chatgpt-with-rust",
        "scheme": "https",
        "title": "How to use ChatGPT with Rust - OnlyCoiners",
        "uri_uuid": "83818ebcd1cb9c1a428b2a7c0b44041bace050d6f043c0f6d60f8a7915578fe4",
        "url": "https://www.onlycoiners.com/user/steadylearner/blog/how-to-use-chatgpt-with-rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:48:23.370173990+02:00",
        "crea_user": "api",
        "host": "andreaslongva.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:23.370173990+02:00",
        "modi_user": "api",
        "path": "/blog/enter-paradis/",
        "scheme": "https",
        "title": "\nEnter paradis — A new chapter in Rust's parallelism story\n | Andreas Longva",
        "uri_uuid": "fb747fbefb2f01749e935184329f7b917595db256123a7095e2817b7800c7ffe",
        "url": "https://andreaslongva.com/blog/enter-paradis/"
    },
    {
        "auto_descr": "Parallel processing with disjoint indices in Rust. Contribute to Andlon/paradis development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:48:23.732924817+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:23.732924817+02:00",
        "modi_user": "api",
        "path": "/Andlon/paradis",
        "scheme": "https",
        "title": "GitHub - Andlon/paradis: Parallel processing with disjoint indices in Rust",
        "uri_uuid": "31601af57798ad922f63bfd496202e0922144cdad9eaf1aff7c2b2a7879e26c4",
        "url": "https://github.com/Andlon/paradis"
    },
    {
        "auto_descr": "Explore the Linux io_uring syscall with the tokio-uring crate in Rust. This article, video, and repo will show you how to use the tokio-uring do async file IO at the OS level, and how to use it to build a simple echo TCP server, for use with netcat.",
        "crea_time": "2024-08-29T17:48:24.671310628+02:00",
        "crea_user": "api",
        "host": "developerlife.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:24.671310628+02:00",
        "modi_user": "api",
        "path": "/2024/05/25/tokio-uring-exploration-rust/",
        "scheme": "https",
        "title": "Build with Naz : Linux io_uring and tokio-uring exploration with Rust | developerlife.com",
        "uri_uuid": "3d70943abe11e7903cb7e9ea718357e17863848e7f9d212deb052402557d30ac",
        "url": "https://developerlife.com/2024/05/25/tokio-uring-exploration-rust/"
    },
    {
        "auto_descr": "The next-generation framework for embedded applications. Write safe, correct and energy-efficient embedded code faster, using the Rust programming language, its async facilities, and the Embassy libraries.",
        "crea_time": "2024-08-29T17:48:25.019750585+02:00",
        "crea_user": "api",
        "host": "embassy.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:25.019750585+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Embassy",
        "uri_uuid": "17341cb20dd161f15d566295362ecf550edce7eae53012ffa6ca1f12489b437f",
        "url": "https://embassy.dev/"
    },
    {
        "auto_descr": "Modern embedded framework, using Rust and async. Contribute to embassy-rs/embassy development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:48:25.260352944+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:25.260352944+02:00",
        "modi_user": "api",
        "path": "/embassy-rs/embassy",
        "scheme": "https",
        "title": "GitHub - embassy-rs/embassy: Modern embedded framework, using Rust and async.",
        "uri_uuid": "b95f459a8d79692630d88fe4b87b35a88e4bcd0289b83155b3e0460854f8ae28",
        "url": "https://github.com/embassy-rs/embassy"
    },
    {
        "auto_descr": "Async/await in Rust has a unique design compared to other languages that offers much lower-level control. This makes it surprisingly well suited for use in m...",
        "crea_time": "2024-08-29T17:48:26.135816721+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:26.135816721+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Async Rust in Embedded Systems with Embassy - Dario Nieuwenhuis - YouTube",
        "uri_uuid": "b7711a42ad4407945982f5737ef872817a76bd1706ade65c5e243c9c0872c85c",
        "url": "https://www.youtube.com/watch?v=H7NtzyP9q8E"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:48:26.862429537+02:00",
        "crea_user": "api",
        "host": "pine64.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:26.862429537+02:00",
        "modi_user": "api",
        "path": "/devices/pinetime/",
        "scheme": "https",
        "title": "PineTime - PINE64",
        "uri_uuid": "61db64eef5f60c6a11392b425e3215886749c142f8179d80b14eb19cf1146e76",
        "url": "https://pine64.org/devices/pinetime/"
    },
    {
        "auto_descr": "The PineTime is an affordable and functional smartwatch with open-source firmware. Although several open-source RTOSes are available to run on it, nothing fe...",
        "crea_time": "2024-08-29T17:48:27.029590136+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:27.029590136+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust Poisoning My Wrist for Fun - Ulf Lilleengen - YouTube",
        "uri_uuid": "06f4bec73b7452ac687d428b0ee7238d7d50721b09b67f33f2159d88131ba6e9",
        "url": "https://www.youtube.com/watch?v=u6q9l89EOXI"
    },
    {
        "auto_descr": "In this tutorial, we would create a REST notepad backend starting from scratch and adding a new REST endpoint to handle file uploads in Loco.",
        "crea_time": "2024-08-29T17:48:27.676991889+02:00",
        "crea_user": "api",
        "host": "www.sea-ql.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:27.676991889+02:00",
        "modi_user": "api",
        "path": "/blog/2024-05-28-getting-started-with-loco-seaorm/",
        "scheme": "https",
        "title": "Getting Started with Loco & SeaORM | SeaQL",
        "uri_uuid": "71ff39aa94cc6b977b9893e35d848fc2b0cfd1429abf4f17ab71b12a9c8b215d",
        "url": "https://www.sea-ql.org/blog/2024-05-28-getting-started-with-loco-seaorm/"
    },
    {
        "auto_descr": "What does it mean to teach a programming language? What factors should be considered? How can we improve learning resources? Are there any specific considera...",
        "crea_time": "2024-08-29T17:48:28.121742070+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:28.121742070+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Programming Education: Tailoring Tools and Techniques for Rust - YouTube",
        "uri_uuid": "c9a2135afae01782093a5d6ff4ee34eea4f0a4e160bb78af028cbf1d51a20b46",
        "url": "https://www.youtube.com/watch?v=u85bozA3bv0"
    },
    {
        "auto_descr": "Robius is a fully open-source, decentralized, community-driven effort to enable multi-platform application development in Rust.",
        "crea_time": "2024-08-29T17:48:28.741734156+02:00",
        "crea_user": "api",
        "host": "robius.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:28.741734156+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "",
        "uri_uuid": "5d0b29b31b89a8891c983c8a1dff843490e93e7807c0a7801071d1d80bda8f65",
        "url": "https://robius.rs/"
    },
    {
        "auto_descr": "Community for Multi-platform Application Development in Rust - Project Robius",
        "crea_time": "2024-08-29T17:48:29.069797795+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:29.069797795+02:00",
        "modi_user": "api",
        "path": "/project-robius",
        "scheme": "https",
        "title": "Project Robius · GitHub",
        "uri_uuid": "68bd5765eeffb8aa05a974ae5c30eb95fef219aae3eb36db4dc2bd0d698705a0",
        "url": "https://github.com/project-robius"
    },
    {
        "auto_descr": "Project Robius is a new community-driven framework that enables developers to create robust, efficient, and immersive applications in Rust that seamlessly ru...",
        "crea_time": "2024-08-29T17:48:29.997313142+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:29.997313142+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Robius: Immersive and Seamless Multiplatform App Development in Rust - Kevin Boos - YouTube",
        "uri_uuid": "1f8afe9ba35d7656b2bb1c535392e51cf8b50ee483bbef99cb2ec62b019037cb",
        "url": "https://www.youtube.com/watch?v=Dg4hlfettn8"
    },
    {
        "auto_descr": "Makepad is a creative software development platform for Rust that compiles to wasm/webGL, osx/metal, windows/dx11 linux/opengl - makepad/makepad",
        "crea_time": "2024-08-29T17:48:30.755372795+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:30.755372795+02:00",
        "modi_user": "api",
        "path": "/makepad/makepad",
        "scheme": "https",
        "title": "GitHub - makepad/makepad: Makepad is a creative software development platform for Rust that compiles to wasm/webGL, osx/metal, windows/dx11 linux/opengl",
        "uri_uuid": "db3ed33b1cad40be2236724c7a0ebab7cc94f4b1a7d89f7ba6e0323286f16aa6",
        "url": "https://github.com/makepad/makepad"
    },
    {
        "auto_descr": "In this talk I will show the new MIT licensed visual application design tool for Makepad. We will walk through our fun new AI examples with generative image ...",
        "crea_time": "2024-08-29T17:48:31.719826536+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:31.719826536+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Visual Application Design for Rust - Rik Arends - YouTube",
        "uri_uuid": "e2f4ebc48ff243bcddf14dad539af21ec00419c773c2beacb96586c6f89c77dd",
        "url": "https://www.youtube.com/watch?v=NPP2_6KMA60"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:48:32.455541661+02:00",
        "crea_user": "api",
        "host": "xilem.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:32.455541661+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Xilem",
        "uri_uuid": "76c2fc4389679a3527764c5575835760565d478d55b20b5553cd25fd1446a341",
        "url": "https://xilem.dev/"
    },
    {
        "auto_descr": "An experimental Rust native UI framework. Contribute to linebender/xilem development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:48:33.285721684+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:33.285721684+02:00",
        "modi_user": "api",
        "path": "/linebender/xilem",
        "scheme": "https",
        "title": "GitHub - linebender/xilem: An experimental Rust native UI framework",
        "uri_uuid": "7115305d4d66f8a110b4db05a15dd9d329b8a5aebce242f62cfe33698fa526b6",
        "url": "https://github.com/linebender/xilem"
    },
    {
        "auto_descr": "Xilem is a new UI toolkit designed for high performance and idiomatic expression of UI and app logic, suitable for both desktop and mobile. Xilem is built in...",
        "crea_time": "2024-08-29T17:48:33.974731625+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:33.974731625+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Xilem: Let's Build High Performance Rust UI - Raph Levien - YouTube",
        "uri_uuid": "5c332ca4fb3a91fca539c5c430a498429050654c8b47a4a599e24084f74e0fbc",
        "url": "https://www.youtube.com/watch?v=OvfNipIcRiQ"
    },
    {
        "auto_descr": "Macros are cool! But, if we're going to create another language anyways...",
        "crea_time": "2024-08-29T17:48:34.761695990+02:00",
        "crea_user": "api",
        "host": "barretts.club",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:34.761695990+02:00",
        "modi_user": "api",
        "path": "/posts/rust-for-the-engine/",
        "scheme": "https",
        "title": "Rust is for the Engine, Not the Game - Barrett's Club",
        "uri_uuid": "c5d310d5df8345b7a77c12bd79ac0647360b33b712c64d0f0edae2b1ab15c3ef",
        "url": "https://barretts.club/posts/rust-for-the-engine/"
    },
    {
        "auto_descr": "Slides: https://github.com/rustnl/meetups/blob/main/20240507-delft/slides/The%20Secret%20Project%20-%20Sophia%20Turner.pdfFollow Sophia on:            twitte...",
        "crea_time": "2024-08-29T17:48:35.538060721+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:35.538060721+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Introducing June - Sophia Turner - YouTube",
        "uri_uuid": "d380393bf3771b69cfef0506b35b324c2192963ec0470d21cbf9099116ca8bdd",
        "url": "https://www.youtube.com/watch?v=c1isq1Bdmic"
    },
    {
        "auto_descr": "Highlights from my AMA about the Way of Rhea launch.",
        "crea_time": "2024-08-29T17:48:36.225184761+02:00",
        "crea_user": "api",
        "host": "gamesbymason.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:36.225184761+02:00",
        "modi_user": "api",
        "path": "/2024/06/01/wor-ama/",
        "scheme": "https",
        "title": "Highlights from “I spent 6 years developing a game in Rust and it just shipped, AMA” | Games by Mason",
        "uri_uuid": "54e95b6fa095bb2233dc290169f0a99749522406fe4e5375498a5e47cf8a91ac",
        "url": "https://gamesbymason.com/2024/06/01/wor-ama/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:48:37.980207603+02:00",
        "crea_user": "api",
        "host": "store.steampowered.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:37.980207603+02:00",
        "modi_user": "api",
        "path": "/app/1110620/Way_of_Rhea",
        "scheme": "https",
        "title": "Save 25% on Way of Rhea on Steam",
        "uri_uuid": "5c1a09e1dc4508d4511e3b84445f172156bde700e9cf1e38efd992567e820586",
        "url": "https://store.steampowered.com/app/1110620/Way_of_Rhea"
    },
    {
        "auto_descr": "Rust async runtime based on io-uring. Contribute to bytedance/monoio development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:48:39.626127127+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:39.626127127+02:00",
        "modi_user": "api",
        "path": "/bytedance/monoio",
        "scheme": "https",
        "title": "GitHub - bytedance/monoio: Rust async runtime based on io-uring.",
        "uri_uuid": "6ffce9731d432bb139224637a797665a86e4e7bb3ba3ecddbf9a85cd2eb81b75",
        "url": "https://github.com/bytedance/monoio"
    },
    {
        "auto_descr": "View the very very very basic example site: https://ruxt.rsPlease give me github stars please pretty please https://github.com/duncanlutz/ruxt.rs",
        "crea_time": "2024-08-29T17:48:40.472877580+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:40.472877580+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Ruxt.rs: An Actix-based Rust framework for building HTMX sites - YouTube",
        "uri_uuid": "3fdeeeaaabf0921aa7506a41235cd586f1d5009efae2de636e2bc3c231c661a9",
        "url": "https://www.youtube.com/watch?v=YpHFthVa7nU&pp=ygUOcnVzdCBodG14IHJ1eHQ%3D"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T17:48:41.047868239+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:41.047868239+02:00",
        "modi_user": "api",
        "path": "/rust-aarhus/events/300865116/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "c75887444f29b32cfc0e1c5f1ae07955b9b96f24c0487af20b78896e36c79e1c",
        "url": "https://www.meetup.com/rust-aarhus/events/300865116/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:48:41.879179118+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:41.879179118+02:00",
        "modi_user": "api",
        "path": "/episode/cedric-sellmann/",
        "scheme": "https",
        "title": "Recruiting in Rust with Cedric Sellmann :: Rustacean Station",
        "uri_uuid": "de3ec8476953863fbe1efef85cf63a529b6e82bb07ade06051180ed26d0ac612",
        "url": "https://rustacean-station.org/episode/cedric-sellmann/"
    },
    {
        "auto_descr": "Closes #109736\nThis stabilizes the LazyLock and LazyCell types:\nstatic HASHMAP: LazyLock<HashMap<i32, String>> = LazyLock::new(|| {\n    println!(\"initializing\");\n    let mut m = HashMap::new();\n   ...",
        "crea_time": "2024-08-29T17:48:42.053357037+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:42.053357037+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/121377",
        "scheme": "https",
        "title": "Stabilize `LazyCell` and `LazyLock` by pitaj · Pull Request #121377 · rust-lang/rust · GitHub",
        "uri_uuid": "3c68421311de159041bbbb9580dbe46bfea1c44b0a0c2b6551549aaee69114ff",
        "url": "https://github.com/rust-lang/rust/pull/121377"
    },
    {
        "auto_descr": "Closes #63139",
        "crea_time": "2024-08-29T17:48:45.135715929+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:45.135715929+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/124667",
        "scheme": "https",
        "title": "Stabilize `div_duration` by newpavlov · Pull Request #124667 · rust-lang/rust · GitHub",
        "uri_uuid": "5fa206c5fed4f92a9f5e5004e81e1d35a34c95aaafd8365a9bf64b02cd9fccb0",
        "url": "https://github.com/rust-lang/rust/pull/124667"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:48:47.540221436+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:47.540221436+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/125561",
        "scheme": "https",
        "title": "Stabilize `slice_flatten` by Cyborus04 · Pull Request #125561 · rust-lang/rust · GitHub",
        "uri_uuid": "3751b7416eb2216c7c9eb9da13ded9143f0683d0481fccdf8ecaf0f2208bb7f9",
        "url": "https://github.com/rust-lang/rust/pull/125561"
    },
    {
        "auto_descr": "Adds a similar method probe opt-out mechanism to the [T;N]: IntoIterator implementation for edition 2021.\nAdjusts the relevant lints (shadowed .into_iter() calls, new source of method ambiguity).\nA...",
        "crea_time": "2024-08-29T17:48:50.106762860+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:50.106762860+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/124097",
        "scheme": "https",
        "title": "Add `IntoIterator` for `Box<[T]>` + edition 2024-specific lints by compiler-errors · Pull Request #124097 · rust-lang/rust · GitHub",
        "uri_uuid": "c87b2fd7bba107727627dd5be47b1516dc1c29f1b8893739ff3377047230933e",
        "url": "https://github.com/rust-lang/rust/pull/124097"
    },
    {
        "auto_descr": "This completed FCP in #113744. (Closes #113744.)\nStabilises the following APIs:\nimpl Ipv4Addr {\n    pub const BITS: u32 = 32;\n    pub const fn from_bits(bits: u32) -> Ipv4Addr;\n    pub const fn to_...",
        "crea_time": "2024-08-29T17:48:51.759935703+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:51.759935703+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/125551",
        "scheme": "https",
        "title": "Stabilise `IpvNAddr::{BITS, to_bits, from_bits}` (`ip_bits`) by clarfonthey · Pull Request #125551 · rust-lang/rust · GitHub",
        "uri_uuid": "73f6b3bc0249d8b5b5c83fee72f6d9b8ba037247acd42d4b538a5775615d964a",
        "url": "https://github.com/rust-lang/rust/pull/125551"
    },
    {
        "auto_descr": "Fixes #79483.\nThis feature has been around for quite some time now, I think it's fine to stabilize it now.\nSummary\nWhat is the feature about?\nIn short, this PR changes two things, both related to c...",
        "crea_time": "2024-08-29T17:48:54.020244802+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:54.020244802+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/124577",
        "scheme": "https",
        "title": "Stabilize `custom_code_classes_in_docs` feature by GuillaumeGomez · Pull Request #124577 · rust-lang/rust · GitHub",
        "uri_uuid": "1f80245497a1bd80dce87568e1dd1546403f83a196255fda1c7d49515c9f61a5",
        "url": "https://github.com/rust-lang/rust/pull/124577"
    },
    {
        "auto_descr": "This pr aims to stablize const_binary_heap_constructor.\nBinaryHeap::new is able to be stablized, but BinaryHeap::new_in is not. Because the latter depends on Vec::new_in which is unstable.\nThe cons...",
        "crea_time": "2024-08-29T17:48:55.963469407+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:55.963469407+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/125211",
        "scheme": "https",
        "title": "Stablize `const_binary_heap_constructor` by Coekjan · Pull Request #125211 · rust-lang/rust · GitHub",
        "uri_uuid": "4dcc006297049d50f1e5668333309936e13a432de09324622a06de60a91e8e83",
        "url": "https://github.com/rust-lang/rust/pull/125211"
    },
    {
        "auto_descr": "Allow calling these functions without unsafe blocks in editions up until 2021, but don't trigger the unused_unsafe lint for unsafe blocks containing these functions.\nFixes #27970.\nFixes #90308.\nCC ...",
        "crea_time": "2024-08-29T17:48:57.717519752+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:57.717519752+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/124636",
        "scheme": "https",
        "title": "Make `std::env::{set_var, remove_var}` unsafe in edition 2024 by tbu- · Pull Request #124636 · rust-lang/rust · GitHub",
        "uri_uuid": "4c451dae1772bfb02695fc22e28100e13fe2978d6a88ce6d8c7686c716a15bda",
        "url": "https://github.com/rust-lang/rust/pull/124636"
    },
    {
        "auto_descr": "The current FxHasher design has a few issues:\n\nIt is relatively slow for longer strings/slices.\nIt has no finalization at all, which means that for the last integer (or in the case of a single inte...",
        "crea_time": "2024-08-29T17:48:59.679109840+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:48:59.679109840+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rustc-hash/pull/37",
        "scheme": "https",
        "title": "Replace hash with faster and better finalized hash by orlp · Pull Request #37 · rust-lang/rustc-hash · GitHub",
        "uri_uuid": "bed53752911ba31418b4ad83b1ef97967315af116875f4fee277996a23d56c96",
        "url": "https://github.com/rust-lang/rustc-hash/pull/37"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:01.453587862+02:00",
        "crea_user": "api",
        "host": "www.golem.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:01.453587862+02:00",
        "modi_user": "api",
        "path": "/news/speichersicherheit-fast-20-prozent-aller-rust-pakete-sind-potenziell-unsicher-2405-185452.html",
        "scheme": "https",
        "title": "Golem.de: IT-News für Profis",
        "uri_uuid": "57e59c769ea54c556fd7d3c2a055d159707ca3f6705618d3587f703626ca6b7a",
        "url": "https://www.golem.de/news/speichersicherheit-fast-20-prozent-aller-rust-pakete-sind-potenziell-unsicher-2405-185452.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:01.674827811+02:00",
        "crea_user": "api",
        "host": "rustconf.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:01.674827811+02:00",
        "modi_user": "api",
        "path": "/speakers/",
        "scheme": "https",
        "title": "Speakers Archive - RustConf 2024",
        "uri_uuid": "b20eeae66b52e30fb1b21df6df69805e1b5411f7eaa04646ad5a17e28fe54904",
        "url": "https://rustconf.com/speakers/"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T17:49:02.052445137+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:02.052445137+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-berlin/events/299288963/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "782f8765e3ef4581a86a888ca1b68f26ffdafc9c0c1e9943d750c416425a8376",
        "url": "https://www.meetup.com/de-DE/rust-berlin/events/299288963/"
    },
    {
        "auto_descr": "The conference for industrial Rust users",
        "crea_time": "2024-08-29T17:49:02.790721493+02:00",
        "crea_user": "api",
        "host": "oxidizeconf.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:02.790721493+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Oxidize Conference - 28-30 May 2024",
        "uri_uuid": "42889c1f643ffd9e57d8c9125dac768f5ecec776c908c7c0115dd9bcdb5d4c33",
        "url": "https://oxidizeconf.com/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:49:03.414221953+02:00",
        "crea_user": "api",
        "host": "rust-exercises.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:03.414221953+02:00",
        "modi_user": "api",
        "path": "/01_intro/00_welcome",
        "scheme": "https",
        "title": "Welcome - 100 Exercises To Learn Rust",
        "uri_uuid": "39c7815cc5d49084541f7657e634b8e1d3e0a0fc11947f0c00be15a50c3772d0",
        "url": "https://rust-exercises.com/01_intro/00_welcome"
    },
    {
        "auto_descr": "Maceo parker - basic funk 101School's In",
        "crea_time": "2024-08-29T17:49:04.089265389+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:04.089265389+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Maceo Parker - Basic Funk 101 - YouTube",
        "uri_uuid": "93fcf5958249369be7fc9b2369de488ec721f540110aee6d6f9cb05002e70fbf",
        "url": "https://www.youtube.com/watch?v=AGVxjDAgAZI"
    },
    {
        "auto_descr": "This is 'Rust in Production', a podcast about companies who use Rust to shape the future of infrastructure. We follow their journey in pursuit of more reliable and efficient software as they solve some of the most challenging technical problems in the world.",
        "crea_time": "2024-08-29T17:49:04.842040974+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:04.842040974+02:00",
        "modi_user": "api",
        "path": "/podcast/",
        "scheme": "https",
        "title": "Rust in Production Podcast | corrode Rust Consulting",
        "uri_uuid": "495a549b3b4586b6aedede8f5487635c1b0d43f6c5f81ce6dabc1ce553f86069",
        "url": "https://corrode.dev/podcast/"
    },
    {
        "auto_descr": "For updates and more, join our community 👉 https://www.linkedin.com/company/devoxx-united-kingdomRust is an up-and-coming, safe and performant programming l...",
        "crea_time": "2024-08-29T17:49:05.113968160+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:05.113968160+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust 101: Understand the Hype by MATTSI JANSKY - YouTube",
        "uri_uuid": "95844d059862d1bc5a78d926853e7fd3215894cfcdbb4a4d2e48304f71565f5a",
        "url": "https://www.youtube.com/watch?v=DO4jJ1O3Cq4"
    },
    {
        "auto_descr": "Rust is a unique programming language that blends imperative and functional concepts to make low-level systems safer. However, compared to other modern langu...",
        "crea_time": "2024-08-29T17:49:05.762356240+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:05.762356240+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "\"Type-Driven API Design in Rust\" by Will Crichton - YouTube",
        "uri_uuid": "fc86f5a9e581da4eb48644bcf80539e0893755eaf10f4d37dcea25ebbeb19509",
        "url": "https://www.youtube.com/watch?v=bnnacleqg6k"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:06.430401578+02:00",
        "crea_user": "api",
        "host": "www.ncameron.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:06.430401578+02:00",
        "modi_user": "api",
        "path": "/blog/rust-through-the-ages/",
        "scheme": "https",
        "title": "Rust through the ages",
        "uri_uuid": "124ac9520d7e239e117ed0fcfeca00e0e81a98ab7903788215b8503b96dfe31d",
        "url": "https://www.ncameron.org/blog/rust-through-the-ages/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:07.752218311+02:00",
        "crea_user": "api",
        "host": "blog.jetbrains.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:07.752218311+02:00",
        "modi_user": "api",
        "path": "/rust/2024/05/21/rustrover-is-released-and-includes-a-free-non-commercial-option/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "1d06add66046a9cdeff5e5b8cf89613fa57f13dcae51a676aeff888115d601fe",
        "url": "https://blog.jetbrains.com/rust/2024/05/21/rustrover-is-released-and-includes-a-free-non-commercial-option/"
    },
    {
        "auto_descr": "Buy RustRover: Get JetBrains Toolbox subscription for an Organization, for Individual Use or view Special Offers",
        "crea_time": "2024-08-29T17:49:07.896592739+02:00",
        "crea_user": "api",
        "host": "www.jetbrains.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:07.896592739+02:00",
        "modi_user": "api",
        "path": "/rust/buy/",
        "scheme": "https",
        "title": "Pricing and Licensing, Free options available\n",
        "uri_uuid": "b8a096e9fe7bf5a159062b3345e4fb9972b4daec3ac5c9594027e029799a27f9",
        "url": "https://www.jetbrains.com/rust/buy/?billing=yearly"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:08.181296779+02:00",
        "crea_user": "api",
        "host": "open.spotify.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:08.181296779+02:00",
        "modi_user": "api",
        "path": "/episode/3L21G1UjtNMBZFVzB4GYza",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "2c393f0f6c0d0f3d8836e387c51c50c7e042aa6080ea0975a4573d2d210d15f9",
        "url": "https://open.spotify.com/episode/3L21G1UjtNMBZFVzB4GYza?si=GLff1fItTGmWdrEP4bfOwQ"
    },
    {
        "auto_descr": "This blog is the personal blog of Ecton to write longer posts on his projects or other topics that interest him.",
        "crea_time": "2024-08-29T17:49:08.346586135+02:00",
        "crea_user": "api",
        "host": "ecton.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:08.346586135+02:00",
        "modi_user": "api",
        "path": "/cushy-v0-3/",
        "scheme": "https",
        "title": " Cushy v0.3: New widgets, offscreen capture, Plotters and Tokio integrations, and more ",
        "uri_uuid": "4c842df4a8ded380114a50c417f46c1b13860fd7505bb2f77f14a6cdc087f119",
        "url": "https://ecton.dev/cushy-v0-3/"
    },
    {
        "auto_descr": "Rust has reached a level of maturity where it is being used for critical\ninfrastructure, replacing legacy systems written in C or C++.\nThis means, some Rust projects need to be maintained for years or even decades to come.\n…",
        "crea_time": "2024-08-29T17:49:08.858457356+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:08.858457356+02:00",
        "modi_user": "api",
        "path": "/blog/long-term-rust-maintenance/",
        "scheme": "https",
        "title": "Long-term Rust Project Maintenance | corrode Rust Consulting",
        "uri_uuid": "bcfc524c922e98df8c220966a5e9507caec82ee178c57790f5b2273e7ce92b09",
        "url": "https://corrode.dev/blog/long-term-rust-maintenance/"
    },
    {
        "auto_descr": "Greptime provides cloud-scale, fast and efficient time series data infrastructure",
        "crea_time": "2024-08-29T17:49:09.121298301+02:00",
        "crea_user": "api",
        "host": "greptime.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:09.121298301+02:00",
        "modi_user": "api",
        "path": "/blogs/2024-05-07-error-rust",
        "scheme": "https",
        "title": "Error Handling for Large Rust Projects - A Deep Dive into GreptimeDB's Practices | Greptime",
        "uri_uuid": "a212d1186518fbca17f45d9f5bdb00f31ab0b8a5b55768babf4c408b9f2c8db4",
        "url": "https://greptime.com/blogs/2024-05-07-error-rust"
    },
    {
        "auto_descr": "\"With so many damaging software exploits haunting our industry and so much at stake, software foundations, technology consortiums, and governments around the world are taking notice and advocating for improved programming practices and tools.\"",
        "crea_time": "2024-08-29T17:49:09.917424066+02:00",
        "crea_user": "api",
        "host": "foundation.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:09.917424066+02:00",
        "modi_user": "api",
        "path": "/news/unsafe-rust-in-the-wild-notes-on-the-current-state-of-unsafe-rust/",
        "scheme": "https",
        "title": "Rust Foundation - Unsafe Rust in the Wild: Notes on the Current State of Unsafe Rust",
        "uri_uuid": "77708e27a297c35a9f041a6622c408248c381d8c11a3ff591532da322ab7c72c",
        "url": "https://foundation.rust-lang.org/news/unsafe-rust-in-the-wild-notes-on-the-current-state-of-unsafe-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:10.171529034+02:00",
        "crea_user": "api",
        "host": "ntietz.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:10.171529034+02:00",
        "modi_user": "api",
        "path": "/blog/rusts-iterators-optimize-footgun/",
        "scheme": "https",
        "title": "Rust's iterators optimize nicely—and contain a footgun | nicole@web",
        "uri_uuid": "0cbc65f47e66d821989a6e895ee17b11b678598cd9663b1af534bb290258c27a",
        "url": "https://ntietz.com/blog/rusts-iterators-optimize-footgun/"
    },
    {
        "auto_descr": "Learn how Rust 1.78 fixed the alignment of 128-bit integers and how we can measure its impact on performance.",
        "crea_time": "2024-08-29T17:49:10.732961126+02:00",
        "crea_user": "api",
        "host": "codspeed.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:10.732961126+02:00",
        "modi_user": "api",
        "path": "/blog/rust-1-78-performance-impact-of-the-128-bit-memory-alignment-fix",
        "scheme": "https",
        "title": "Rust 1.78: Performance Impact of the 128-bit Memory Alignment Fix - CodSpeed",
        "uri_uuid": "ff883f8f6125849fd9a0cd5667f364dd697bb85211832d84e9e945a2e605ccc8",
        "url": "https://codspeed.io/blog/rust-1-78-performance-impact-of-the-128-bit-memory-alignment-fix"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:10.971672734+02:00",
        "crea_user": "api",
        "host": "open.spotify.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:10.971672734+02:00",
        "modi_user": "api",
        "path": "/show/0Hf6gWrzpSzXp1X0cebbsT",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "7c196ceb94ba7d1482a0c0595b4622ad9ad8b86e6b3af70f9041eaddb72e3d73",
        "url": "https://open.spotify.com/show/0Hf6gWrzpSzXp1X0cebbsT?si=C-9-Ckc9Q4Cdd4HY7skvBg"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:11.107015765+02:00",
        "crea_user": "api",
        "host": "lwn.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:11.107015765+02:00",
        "modi_user": "api",
        "path": "/Articles/970186/",
        "scheme": "https",
        "title": "Existential types in Rust [LWN.net]",
        "uri_uuid": "c04b48c2fb2b9cfdf50d9ec3fc4b4c6ad537cd7b1e66ce424f74338c7ef2e54d",
        "url": "https://lwn.net/Articles/970186/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:11.839524922+02:00",
        "crea_user": "api",
        "host": "nora.codes",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:11.839524922+02:00",
        "modi_user": "api",
        "path": "/post/methods-should-be-object-safe/",
        "scheme": "https",
        "title": "Methods Should Be Object Safe | Nora Codes",
        "uri_uuid": "ef519f410f3cfce958e89991f2bf54a7457b48fbf467aa608d8cf61495e8defc",
        "url": "https://nora.codes/post/methods-should-be-object-safe/"
    },
    {
        "auto_descr": "Systems programming provides the foundation for the world's computation. Writing performance-sensitive code requires a programming language that puts programmers in control of how memory, processor time, and other system resources …  - Selection from Programming Rust, 2nd Edition [Book]",
        "crea_time": "2024-08-29T17:49:12.801731606+02:00",
        "crea_user": "api",
        "host": "www.oreilly.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:12.801731606+02:00",
        "modi_user": "api",
        "path": "/library/view/programming-rust-2nd/9781492052586/",
        "scheme": "https",
        "title": "Programming Rust, 2nd Edition[Book]",
        "uri_uuid": "38576f94ae04d77425893d488e3332f8312481923fae8fd67dea8b23ba4adba3",
        "url": "https://www.oreilly.com/library/view/programming-rust-2nd/9781492052586/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:49:14.304983879+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:14.304983879+02:00",
        "modi_user": "api",
        "path": "/reference/items/traits.html",
        "scheme": "https",
        "title": "Traits - The Rust Reference",
        "uri_uuid": "05dbfe253d59766816c40d3cd7d7aec131903f2a9b161115f4fcf6684bac88cb",
        "url": "https://doc.rust-lang.org/reference/items/traits.html#object-safety"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:14.502836264+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:14.502836264+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "b4f3397734163f9a31cc9c9b73247273d5f44708f637a3088b103b46121ca18d",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=1455a25fcd5ed39e3c0fb4839ae64629"
    },
    {
        "auto_descr": "Returns the name of a type as a string slice.",
        "crea_time": "2024-08-29T17:49:14.654488388+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:14.654488388+02:00",
        "modi_user": "api",
        "path": "/std/any/fn.type_name.html",
        "scheme": "https",
        "title": "type_name in std::any - Rust",
        "uri_uuid": "3f50f6a2a59fde2531f58bb861ac7bdb76ff7632dc470829e3a6b30da1a138a3",
        "url": "https://doc.rust-lang.org/std/any/fn.type_name.html"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:14.797863410+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:14.797863410+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "78bc66154cc00458291dd7696dc9b9f19723a7fde47a8a506af34a573c17b110",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=07b1eee8b8972582a5eac40dba9c0546"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:14.897936127+02:00",
        "crea_user": "api",
        "host": "mh-nexus.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:14.897936127+02:00",
        "modi_user": "api",
        "path": "/de/",
        "scheme": "https",
        "title": "mh-nexus",
        "uri_uuid": "8a3f0f388b6ce9b26434adbf45e55d623581d9001512f1aa719493b8be84e3db",
        "url": "https://mh-nexus.de/de/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:49:15.221120109+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:15.221120109+02:00",
        "modi_user": "api",
        "path": "/reference/items/type-aliases.html",
        "scheme": "https",
        "title": "Type aliases - The Rust Reference",
        "uri_uuid": "c8e2cc1b9be2d86e87ab668f9e58fa087b0915eaca843e29b915f3bb05d8804f",
        "url": "https://doc.rust-lang.org/reference/items/type-aliases.html"
    },
    {
        "auto_descr": " A trait object based error handling type for easy idiomatic error handling and reporting in Rust applications - eyre/eyre/src/lib.rs at master · eyre-rs/eyre",
        "crea_time": "2024-08-29T17:49:15.403812299+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:15.403812299+02:00",
        "modi_user": "api",
        "path": "/eyre-rs/eyre/blob/master/eyre/src/lib.rs",
        "scheme": "https",
        "title": "eyre/eyre/src/lib.rs at master · eyre-rs/eyre · GitHub",
        "uri_uuid": "d99e6f14c88140207d4d4c2a7800b66e5660187ec09d1128e320199b5bcbc06b",
        "url": "https://github.com/eyre-rs/eyre/blob/master/eyre/src/lib.rs#L936"
    },
    {
        "auto_descr": "A specialized `Result` type for I/O operations.",
        "crea_time": "2024-08-29T17:49:16.747284560+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:16.747284560+02:00",
        "modi_user": "api",
        "path": "/std/io/type.Result.html",
        "scheme": "https",
        "title": "Result in std::io - Rust",
        "uri_uuid": "88e2ebcc7a23703d1d8b6f9e5fbdd5ecd8767ddaff8d7774046f3a54c794792c",
        "url": "https://doc.rust-lang.org/std/io/type.Result.html"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:16.863231842+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:16.863231842+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "34a2785b0473f3c66c13844382a55a346bbc78252c5b716edd8b16fbb3d52144",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=02ca7d32817b6fc620f96c92d8b67e8c"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - rust/src/tools/rust-analyzer/crates/hir-ty/src/mir/eval/shim.rs at master · rust-lang/rust",
        "crea_time": "2024-08-29T17:49:16.962608315+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:16.962608315+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/blob/master/src/tools/rust-analyzer/crates/hir-ty/src/mir/eval/shim.rs",
        "scheme": "https",
        "title": "rust/src/tools/rust-analyzer/crates/hir-ty/src/mir/eval/shim.rs at master · rust-lang/rust · GitHub",
        "uri_uuid": "6f2894e60aa79dcaa9ceee65fc52830f9a6bd77d989d103311a41ef01f9995b4",
        "url": "https://github.com/rust-lang/rust/blob/master/src/tools/rust-analyzer/crates/hir-ty/src/mir/eval/shim.rs#L797-L817"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:18.669797358+02:00",
        "crea_user": "api",
        "host": "krausest.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:18.669797358+02:00",
        "modi_user": "api",
        "path": "/js-framework-benchmark/current.html",
        "scheme": "https",
        "title": "Interactive Results",
        "uri_uuid": "304f62893d547116075e4e5e24b8a88d2685dd26f42e8a61a593ed19aa1f7a24",
        "url": "https://krausest.github.io/js-framework-benchmark/current.html"
    },
    {
        "auto_descr": "The core engine at the heart of Deno. Contribute to denoland/deno_core development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:18.915891333+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:18.915891333+02:00",
        "modi_user": "api",
        "path": "/denoland/deno_core",
        "scheme": "https",
        "title": "GitHub - denoland/deno_core: The core engine at the heart of Deno",
        "uri_uuid": "fe9364f5bcfce37376737b36960642d8612d44ee6de1286b683ae99c26ddcdc1",
        "url": "https://github.com/denoland/deno_core"
    },
    {
        "auto_descr": "Donald Chamberlin and Raymond Boyce published \"SEQUEL: A structured English query language\" in May 1974. It was a sequel (har, har) to their previous language, SQUARE (Specifying Queries As Relational Expressions). They later changed the name to SQL because SEQUEL was a trademark registered by the Hawker Siddeley Dynamics Engineering Limited company. SQL is based on Boyce-Codd Normal Form, a version of the relational model of Edgar F. Codd.",
        "crea_time": "2024-08-29T17:49:19.645084656+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:19.645084656+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20240521/",
        "scheme": "https",
        "title": "\n  50 Years of SQL · oylenshpeegul\n",
        "uri_uuid": "dd5deb7afb005f4cf45e6c2c81e9e9ed8035663f66ea2a60d8c3d10d658e2b6b",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20240521/"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T17:49:20.434628428+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:20.434628428+02:00",
        "modi_user": "api",
        "path": "/jugbremen/events/300607881/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "542150dc267551a943d207c63529259860f9dbd75c056de32db7e5b9dc808042",
        "url": "https://www.meetup.com/jugbremen/events/300607881/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:49:21.252252990+02:00",
        "crea_user": "api",
        "host": "book.leptos.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:21.252252990+02:00",
        "modi_user": "api",
        "path": "/ssr/index.html",
        "scheme": "https",
        "title": "Part 2: Server Side Rendering",
        "uri_uuid": "6754f9ef7d52fe16abc2ccca5f0d1aedd0acd226f02475d989d34de221a67097",
        "url": "https://book.leptos.dev/ssr/index.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:49:21.693759735+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:21.693759735+02:00",
        "modi_user": "api",
        "path": "/rustdoc/command-line-arguments.html",
        "scheme": "https",
        "title": "Command-line arguments - The rustdoc book",
        "uri_uuid": "b0998a8c194a76842e5431705f887399e4948548277ed1a4042bb8af3f2cac1f",
        "url": "https://doc.rust-lang.org/rustdoc/command-line-arguments.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - rust/src/doc/rustdoc/src/write-documentation/what-to-include.md at master · rust-lang/rust",
        "crea_time": "2024-08-29T17:49:21.868666507+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:21.868666507+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/blob/master/src/doc/rustdoc/src/write-documentation/what-to-include.md",
        "scheme": "https",
        "title": "rust/src/doc/rustdoc/src/write-documentation/what-to-include.md at master · rust-lang/rust · GitHub",
        "uri_uuid": "7d9d80718cca4c08ad4b454d987a3bf42acc05799a49b4e432eb6063aa3c605a",
        "url": "https://github.com/rust-lang/rust/blob/master/src/doc/rustdoc/src/write-documentation/what-to-include.md#customizing-the-output"
    },
    {
        "auto_descr": "tuto articles",
        "crea_time": "2024-08-29T17:49:22.662709920+02:00",
        "crea_user": "api",
        "host": "blog.guillaume-gomez.fr",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:22.662709920+02:00",
        "modi_user": "api",
        "path": "/articles/2016-09-16+Generating+doc+with+rustdoc+and+a+custom+theme",
        "scheme": "https",
        "title": "Generating doc with rustdoc and a custom theme",
        "uri_uuid": "fa6311dcf205b581422af39913f2fbda346fe4d995cfeb1dd3c2460bddc4b1d0",
        "url": "https://blog.guillaume-gomez.fr/articles/2016-09-16+Generating+doc+with+rustdoc+and+a+custom+theme"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:49:23.761830807+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:23.761830807+02:00",
        "modi_user": "api",
        "path": "/episode/carl-fredrik-samson/",
        "scheme": "https",
        "title": "Asynchronous Programming in Rust with Carl Fredrik Samson :: Rustacean Station",
        "uri_uuid": "2c1244d464bbc519a07286343feb6a38e135d7d84d2424d332bf8023e5e95322",
        "url": "https://rustacean-station.org/episode/carl-fredrik-samson/"
    },
    {
        "auto_descr": "Learn asynchronous programming by building working examples of futures, green threads, and runtimes. 3 customer reviews. Instant delivery. Top rated Application Development products.",
        "crea_time": "2024-08-29T17:49:23.889979818+02:00",
        "crea_user": "api",
        "host": "www.packtpub.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:23.889979818+02:00",
        "modi_user": "api",
        "path": "/product/asynchronous-programming-in-rust/9781805128137",
        "scheme": "https",
        "title": "Asynchronous Programming in Rust | Programming | eBook",
        "uri_uuid": "0f699a6fac4f98e29f54612371cf4d7aa5d824e1633ba19cff008d5f7dd1bbab",
        "url": "https://www.packtpub.com/product/asynchronous-programming-in-rust/9781805128137"
    },
    {
        "auto_descr": "Announcing the allocation of a recent $1M donation from Platinum Member Microsoft to support Rust Foundation and Rust Project priorities . ",
        "crea_time": "2024-08-29T17:49:24.566857687+02:00",
        "crea_user": "api",
        "host": "foundation.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:24.566857687+02:00",
        "modi_user": "api",
        "path": "/news/1m-microsoft-donation-to-fund-key-rust-foundation-project-priorities/",
        "scheme": "https",
        "title": "Rust Foundation - $1M Microsoft Donation to Fund Key Rust Foundation & Project Priorities ",
        "uri_uuid": "38c94b8c54b2f4c631784aaa3cca56bd83479722f98d8bbbfee000e6483218ba",
        "url": "https://foundation.rust-lang.org/news/1m-microsoft-donation-to-fund-key-rust-foundation-project-priorities/"
    },
    {
        "auto_descr": "Official website of the Rust Foundation",
        "crea_time": "2024-08-29T17:49:24.783614162+02:00",
        "crea_user": "api",
        "host": "foundation.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:24.783614162+02:00",
        "modi_user": "api",
        "path": "/members/",
        "scheme": "https",
        "title": "Rust Foundation - Rust Foundation",
        "uri_uuid": "5a6770b5f527b936806c079c28af74f1a0c7e7cec8617fa9924059827dce08b1",
        "url": "https://foundation.rust-lang.org/members/"
    },
    {
        "auto_descr": "Web Components is a suite of different technologies allowing you to create reusable custom elements — with their functionality encapsulated away from the rest of your code — and utilize them in your web apps.",
        "crea_time": "2024-08-29T17:49:25.017450107+02:00",
        "crea_user": "api",
        "host": "developer.mozilla.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:25.017450107+02:00",
        "modi_user": "api",
        "path": "/en-US/docs/Web/API/Web_components",
        "scheme": "https",
        "title": "Web Components - Web APIs | MDN",
        "uri_uuid": "35153834171551eaa7eea710e2ea99d318860ba8d13e17228bc62550c66bf50a",
        "url": "https://developer.mozilla.org/en-US/docs/Web/API/Web_components"
    },
    {
        "auto_descr": "Deno features improved security, performance, and developer experience compared to its predecessor. It's a great time to upgrade your Node.js project to run on Deno.",
        "crea_time": "2024-08-29T17:49:25.272813305+02:00",
        "crea_user": "api",
        "host": "deno.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:25.272813305+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Deno, the next-generation JavaScript runtime",
        "uri_uuid": "f0989e0208ecb5f5750956527904fef4fea3265ec7f6642170620add2e75f6f6",
        "url": "https://deno.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:25.584423702+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:25.584423702+02:00",
        "modi_user": "api",
        "path": "/releases/search",
        "scheme": "https",
        "title": "Releases - Docs.rs",
        "uri_uuid": "b86992f74ab9410ee18ec0edb1e1f637440d8162df20d963d80462ab397dd940",
        "url": "https://docs.rs/releases/search?query=deno"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:27.079702074+02:00",
        "crea_user": "api",
        "host": "docs.deno.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:27.079702074+02:00",
        "modi_user": "api",
        "path": "/runtime/manual/runtime/ffi_api",
        "scheme": "https",
        "title": "Foreign Function Interface",
        "uri_uuid": "75bd24ebe4f6ba3d604ccf15776f7c218ced11e234f091d607960bb584defa55",
        "url": "https://docs.deno.com/runtime/manual/runtime/ffi_api"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:49:27.480233951+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:27.480233951+02:00",
        "modi_user": "api",
        "path": "/episode/sean-mcarthur/",
        "scheme": "https",
        "title": "Hyper 1.0 with Sean McArthur :: Rustacean Station",
        "uri_uuid": "69a7724ed9f4ae15cc58466f367627b57f56318f3a555b79161901df29a78150",
        "url": "https://rustacean-station.org/episode/sean-mcarthur/"
    },
    {
        "auto_descr": "Types and traits for extracting data from requests.",
        "crea_time": "2024-08-29T17:49:27.623598129+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:27.623598129+02:00",
        "modi_user": "api",
        "path": "/axum/0.7.5/axum/extract/index.html",
        "scheme": "https",
        "title": "axum::extract - Rust",
        "uri_uuid": "bb7e8207930d7e2c6eb24034ff88ea7401ccb5be9b6adc850f6ebc114825ffe0",
        "url": "https://docs.rs/axum/0.7.5/axum/extract/index.html#intro"
    },
    {
        "auto_descr": "Source of the Rust file `src/blocking/client.rs`.",
        "crea_time": "2024-08-29T17:49:27.858647348+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:27.858647348+02:00",
        "modi_user": "api",
        "path": "/reqwest/latest/src/reqwest/blocking/client.rs.html",
        "scheme": "https",
        "title": "client.rs - source",
        "uri_uuid": "981a2798181f61fcff5445b5ce7608f8ec4b9ecd600154b593d1d308a52fd6fa",
        "url": "https://docs.rs/reqwest/latest/src/reqwest/blocking/client.rs.html#1113"
    },
    {
        "auto_descr": "A browser based code editor. Contribute to microsoft/monaco-editor development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:28.201479258+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:28.201479258+02:00",
        "modi_user": "api",
        "path": "/microsoft/monaco-editor",
        "scheme": "https",
        "title": "GitHub - microsoft/monaco-editor: A browser based code editor",
        "uri_uuid": "16fab9532995c26909015bce98385649318cc3e132ffbca056525c99224ed13d",
        "url": "https://github.com/microsoft/monaco-editor"
    },
    {
        "auto_descr": "Compiler front-end foundation technology. Contribute to Eliah-Lakhin/lady-deirdre development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:28.958320779+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:28.958320779+02:00",
        "modi_user": "api",
        "path": "/Eliah-Lakhin/lady-deirdre/tree/version-2",
        "scheme": "https",
        "title": "GitHub - Eliah-Lakhin/lady-deirdre at develop",
        "uri_uuid": "3ef295e367ad18fe590e3bff29ceca9ca90684859230b723761d4105b1bb1b22",
        "url": "https://github.com/Eliah-Lakhin/lady-deirdre/tree/version-2"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:29.986167050+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:29.986167050+02:00",
        "modi_user": "api",
        "path": "/blog/2024/05/08/this-week-in-rust-546/",
        "scheme": "https",
        "title": "This Week in Rust 546  · This Week in Rust\n",
        "uri_uuid": "623032b5606dfa8b6ca80eaefe2b40896bde2e24f471b310779e78ec21deeab1",
        "url": "https://this-week-in-rust.org/blog/2024/05/08/this-week-in-rust-546/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:31.106309424+02:00",
        "crea_user": "api",
        "host": "protohackers.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:31.106309424+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Protohackers",
        "uri_uuid": "3aa38d8a4550e55b3867828304ddc4d9b86dbd683d6778aad573d8684c2600bd",
        "url": "https://protohackers.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:31.320842615+02:00",
        "crea_user": "api",
        "host": "protohackers.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:31.320842615+02:00",
        "modi_user": "api",
        "path": "/problems",
        "scheme": "https",
        "title": "Problems - Protohackers",
        "uri_uuid": "266afa37c88156f4b3c8284247056f485291ef5d5c9b85f1349ad7cffa95f83c",
        "url": "https://protohackers.com/problems"
    },
    {
        "auto_descr": "A runtime for writing reliable network applications without compromising speed.",
        "crea_time": "2024-08-29T17:49:31.619440897+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:31.619440897+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/",
        "scheme": "https",
        "title": "tokio - Rust",
        "uri_uuid": "c6c23d28d51ec96efa298b4fe8fb7494f0639ee79f6991cc942c7e7602338e83",
        "url": "https://docs.rs/tokio/latest/tokio/"
    },
    {
        "auto_descr": "TCP/UDP/Unix bindings for `tokio`.",
        "crea_time": "2024-08-29T17:49:31.846208025+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:31.846208025+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/net/index.html",
        "scheme": "https",
        "title": "tokio::net - Rust",
        "uri_uuid": "f6eb77549103a84423fa8d0b95a7a7261c0bcf5e8bf46006ab3cbfe7809d57cc",
        "url": "https://docs.rs/tokio/latest/tokio/net/index.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:32.028875484+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:32.028875484+02:00",
        "modi_user": "api",
        "path": "/crates/cargo-expand",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c5c2339fbe17d60f216daddbbe2fd849598c70f128e9d755257a825ee4f83de3",
        "url": "https://crates.io/crates/cargo-expand"
    },
    {
        "auto_descr": "Owned read half of a `TcpStream`, created by `into_split`.",
        "crea_time": "2024-08-29T17:49:32.276005662+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:32.276005662+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/net/tcp/struct.OwnedReadHalf.html",
        "scheme": "https",
        "title": "OwnedReadHalf in tokio::net::tcp - Rust",
        "uri_uuid": "d39e152e951182a60b54aaf5e745ec65bc3ba4580248bee7bec4bac33c9d7385",
        "url": "https://docs.rs/tokio/latest/tokio/net/tcp/struct.OwnedReadHalf.html"
    },
    {
        "auto_descr": "Borrowed read half of a `TcpStream`, created by `split`.",
        "crea_time": "2024-08-29T17:49:32.569234649+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:32.569234649+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/net/tcp/struct.ReadHalf.html",
        "scheme": "https",
        "title": "ReadHalf in tokio::net::tcp - Rust",
        "uri_uuid": "fb3ddbfc0e4ddf64d810ea646f877560be3a6fa73b33bc6e1010524b25d2ac65",
        "url": "https://docs.rs/tokio/latest/tokio/net/tcp/struct.ReadHalf.html"
    },
    {
        "auto_descr": "Borrowed write half of a `TcpStream`, created by `split`.",
        "crea_time": "2024-08-29T17:49:32.892543567+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:32.892543567+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/net/tcp/struct.WriteHalf.html",
        "scheme": "https",
        "title": "WriteHalf in tokio::net::tcp - Rust",
        "uri_uuid": "f1d51135222925ad568696f4ee62e84c0e0574fd5209afc8da9f083ceb3e73c6",
        "url": "https://docs.rs/tokio/latest/tokio/net/tcp/struct.WriteHalf.html"
    },
    {
        "auto_descr": "Owned write half of a `TcpStream`, created by `into_split`.",
        "crea_time": "2024-08-29T17:49:33.103805308+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:33.103805308+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/net/tcp/struct.OwnedWriteHalf.html",
        "scheme": "https",
        "title": "OwnedWriteHalf in tokio::net::tcp - Rust",
        "uri_uuid": "37d1175ac6cf618c9fea31fb6062454a142ea2558ddd5d3e32720871d8542016",
        "url": "https://docs.rs/tokio/latest/tokio/net/tcp/struct.OwnedWriteHalf.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:33.390505195+02:00",
        "crea_user": "api",
        "host": "beej.us",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:33.390505195+02:00",
        "modi_user": "api",
        "path": "/guide/bgnet/",
        "scheme": "https",
        "title": "Beej's Guide to Network Programming",
        "uri_uuid": "b7647875beba3d8bf733c1baac301cc4495057aaaeff722734ac87499c125a6e",
        "url": "https://beej.us/guide/bgnet/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:34.043804601+02:00",
        "crea_user": "api",
        "host": "beej.us",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:34.043804601+02:00",
        "modi_user": "api",
        "path": "/guide/bgnet/html/split/",
        "scheme": "https",
        "title": "Beej's Guide to Network Programming",
        "uri_uuid": "52c2624e4a9987707151088de7f113891b0e8881293a19ce04e16e0c8e0d4cb2",
        "url": "https://beej.us/guide/bgnet/html/split/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:35.488274333+02:00",
        "crea_user": "api",
        "host": "marabos.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:35.488274333+02:00",
        "modi_user": "api",
        "path": "/atomics/memory-ordering.html",
        "scheme": "https",
        "title": "Rust Atomics and Locks — Chapter 3. Memory Ordering",
        "uri_uuid": "f19a2042e7514081879f692b1eb2067d4eb646655ae06a63e180004d20dfc3e2",
        "url": "https://marabos.nl/atomics/memory-ordering.html#fences"
    },
    {
        "auto_descr": "Waits on multiple concurrent branches, returning when the first branch completes, cancelling the remaining branches.",
        "crea_time": "2024-08-29T17:49:35.766100870+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:35.766100870+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/macro.select.html",
        "scheme": "https",
        "title": "select in tokio - Rust",
        "uri_uuid": "46096ce950b1f7c11a910a9104a0f0856aa057a6ae0fd35f0db497e48cb44647",
        "url": "https://docs.rs/tokio/latest/tokio/macro.select.html"
    },
    {
        "auto_descr": "Real-world proficiency projects designed for experienced engineers. Develop software craftsmanship by recreating popular devtools from scratch.",
        "crea_time": "2024-08-29T17:49:35.929332121+02:00",
        "crea_user": "api",
        "host": "app.codecrafters.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:35.929332121+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Catalog | CodeCrafters",
        "uri_uuid": "793e7243ed7d061b15b636a15b83f63c43db8e5824b92ccb29c7c50cbac5138e",
        "url": "https://app.codecrafters.io/"
    },
    {
        "auto_descr": "CI/CD pipeline process jail that filters outgoing network traffic. - staex-io/cijail",
        "crea_time": "2024-08-29T17:49:36.298472809+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:36.298472809+02:00",
        "modi_user": "api",
        "path": "/staex-io/cijail",
        "scheme": "https",
        "title": "GitHub - staex-io/cijail: CI/CD pipeline process jail that filters outgoing network traffic.",
        "uri_uuid": "f628cb48cf94a325ccbfb6dcfb90b251a72d1e5e63a415ba4574bc1cbbcf5a91",
        "url": "https://github.com/staex-io/cijail"
    },
    {
        "auto_descr": "Rust In Production. Contribute to ImplFerris/rust-in-production development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:37.260338250+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:37.260338250+02:00",
        "modi_user": "api",
        "path": "/ImplFerris/rust-in-production",
        "scheme": "https",
        "title": "GitHub - ImplFerris/rust-in-production: Rust In Production",
        "uri_uuid": "bd4a9c5097a417969447e5eca6f02110a68dd4e6ee39ba3099b3ef7c22e68f6c",
        "url": "https://github.com/ImplFerris/rust-in-production"
    },
    {
        "auto_descr": "Asynchronous signal handling for Tokio.",
        "crea_time": "2024-08-29T17:49:38.085339850+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:38.085339850+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/signal/index.html",
        "scheme": "https",
        "title": "tokio::signal - Rust",
        "uri_uuid": "b92dbaca8b3394a45d7d6b0f7ce7be1d7f018c546b3da345c50856cacb4ac83f",
        "url": "https://docs.rs/tokio/latest/tokio/signal/index.html"
    },
    {
        "auto_descr": "Signal handling for rust. Contribute to tailhook/signal development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:38.232868896+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:38.232868896+02:00",
        "modi_user": "api",
        "path": "/tailhook/signal/blob/master/src/trap.rs",
        "scheme": "https",
        "title": "signal/src/trap.rs at master · tailhook/signal · GitHub",
        "uri_uuid": "f9489b57d9ba6fe8522b9a26c564564e9d7ed7db79ed55d252b2dc440978d4cd",
        "url": "https://github.com/tailhook/signal/blob/master/src/trap.rs"
    },
    {
        "auto_descr": "Rust Memory Container Cheat-sheet. Contribute to usagi/rust-memory-container-cs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:39.191023885+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:39.191023885+02:00",
        "modi_user": "api",
        "path": "/usagi/rust-memory-container-cs",
        "scheme": "https",
        "title": "GitHub - usagi/rust-memory-container-cs: Rust Memory Container Cheat-sheet",
        "uri_uuid": "33bca8bbd7d48726e385ce619266b8d16b671092415db961bff00bd1aa750a28",
        "url": "https://github.com/usagi/rust-memory-container-cs"
    },
    {
        "auto_descr": "In this episode of Crust of Rust, we go over Rust's atomic types, including the mysterious Ordering enum. In particular, we explore the std::sync::atomic mod...",
        "crea_time": "2024-08-29T17:49:40.087364958+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:40.087364958+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Crust of Rust: Atomics and Memory Ordering - YouTube",
        "uri_uuid": "22e9560af812a903e7a45f03e2d28c2762f17990a9083632a23b29a83dc354d0",
        "url": "https://www.youtube.com/watch?v=rMGWeSjctlY"
    },
    {
        "auto_descr": "Low-level Concurrency in Practice. This practical book helps Rust programmers of all levels gain a clear understanding of low-level concurrency. You'll learn everything about atomics and memory ordering and how they're combined with basic operating system APIs to build common primitives like mutexes and condition variables. Once you're done, you'll have a firm grasp of how Rust's memory model, the processor, and the role of the operating system all fit together.",
        "crea_time": "2024-08-29T17:49:40.799398321+02:00",
        "crea_user": "api",
        "host": "marabos.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:40.799398321+02:00",
        "modi_user": "api",
        "path": "/atomics/",
        "scheme": "https",
        "title": "Rust Atomics and Locks by Mara Bos",
        "uri_uuid": "bb353b3aff01ec31f3946572db3eb1dcb9abb6107ba1b1f1e5da115c3563676a",
        "url": "https://marabos.nl/atomics/"
    },
    {
        "auto_descr": "Rust library that's all about cooking up terminal user interfaces (TUIs) 👨‍🍳🐀 - ratatui/ratatui",
        "crea_time": "2024-08-29T17:49:40.986480642+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:40.986480642+02:00",
        "modi_user": "api",
        "path": "/ratatui-org/ratatui",
        "scheme": "https",
        "title": "GitHub - ratatui/ratatui: Rust library that's all about cooking up terminal user interfaces (TUIs) 👨‍🍳🐀",
        "uri_uuid": "fe1bbf455d52f430bbc561b10ed9f7f75b69b8ff746f256db6321e71dadbb200",
        "url": "https://github.com/ratatui-org/ratatui"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:42.050236317+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:42.050236317+02:00",
        "modi_user": "api",
        "path": "/wiki/MESI_protocol",
        "scheme": "https",
        "title": "MESI protocol - Wikipedia",
        "uri_uuid": "50897f174c8da9752a1fc38510d2c16a07a4c9263a65ae660e59c60071957b79",
        "url": "https://en.wikipedia.org/wiki/MESI_protocol"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:42.349929087+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:42.349929087+02:00",
        "modi_user": "api",
        "path": "/wiki/MOESI_protocol",
        "scheme": "https",
        "title": "MOESI protocol - Wikipedia",
        "uri_uuid": "e10a119aa43a8daa3d358302275783ea75dbe6c56e781f7dd0e590ec8433dc55",
        "url": "https://en.wikipedia.org/wiki/MOESI_protocol"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:49:42.556299360+02:00",
        "crea_user": "api",
        "host": "docs.helix-editor.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:42.556299360+02:00",
        "modi_user": "api",
        "path": "/install.html",
        "scheme": "https",
        "title": "Installation",
        "uri_uuid": "76b83157b8119f14aece9852656d5ba4f5aa069e491bfd1c6f3af29ddfcb052b",
        "url": "https://docs.helix-editor.com/install.html"
    },
    {
        "auto_descr": "Source code: Lib/threading.py This module constructs higher-level threading interfaces on top of the lower level_thread module. CPython implementation detail: In CPython, due to the Global Interpre...",
        "crea_time": "2024-08-29T17:49:42.792088564+02:00",
        "crea_user": "api",
        "host": "docs.python.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:42.792088564+02:00",
        "modi_user": "api",
        "path": "/3/library/threading.html",
        "scheme": "https",
        "title": "threading — Thread-based parallelism — Python 3.12.5 documentation",
        "uri_uuid": "04d11e4ffbecf13948bb40abc74bdb539e58ae4705b73b5aa158456dbdec0103",
        "url": "https://docs.python.org/3/library/threading.html"
    },
    {
        "auto_descr": "Contribute to matthias-buttgereit/ta-rss development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:43.044108500+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:43.044108500+02:00",
        "modi_user": "api",
        "path": "/matthias-buttgereit/ta-rss",
        "scheme": "https",
        "title": "GitHub - matthias-buttgereit/ta-rss",
        "uri_uuid": "682483a4361efa9058336732b908e8cc8403c01ee97fa8da6870c8c228663a5f",
        "url": "https://github.com/matthias-buttgereit/ta-rss"
    },
    {
        "auto_descr": "In this stream, we peeled back the crust on the tokio crate — https://github.com/tokio-rs/tokio/ — and explored its interface, structure, and mechanisms. We ...",
        "crea_time": "2024-08-29T17:49:43.800857693+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:43.800857693+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Decrusting the tokio crate - YouTube",
        "uri_uuid": "63918e3a2922bb819d5c33527ed3b795b0f6b5ec6b5f31cdc6764e8b716b4238",
        "url": "https://www.youtube.com/watch?v=o2ob8zkeq2s"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:44.670153741+02:00",
        "crea_user": "api",
        "host": "www.manning.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:44.670153741+02:00",
        "modi_user": "api",
        "path": "/books/code-like-a-pro-in-rust",
        "scheme": "https",
        "title": "Code Like a Pro in Rust",
        "uri_uuid": "3a8e0ad236309141d0179d7846ee0d601400cd9a7ad2c48f97d278d1a4812bbe",
        "url": "https://www.manning.com/books/code-like-a-pro-in-rust"
    },
    {
        "auto_descr": "I now do a lot of NFT stuff: https://twitter.com/punk9059 The Korean alphabet is surprisingly easy to learn.  I can't speak a word but can read most symbols....",
        "crea_time": "2024-08-29T17:49:47.306065259+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:47.306065259+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Learn to Read Korean in 5 Minutes (seriously) - YouTube",
        "uri_uuid": "ee58697e1ec18b52c719da9434938418485a8a2be5de65c2f38875f8616852e3",
        "url": "https://www.youtube.com/watch?v=TE4eplsFSms"
    },
    {
        "auto_descr": "Addresses #115874.\n(This PR replicates the original #115875, which I accidentally closed by deleting my forked repository...)",
        "crea_time": "2024-08-29T17:49:48.268347026+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:48.268347026+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/115913",
        "scheme": "https",
        "title": "checked_ilog: improve performance by FedericoStra · Pull Request #115913 · rust-lang/rust · GitHub",
        "uri_uuid": "cad4f036cafd205be974c1e85eea8bfa0a195c5dfe161f91bc7f3cf2d1839863",
        "url": "https://github.com/rust-lang/rust/pull/115913"
    },
    {
        "auto_descr": "This makes all implementations of Read that have a specialized read_exact implementation also have one for read_buf_exact.",
        "crea_time": "2024-08-29T17:49:50.435333149+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:50.435333149+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/122393",
        "scheme": "https",
        "title": "Specialize many implementations of `Read::read_buf_exact` by a1phyr · Pull Request #122393 · rust-lang/rust · GitHub",
        "uri_uuid": "c104b96cb1249c59bc5ff351f0e6ef7767b0a6430c028610c17309036bc3de33",
        "url": "https://github.com/rust-lang/rust/pull/122393"
    },
    {
        "auto_descr": "This makes sure that &[] is equivalent to unsafe code (from_raw_parts(dangling, 0)). No new stable guarantee is intended about whether or not we do this, this is just an optimization.\nThis regresse...",
        "crea_time": "2024-08-29T17:49:51.314818702+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:51.314818702+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/123936",
        "scheme": "https",
        "title": "Codegen ZSTs without an allocation by Mark-Simulacrum · Pull Request #123936 · rust-lang/rust · GitHub",
        "uri_uuid": "90a6d015a95375a9c7462f62befd5ec0adfb1c0eddfe1c6a1dfac011d0045338",
        "url": "https://github.com/rust-lang/rust/pull/123936"
    },
    {
        "auto_descr": "Contribute to jbethune/naive development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:49:53.287667153+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:53.287667153+02:00",
        "modi_user": "api",
        "path": "/jbethune/naive/tree/main/naive_003",
        "scheme": "https",
        "title": "naive/naive_003 at main · jbethune/naive · GitHub",
        "uri_uuid": "6a4f281ee2c9e05147e146d2bf66a67dd0e813f72b715ec08178ca2247c83f7a",
        "url": "https://github.com/jbethune/naive/tree/main/naive_003"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.012319857+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.012319857+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "ddcbde7ff329210980e4a66c04f4264ff25904b9d288f63128836fae4a2118ed",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.110734963+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.110734963+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "92ea2f09d69c0858a56fbd8aae4ccb000f2618fc9d074a5589e75adb37edd4b0",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=7f49a0470cf692250bc4c3c92ae22616"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.219634040+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.219634040+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "7796b04c34be26b97d7cf3c26a845ac59aa61efbb70a6066e2c6d03e92e33959",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=ddf8ca56713f4f4fef6f5a8f17594b5b"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.325808393+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.325808393+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "c96e4ce7d0a6d0d4e35037acf6ea4ee061e62611bf0c354fe5799d17e75edc5f",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=73628611a25f3af36d0fea5788e7169e"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.439752278+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.439752278+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "2f272cb1806af28c19a89cb6fb59472da8ea69446f253f4de9d4ca6b7e988c28",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=9e3e0e21bc1bad74212dc281a44402da"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.539168406+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.539168406+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "16996bfbb51615d4faf32c595511927ada56e2f64d24ccc9331fe2f7bc5f9619",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=dc5d7f1587f0af98250ffe05bf707dcf"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.664203974+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.664203974+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "d4dcf02fdb2569aab2eb15b54eaf18b86679c046a8268464550efde2d4bee8a4",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=c34074a9788c45fa69f0098df97bf5ca"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:49:54.762539985+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.762539985+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "b1c7af3bd4ac9f41c7c2a212911e2f683c0b712ba63645b7232374a37e0c8cdb",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=56f684682f55bdde733796e0518a2ca2"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:49:54.874387801+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:54.874387801+02:00",
        "modi_user": "api",
        "path": "/crates/serde",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "74356229c2808b9437ac87140e6c6aa7035c85b5c2c6f5fd95d98af4823bb248",
        "url": "https://crates.io/crates/serde"
    },
    {
        "auto_descr": "This implementation is heavily inspired by the existing trait implentation for std::num::Wrapping<T>.\nfix #2708",
        "crea_time": "2024-08-29T17:49:55.111352289+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:55.111352289+02:00",
        "modi_user": "api",
        "path": "/serde-rs/serde/pull/2709",
        "scheme": "https",
        "title": "Implement Ser+De for Saturating<T> by jbethune · Pull Request #2709 · serde-rs/serde · GitHub",
        "uri_uuid": "fc796795cdf440851c38158c257edfbe11b1873a2ea6ae1a42806451a248d95a",
        "url": "https://github.com/serde-rs/serde/pull/2709"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:49:56.474359002+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:56.474359002+02:00",
        "modi_user": "api",
        "path": "/2024/03/28/Rust-1.77.1.html",
        "scheme": "https",
        "title": "Announcing Rust 1.77.1 | Rust Blog",
        "uri_uuid": "c5db2cce580befc791106124348df3bbefde333416b322b444fb65f89f279d5c",
        "url": "https://blog.rust-lang.org/2024/03/28/Rust-1.77.1.html"
    },
    {
        "auto_descr": "This PR adds Vec::pop_if to the public API, behind the vec_pop_if feature.\nimpl<T> Vec<T> {\n    pub fn pop_if<F>(&mut self, f: F) -> Option<T>\n        where F: FnOnce(&mut T) -> bool;\n}\nTracking is...",
        "crea_time": "2024-08-29T17:49:56.717245692+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:56.717245692+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/123107",
        "scheme": "https",
        "title": "Implement `Vec::pop_if` by avandesa · Pull Request #123107 · rust-lang/rust · GitHub",
        "uri_uuid": "06d2d3d856d9c857ab643e5fee6c3398ce6abc50a84092668a7eccb3136fdb95",
        "url": "https://github.com/rust-lang/rust/pull/123107"
    },
    {
        "auto_descr": "Godbolt says this saves a few instructions…\n@rustbot label T-libs A-layout C-optimization",
        "crea_time": "2024-08-29T17:49:58.093156316+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:58.093156316+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/122616",
        "scheme": "https",
        "title": "Optimize `core::char::CaseMappingIter` by Jules-Bertholet · Pull Request #122616 · rust-lang/rust · GitHub",
        "uri_uuid": "a73383310d98281c37e7e41e991b3f209d8a38ca162368de55b7cdc530df0dbe",
        "url": "https://github.com/rust-lang/rust/pull/122616"
    },
    {
        "auto_descr": "This commit makes FromStr on integers constant so that const x: u32 = \"23\".parse(); works. More practical use-case is with environment variables at build time as discussed in rust-lang/rfcs#1907.\nT...",
        "crea_time": "2024-08-29T17:49:59.692572440+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:49:59.692572440+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/99322",
        "scheme": "https",
        "title": "Make {integer}::from_str_radix constant by GKFX · Pull Request #99322 · rust-lang/rust · GitHub",
        "uri_uuid": "0c1d648631a9b33af122bfd349a38daa6d490bc1d164668631b1f60f04b61efb",
        "url": "https://github.com/rust-lang/rust/pull/99322"
    },
    {
        "auto_descr": "This removes one of the allocations in a fn main() {} program.",
        "crea_time": "2024-08-29T17:50:01.997494917+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:01.997494917+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/123433",
        "scheme": "https",
        "title": "Remove rt::init allocation for thread name by GnomedDev · Pull Request #123433 · rust-lang/rust · GitHub",
        "uri_uuid": "46274e79ef8a4124f02fe1a63aa1dfbdbb1f7fdca557ac30f7d382b8628373c0",
        "url": "https://github.com/rust-lang/rust/pull/123433"
    },
    {
        "auto_descr": "Similar to #114370 for VecDeque instead of Vec.\nI initially come from rust-itertools/itertools#899 where we noticed that pop_front;push_back; was slower than expected so @scottmcm suggested I file ...",
        "crea_time": "2024-08-29T17:50:03.791318539+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:03.791318539+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/123089",
        "scheme": "https",
        "title": "Add invariant to VecDeque::pop_* that len < cap if pop successful by Philippe-Cholet · Pull Request #123089 · rust-lang/rust · GitHub",
        "uri_uuid": "a690207d4fa01adbc950a8ba81d8b9be4a3c9573b79f7aa0bccf75ec6b450895",
        "url": "https://github.com/rust-lang/rust/pull/123089"
    },
    {
        "auto_descr": "Rust is often considered a hard to learn language. And sure enough, on just about every topic you *can* go arbitrarily deep and find new and fascinating thin...",
        "crea_time": "2024-08-29T17:50:05.633083855+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:05.633083855+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Andre Bogus - Easy Mode Rust - YouTube",
        "uri_uuid": "39a63fff2c01a1fea41a7881f50114859bc8c58370f4415b76f4a44e5f6fe9a9",
        "url": "https://www.youtube.com/watch?v=33FG6O3qejM"
    },
    {
        "auto_descr": "A critical 10/10 vulnerability has been found in Rust, but how important is it really? Check it out in this video.https://github.com/frostb1ten/CVE-2024-2457...",
        "crea_time": "2024-08-29T17:50:06.357855108+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:06.357855108+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "major security vulnerability found in rust (over hyped?) - YouTube",
        "uri_uuid": "06d51745f881b6e6cbf0675330c6f04f165e8c11b06d7d8a517eb3f50e1e7aaf",
        "url": "https://www.youtube.com/watch?v=wLpBJKZckl0&t=387s&ab_channel=LowLevelLearning"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:50:06.911423589+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:06.911423589+02:00",
        "modi_user": "api",
        "path": "/2024/04/09/Rust-1.77.2.html",
        "scheme": "https",
        "title": "Announcing Rust 1.77.2 | Rust Blog",
        "uri_uuid": "ec6395c421f5cee2dd69fef011c58d2e5d953c9ca27b1f72f2ccfa6e0dbe49b4",
        "url": "https://blog.rust-lang.org/2024/04/09/Rust-1.77.2.html"
    },
    {
        "auto_descr": "Many discussions about open source dependencies and maintenance happened in the last month.Two posts caught my eye in the Rust ecosystem: Sudo-rs dependencie...",
        "crea_time": "2024-08-29T17:50:07.138356071+02:00",
        "crea_user": "api",
        "host": "gendignoux.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:07.138356071+02:00",
        "modi_user": "api",
        "path": "/blog/2024/04/08/xz-backdoor.html",
        "scheme": "https",
        "title": "Thoughts on the xz backdoor: an lzma-rs perspective | Blog | Guillaume Endignoux",
        "uri_uuid": "fd85662f8eb43f2ef60b13b83e22bd34215e350d049366bdc4e329b02870d6c9",
        "url": "https://gendignoux.com/blog/2024/04/08/xz-backdoor.html"
    },
    {
        "auto_descr": "Adaptors from `AsyncRead`/`AsyncWrite` to Stream/Sink",
        "crea_time": "2024-08-29T17:50:07.521914199+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:07.521914199+02:00",
        "modi_user": "api",
        "path": "/tokio-util/latest/tokio_util/codec/index.html",
        "scheme": "https",
        "title": "tokio_util::codec - Rust",
        "uri_uuid": "46ca2c9239d5605fc2b590cd76c9859faa99751674b0f0ea74462c10b41dfe9c",
        "url": "https://docs.rs/tokio-util/latest/tokio_util/codec/index.html"
    },
    {
        "auto_descr": "Last time I added the ability to swap the storage layer at runtime and started to migrate more of the code to use this new approach. This leaves a mix of old...",
        "crea_time": "2024-08-29T17:50:07.693387122+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:07.693387122+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Programming in Haskell -- tidying up the storage - YouTube",
        "uri_uuid": "c70ccafa21410e4f82a16326068dbe16200a1246aaac979552e40fcf638e4726",
        "url": "https://www.youtube.com/watch?v=yG3m4I1YQ-w"
    },
    {
        "auto_descr": "A common refrain is that threads can do everything that async/await can, but simpler. So why would anyone choose async/await?",
        "crea_time": "2024-08-29T17:50:08.400358652+02:00",
        "crea_user": "api",
        "host": "notgull.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:08.400358652+02:00",
        "modi_user": "api",
        "path": "/why-not-threads/",
        "scheme": "https",
        "title": "Why choose async/await over threads? – notgull – The world's number one source of notgull",
        "uri_uuid": "6cc9dcf81b5a2524fb24651ccd9ea06fec9a7766d0ac47d863afdc687f1febac",
        "url": "https://notgull.net/why-not-threads/"
    },
    {
        "auto_descr": "Infrared remote control library for embedded Rust. Contribute to jkristell/infrared development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:08.933969031+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:08.933969031+02:00",
        "modi_user": "api",
        "path": "/jkristell/infrared/tree/master/examples%2Frp-pico",
        "scheme": "https",
        "title": "infrared/examples/rp-pico at master · jkristell/infrared · GitHub",
        "uri_uuid": "7c9d37e8c756d204853798db28a1fea2fb270f0591b5c3858dd778890127a464",
        "url": "https://github.com/jkristell/infrared/tree/master/examples%2Frp-pico"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:09.505333899+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:09.505333899+02:00",
        "modi_user": "api",
        "path": "/wiki/Bit_blit",
        "scheme": "https",
        "title": "Bit blit - Wikipedia",
        "uri_uuid": "8928400c737cf7573e47028ff72847b707a10c1d3436c1d9629223a4c5394666",
        "url": "https://en.wikipedia.org/wiki/Bit_blit"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:09.759755394+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:09.759755394+02:00",
        "modi_user": "api",
        "path": "/wiki/Motion_JPEG",
        "scheme": "https",
        "title": "Motion JPEG - Wikipedia",
        "uri_uuid": "01613c3bed55afdb87122f5e859609803e5eba1b7a8827786433982b40cf0f51",
        "url": "https://en.wikipedia.org/wiki/Motion_JPEG"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:10.084842376+02:00",
        "crea_user": "api",
        "host": "www.w3.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:10.084842376+02:00",
        "modi_user": "api",
        "path": "/TR/WGSL/",
        "scheme": "https",
        "title": "WebGPU Shading Language",
        "uri_uuid": "280ccea0276ed21f7c2721941791ed4f832dec0d20c4f4f7a0d012c65e8dc709",
        "url": "https://www.w3.org/TR/WGSL/"
    },
    {
        "auto_descr": "This crate provides a library for decoding valid ITU-T Rec. T.851 (09/2005) ITU-T T.81 (JPEG-1) or JPEG images.",
        "crea_time": "2024-08-29T17:50:13.030476799+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:13.030476799+02:00",
        "modi_user": "api",
        "path": "/zune-jpeg/latest/zune_jpeg/",
        "scheme": "https",
        "title": "zune_jpeg - Rust",
        "uri_uuid": "0ec7bb8dda767388646b87f6817fb4edde85813514cc9ab832b9eb669ca5075e",
        "url": "https://docs.rs/zune-jpeg/latest/zune_jpeg/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:13.158712752+02:00",
        "crea_user": "api",
        "host": "www.linkedin.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:13.158712752+02:00",
        "modi_user": "api",
        "path": "/in/andre-bogus-8a6784172/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "dc1831b711598ca2828bed7266fde9b75d8c6a26003fc73e2a495abfd11d0208",
        "url": "https://www.linkedin.com/in/andre-bogus-8a6784172/"
    },
    {
        "auto_descr": "#83022 optimized mem::replace to reduce the number of memcpys. ptr::replace, which is documented to behave just like mem::replace, was not optimized however, leading to worse code and missed optimi...",
        "crea_time": "2024-08-29T17:50:13.501440394+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:13.501440394+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/122601",
        "scheme": "https",
        "title": "Optimize `ptr::replace` by joboet · Pull Request #122601 · rust-lang/rust · GitHub",
        "uri_uuid": "3c44f908e5459e1774133532c8883501e2487b8c42b8f51961dec899eb44ff68",
        "url": "https://github.com/rust-lang/rust/pull/122601"
    },
    {
        "auto_descr": "Implementation of #122451.\nLinked const-unstability to #72440, so the post there should probably be updated to mentions the 2 new methods when/if this PR is merged.",
        "crea_time": "2024-08-29T17:50:14.537326476+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:14.537326476+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/122479",
        "scheme": "https",
        "title": "Implement `Duration::as_millis_{f64,f32}` by GrigorenkoPV · Pull Request #122479 · rust-lang/rust · GitHub",
        "uri_uuid": "eee4b2f2d1eca3970813ba8b105d81e84ef6cf5f3db245bfbac65b27a4f60f26",
        "url": "https://github.com/rust-lang/rust/pull/122479"
    },
    {
        "auto_descr": "Description\nThis PR implements DivAssign<X> and RemAssign<X> on X as suggested in rust-lang/libs-team#346.\nSince this is just a trait implementation on an already stable type, for which non-assign ...",
        "crea_time": "2024-08-29T17:50:16.008720576+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:16.008720576+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/121952",
        "scheme": "https",
        "title": "feat: implement `{Div,Rem}Assign<NonZero<X>>` on `X` by JarvisCraft · Pull Request #121952 · rust-lang/rust · GitHub",
        "uri_uuid": "15f2f67c88b400abb4277c1896dd4bebc981bbf9a947fb4940ec2041501c40a6",
        "url": "https://github.com/rust-lang/rust/pull/121952"
    },
    {
        "auto_descr": "See rust-lang/libs-team#135 for an ACP.\nSince rust-lang/libs-team#134 was also accepted, this type is now core::ffi::c_str::Bytes instead of core::ffi::CStrBytes.",
        "crea_time": "2024-08-29T17:50:17.410007463+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:17.410007463+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/104353",
        "scheme": "https",
        "title": "Add CStr::bytes iterator by clarfonthey · Pull Request #104353 · rust-lang/rust · GitHub",
        "uri_uuid": "facf368ece576c9d8ba458e1c53fcc7f062bf6260f8e956b8898ac794e6dddae",
        "url": "https://github.com/rust-lang/rust/pull/104353"
    },
    {
        "auto_descr": "Greetings!\nI took the opportunity, and I tried to stabilize the slice_split_at_unchecked feature. I followed the guidelines, and I hope everything was done correctly 🤞 .\nCloses #76014",
        "crea_time": "2024-08-29T17:50:19.456205861+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:19.456205861+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/120577",
        "scheme": "https",
        "title": "Stabilize slice_split_at_unchecked by wutchzone · Pull Request #120577 · rust-lang/rust · GitHub",
        "uri_uuid": "ffaf4fb4eba8855616c75aaa1f8278bdb24270142e94f535f691f7460eeb6a87",
        "url": "https://github.com/rust-lang/rust/pull/120577"
    },
    {
        "auto_descr": "Every single SeqCst in the standard library is unnecessary. In all cases, Relaxed or Release+Acquire was sufficient.\nAs I wrote in my book on atomics:\n\n[..] when reading code, SeqCst basically tell...",
        "crea_time": "2024-08-29T17:50:20.644173760+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:20.644173760+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/122729",
        "scheme": "https",
        "title": "Relax SeqCst ordering in standard library. by m-ou-se · Pull Request #122729 · rust-lang/rust · GitHub",
        "uri_uuid": "cb3d7aee3132af87b9b0a241bdb502480f8e36e1eccb168b68315fdd96053d77",
        "url": "https://github.com/rust-lang/rust/pull/122729"
    },
    {
        "auto_descr": "Don't Learn Rust, Just Be Productive.",
        "crea_time": "2024-08-29T17:50:22.661066019+02:00",
        "crea_user": "api",
        "host": "llogiq.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:22.661066019+02:00",
        "modi_user": "api",
        "path": "/talks/easy.html",
        "scheme": "https",
        "title": "Easy Mode Rust",
        "uri_uuid": "3cf94f7faddc32e4aa2a2f2b4981bd82454d2fbfdc8bafac746a882eb12a2f25",
        "url": "https://llogiq.github.io/talks/easy.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:23.000601303+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:23.000601303+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/1bn1e3s/new_experimental_feature_in_nightly_postfix_match/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d3b8dc548eee664da9b672b66220977d44dc01b257fc4951fa110cb3d7d0c6f5",
        "url": "https://www.reddit.com/r/rust/comments/1bn1e3s/new_experimental_feature_in_nightly_postfix_match/"
    },
    {
        "auto_descr": "Python has made software development easier, but it falls short in several areas including memory management that lead to poor performance and security. Rust, on the other hand, provides memory safety without using a garbage collector, which means that with its low memory footprint, you can build high-performant and secure apps relatively easily. However, rewriting everything in Rust can be expensive and risky as there might not be package support in Rust for the problem being solved. This is where Python bindings and pip come in.\nThis book will help you, as a Python developer, to start using Rust in your Python projects without having to manage a separate Rust server or application. Seeing as you'll already understand concepts like functions and loops, this book covers the quirks of Rust such as memory management to code Rust in a productive and structured manner. You'll explore the PyO3 crate to fuse Rust code with Python, learn how to package your fused Rust code in a pip package, and then deploy a Python Flask application in Docker that uses a private Rust pip module. Finally, you'll get to grips with advanced Rust binding topics such as inspecting Python objects and modules in Rust.\nBy the end of this Rust book, you'll be able to develop safe and high-performant applications with better concurrency support.",
        "crea_time": "2024-08-29T17:50:23.127147381+02:00",
        "crea_user": "api",
        "host": "subscription.packtpub.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:23.127147381+02:00",
        "modi_user": "api",
        "path": "/book/programming/9781801811446/13",
        "scheme": "https",
        "title": "Speed Up Your Python with Rust",
        "uri_uuid": "2f147aa43d98208ad9158c533bad2661be4792d9d222df86fd22fd887e56302b",
        "url": "https://subscription.packtpub.com/book/programming/9781801811446/13"
    },
    {
        "auto_descr": "This is a deep dive into the land of async rust. Get a drink, grab a snack, because this is going to be a long one",
        "crea_time": "2024-08-29T17:50:24.336173522+02:00",
        "crea_user": "api",
        "host": "conradludgate.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:24.336173522+02:00",
        "modi_user": "api",
        "path": "/posts/async",
        "scheme": "https",
        "title": "Let's talk about this async",
        "uri_uuid": "b868b700f0a97a8ba75c0782facd08f3295cb7a8bff61d3077c773516e48613b",
        "url": "https://conradludgate.com/posts/async"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:50:24.650559362+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:24.650559362+02:00",
        "modi_user": "api",
        "path": "/async-book/02_execution/04_executor.html",
        "scheme": "https",
        "title": "Applied: Build an Executor - Asynchronous Programming in Rust",
        "uri_uuid": "da4a4bdc6001793969023ff9ed113dffa05e3e799877276d4503053d7e29740e",
        "url": "https://rust-lang.github.io/async-book/02_execution/04_executor.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:24.879906796+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:24.879906796+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/y7r9dg/comment/iswduq8/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ceb2945d2ded630f43524b6e33c810ed526c8277a48341c88d85d934efe04c91",
        "url": "https://www.reddit.com/r/rust/comments/y7r9dg/comment/iswduq8/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button"
    },
    {
        "auto_descr": "A Unix socket which can accept connections from other Unix sockets.",
        "crea_time": "2024-08-29T17:50:24.995123637+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:24.995123637+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/net/struct.UnixListener.html",
        "scheme": "https",
        "title": "UnixListener in tokio::net - Rust",
        "uri_uuid": "07f3dda3c71a9809254cae6673613e02237987f1984f130add178c28ce418813",
        "url": "https://docs.rs/tokio/latest/tokio/net/struct.UnixListener.html#method.accept"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:50:25.230887592+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:25.230887592+02:00",
        "modi_user": "api",
        "path": "/async-book/01_getting_started/02_why_async.html",
        "scheme": "https",
        "title": "Why Async? - Asynchronous Programming in Rust",
        "uri_uuid": "d2078038d86fb87b3cd833aea1d874616f5d458296af672a209ced2dd4f68c27",
        "url": "https://rust-lang.github.io/async-book/01_getting_started/02_why_async.html"
    },
    {
        "auto_descr": "Allen Wyma talks with Carl Fredrik Samson (https://twitter.com/cf_samson)  about his book Asynchronous Programming in Rust (https://www.packtpub.com/product/...",
        "crea_time": "2024-08-29T17:50:26.234268406+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:26.234268406+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Asynchronous Programming in Rust with Carl Fredrik Samson - YouTube",
        "uri_uuid": "1980c0677dbab287926727a4039b5ea0491529db02d2b9acb447622b95dfd211",
        "url": "https://www.youtube.com/watch?v=7jnLMt630OE"
    },
    {
        "auto_descr": "I&#39;d like to start adding a &#39;quote of the week&#39; to TWiR. So far though I&#39;ve been terrible about taking note of good quotes from the Rust world. And also there is much more going on than I can follow personally. \nSo this t&hellip;",
        "crea_time": "2024-08-29T17:50:27.671029985+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:27.671029985+02:00",
        "modi_user": "api",
        "path": "/t/twir-quote-of-the-week/328",
        "scheme": "https",
        "title": "TWiR quote of the week - community - The Rust Programming Language Forum",
        "uri_uuid": "724d626b47d466faf294fb33dacfd8c355390402f25e1c58e84e0ac23f4d2bea",
        "url": "https://users.rust-lang.org/t/twir-quote-of-the-week/328"
    },
    {
        "auto_descr": "Data for this-week-in-rust.org. Contribute to rust-lang/this-week-in-rust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:29.244675632+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:29.244675632+02:00",
        "modi_user": "api",
        "path": "/rust-lang/this-week-in-rust",
        "scheme": "https",
        "title": "GitHub - rust-lang/this-week-in-rust: Data for this-week-in-rust.org",
        "uri_uuid": "b90cf37de05eda0916cc35a3917cf6d8ac46bcbd360f9736208eda9760572484",
        "url": "https://github.com/rust-lang/this-week-in-rust"
    },
    {
        "auto_descr": "Marp (also known as the Markdown Presentation Ecosystem) provides an intuitive experience for creating beautiful slide decks. You only have to focus on writing your story in a Markdown document.",
        "crea_time": "2024-08-29T17:50:30.065354004+02:00",
        "crea_user": "api",
        "host": "marp.app",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:30.065354004+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Marp: Markdown Presentation Ecosystem",
        "uri_uuid": "fc473cde794f6900c9502b770954f45683aaaa0a7d02f58a8c74ccbdd43c7d80",
        "url": "https://marp.app/"
    },
    {
        "auto_descr": "Data for this-week-in-rust.org. Contribute to rust-lang/this-week-in-rust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:30.844903064+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:30.844903064+02:00",
        "modi_user": "api",
        "path": "/rust-lang/this-week-in-rust/blob/master/content/2024-03-27-this-week-in-rust.md",
        "scheme": "https",
        "title": "this-week-in-rust/content/2024-03-27-this-week-in-rust.md at master · rust-lang/this-week-in-rust · GitHub",
        "uri_uuid": "c0442846f352c68028fd596adee9eb7046b7c7301bb61e88f60fed530e2db0bc",
        "url": "https://github.com/rust-lang/this-week-in-rust/blob/master/content/2024-03-27-this-week-in-rust.md"
    },
    {
        "auto_descr": "Rust by Example (RBE) is a collection of runnable examples that illustrate various Rust concepts and standard libraries.",
        "crea_time": "2024-08-29T17:50:32.102825391+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:32.102825391+02:00",
        "modi_user": "api",
        "path": "/rust-by-example/flow_control/let_else.html",
        "scheme": "https",
        "title": "let-else - Rust By Example",
        "uri_uuid": "ac51f31251df33300ad3f9ca69f238249b95dafdcc1a9e54611a13679f4c4114",
        "url": "https://doc.rust-lang.org/rust-by-example/flow_control/let_else.html#let-else"
    },
    {
        "auto_descr": "This week in Rust Quote of the Week scraper. Contribute to LeoniePhiline/quote-of-the-week development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:32.301746931+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:32.301746931+02:00",
        "modi_user": "api",
        "path": "/LeoniePhiline/twir-qotw-scraper/blob/main/src/main.rs",
        "scheme": "https",
        "title": "quote-of-the-week/src/main.rs at main · LeoniePhiline/quote-of-the-week · GitHub",
        "uri_uuid": "29db6babc48efab9227e16cfb0e5ad2a6fcd7c5a482727591fa62c39608d84e9",
        "url": "https://github.com/LeoniePhiline/twir-qotw-scraper/blob/main/src/main.rs"
    },
    {
        "auto_descr": "Collect \"Quotes of the Week\" from \"This Week in Rust\" - barafael/twir-qotw",
        "crea_time": "2024-08-29T17:50:33.439635894+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:33.439635894+02:00",
        "modi_user": "api",
        "path": "/barafael/twir-qotw",
        "scheme": "https",
        "title": "GitHub - barafael/twir-qotw: Collect \"Quotes of the Week\" from \"This Week in Rust\"",
        "uri_uuid": "409e148a1d6a0cb5f380981ea0f6c3fab7cf57d908dca38e69de66bb3a7c1fcf",
        "url": "https://github.com/barafael/twir-qotw"
    },
    {
        "auto_descr": "I'm very sad to share that unfortunately my application to @sovtechfund@mastodon.social for funding a 1 year project to finish busd (https://github.com/dbus2/busd) did not make it to their short list in the end.\n\nIf you know of other FOSS funds that could be interested in making this happen, do let me know.",
        "crea_time": "2024-08-29T17:50:34.330461498+02:00",
        "crea_user": "api",
        "host": "toot.cat",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:34.330461498+02:00",
        "modi_user": "api",
        "path": "/@zeenix/112095230850954082",
        "scheme": "https",
        "title": "Zeeshan Ali Khan :rust: 🇺🇦: &quot;I&#39;m very sad to share that unfortunately my appli…&quot; - Toot.Cat",
        "uri_uuid": "d54d59af649e63d02cd421b83665a7eadd036e6ab691ba14b71b4e489c4d6ae0",
        "url": "https://toot.cat/@zeenix/112095230850954082"
    },
    {
        "auto_descr": "Exploring how async Rust works, async primitives and using async in Rust traits",
        "crea_time": "2024-08-29T17:50:34.937498730+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:34.937498730+02:00",
        "modi_user": "api",
        "path": "/blog/2024/02/29/async-rust",
        "scheme": "https",
        "title": "Async Rust in a Nutshell",
        "uri_uuid": "f289f507a901c002279907231e34cfcbd1e4c71766b20e89583e5508a7af83a3",
        "url": "https://www.shuttle.rs/blog/2024/02/29/async-rust"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:50:35.207316920+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:35.207316920+02:00",
        "modi_user": "api",
        "path": "/2024/03/11/Rustup-1.27.0.html",
        "scheme": "https",
        "title": "Announcing Rustup 1.27.0 | Rust Blog",
        "uri_uuid": "266974e6b74019423f7631a6967fd1110b3b16afa1939b02e79c5b34de4bc5d9",
        "url": "https://blog.rust-lang.org/2024/03/11/Rustup-1.27.0.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:50:35.482623072+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:35.482623072+02:00",
        "modi_user": "api",
        "path": "/2024/03/11/crates-io-download-changes.html",
        "scheme": "https",
        "title": "crates.io: Download changes | Rust Blog",
        "uri_uuid": "09b7fea009fca664d1076035e3795378735574053f7a76c9cf6d8641526d34a9",
        "url": "https://blog.rust-lang.org/2024/03/11/crates-io-download-changes.html"
    },
    {
        "auto_descr": "Cargo subcommand for configuring Cargo projects for best performance. - Kobzol/cargo-wizard",
        "crea_time": "2024-08-29T17:50:36.486334878+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:36.486334878+02:00",
        "modi_user": "api",
        "path": "/kobzol/cargo-wizard",
        "scheme": "https",
        "title": "GitHub - Kobzol/cargo-wizard: Cargo subcommand for configuring Cargo projects for best performance.",
        "uri_uuid": "8189c35312c94626ed23e7b12e592f6bb861ba7274fa17a76730c98879983cb5",
        "url": "https://github.com/kobzol/cargo-wizard"
    },
    {
        "auto_descr": "Like... really f***ing fast.",
        "crea_time": "2024-08-29T17:50:37.192101094+02:00",
        "crea_user": "api",
        "host": "blog.sdf.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:37.192101094+02:00",
        "modi_user": "api",
        "path": "/p/fast-development-in-rust-part-one",
        "scheme": "https",
        "title": "Fast Development In Rust, Part One",
        "uri_uuid": "aae8531a323ca221f260ac3e85ae8d5e6422086c4e4f8db10d1d38132ed065fc",
        "url": "https://blog.sdf.com/p/fast-development-in-rust-part-one"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:37.472967522+02:00",
        "crea_user": "api",
        "host": "ankiweb.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:37.472967522+02:00",
        "modi_user": "api",
        "path": "/shared/info/1541471942",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "86946fd675793b0a0e80a909a3c2f43132e777f47086e85440ef508523baa99b",
        "url": "https://ankiweb.net/shared/info/1541471942"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:37.606560564+02:00",
        "crea_user": "api",
        "host": "blog.jetbrains.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:37.606560564+02:00",
        "modi_user": "api",
        "path": "/rust/2024/03/12/rust-iterators-beyond-the-basics-part-i-building-blocks/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "0a1570bf42457718cd00cbe82043134a03fe95ff794bc914da8df7f5fda371d3",
        "url": "https://blog.jetbrains.com/rust/2024/03/12/rust-iterators-beyond-the-basics-part-i-building-blocks/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:37.763406579+02:00",
        "crea_user": "api",
        "host": "liw.fi",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:37.763406579+02:00",
        "modi_user": "api",
        "path": "/40/",
        "scheme": "https",
        "title": "40 years of programming",
        "uri_uuid": "488a1a750a5ffd9af93f41bf1374f4f836277a6b6a2473369cc3834f16395575",
        "url": "https://liw.fi/40/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:38.029091577+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:38.029091577+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2024/03/04/borrow-checking-without-lifetimes/",
        "scheme": "https",
        "title": "Borrow checking without lifetimes · baby steps",
        "uri_uuid": "90f27a8d5c700779e29408e3adc3d8367b4cf82300eb3abb1513abbca93cd376",
        "url": "https://smallcultfollowing.com/babysteps/blog/2024/03/04/borrow-checking-without-lifetimes/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:38.814927620+02:00",
        "crea_user": "api",
        "host": "blog.janestreet.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:38.814927620+02:00",
        "modi_user": "api",
        "path": "/oxidizing-ocaml-locality/",
        "scheme": "https",
        "title": "Jane Street Tech Blog - Oxidizing OCaml: Locality ",
        "uri_uuid": "f3ca73fe23390004de69429f65d2a9499801140c2eb92236d8b14d17e07684f6",
        "url": "https://blog.janestreet.com/oxidizing-ocaml-locality/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:39.134020188+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:39.134020188+02:00",
        "modi_user": "api",
        "path": "/crates/camino",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "8951566d55a46be0eeb54908456e7571b4d8abeac7c986710db0d905101a1485",
        "url": "https://crates.io/crates/camino"
    },
    {
        "auto_descr": "A trait for dealing with iterators.",
        "crea_time": "2024-08-29T17:50:39.367980575+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:39.367980575+02:00",
        "modi_user": "api",
        "path": "/std/iter/trait.Iterator.html",
        "scheme": "https",
        "title": "Iterator in std::iter - Rust",
        "uri_uuid": "e235b2a7e28ca73ce6de22ca35ec5d67f1815ac451b10521f4d398f075789ddf",
        "url": "https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect"
    },
    {
        "auto_descr": "In this stream, we implement core pieces of git from scratch by following the CodeCrafters git \"course\" @ https://app.codecrafters.io/join?via=jonhoo, just l...",
        "crea_time": "2024-08-29T17:50:40.145844517+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:40.145844517+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Implementing (parts of) git from scratch in Rust - YouTube",
        "uri_uuid": "092cb4ed36c01e4bf96d51ece948064aeb9f8bee8b37d48b3f4e91d2bc89c8c9",
        "url": "https://www.youtube.com/watch?v=u0VotuGzD_w"
    },
    {
        "auto_descr": "Contribute to andreasklostermaier/naive development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:40.914616799+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:40.914616799+02:00",
        "modi_user": "api",
        "path": "/andreasklostermaier/naive",
        "scheme": "https",
        "title": "GitHub - andreasklostermaier/naive",
        "uri_uuid": "d791a62ce315f7911bcf1d2ce19e56d204987b67e20a61e74f82ae157d15d491",
        "url": "https://github.com/andreasklostermaier/naive"
    },
    {
        "auto_descr": "A collection of lints to catch common mistakes and improve your Rust code.",
        "crea_time": "2024-08-29T17:50:41.620107174+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:41.620107174+02:00",
        "modi_user": "api",
        "path": "/rust-clippy/master/index.html",
        "scheme": "https",
        "title": "Clippy Lints",
        "uri_uuid": "ad4cbaf538d475839a53a9b116882696cf5db88b0d41af31ecdfa8532f93a514",
        "url": "https://rust-lang.github.io/rust-clippy/master/index.html#/redundant_closure"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:41.729808301+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:41.729808301+02:00",
        "modi_user": "api",
        "path": "/wiki/Tacit_programming",
        "scheme": "https",
        "title": "Tacit programming - Wikipedia",
        "uri_uuid": "37b2c1f6920777425b78d83b5a9c88b44eba400e41e6bb6f0333b60e7cef8d36",
        "url": "https://en.wikipedia.org/wiki/Tacit_programming"
    },
    {
        "auto_descr": "A sphere droid. Not to be confused with the three-dimensional shape~Quite slow. And silly.Moves by rotating a low mass (9v battery) around an axis.Turns by t...",
        "crea_time": "2024-08-29T17:50:42.022406765+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:42.022406765+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Sphereoid - YouTube",
        "uri_uuid": "aada1371ac14946d03ae5d88fb26d37b7e5f9d21958730b60d358c284b106c58",
        "url": "https://www.youtube.com/watch?v=AgVVj8lHSYU"
    },
    {
        "auto_descr": "Bluetooth Low Energy Radio driver. Radio driver implementation focused on Bluetooth Low-Energy transmission.",
        "crea_time": "2024-08-29T17:50:42.556025161+02:00",
        "crea_user": "api",
        "host": "docs.embassy.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:42.556025161+02:00",
        "modi_user": "api",
        "path": "/embassy-nrf/git/nrf51/radio/ble/index.html",
        "scheme": "https",
        "title": "embassy_nrf::radio::ble - Rust",
        "uri_uuid": "9f3701597048d4b6837c02db1bf4c090b2203be305f380b7ccd566e2823da870",
        "url": "https://docs.embassy.dev/embassy-nrf/git/nrf51/radio/ble/index.html"
    },
    {
        "auto_descr": "Contribute to AntBlo/monorepo development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:42.767723824+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:42.767723824+02:00",
        "modi_user": "api",
        "path": "/AntBlo/monorepo/tree/main/projects/spherebot-app",
        "scheme": "https",
        "title": "monorepo/projects/spherebot-app at main · AntBlo/monorepo · GitHub",
        "uri_uuid": "0f9c5a30523e014bffd3d9b6629619bf6a3e400eb606428bd2bc37eff6c6cdd6",
        "url": "https://github.com/AntBlo/monorepo/tree/main/projects/spherebot-app"
    },
    {
        "auto_descr": "Contribute to AntBlo/monorepo development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:50:43.419861541+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:43.419861541+02:00",
        "modi_user": "api",
        "path": "/AntBlo/monorepo/tree/main/projects/spherebot-firmware",
        "scheme": "https",
        "title": "monorepo/projects/spherebot-firmware at main · AntBlo/monorepo · GitHub",
        "uri_uuid": "3f2ec636e22050ae61b4d8b226c68aced13f4d772069a094b90ccc8ef68aec7c",
        "url": "https://github.com/AntBlo/monorepo/tree/main/projects/spherebot-firmware"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:50:45.368109928+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:45.368109928+02:00",
        "modi_user": "api",
        "path": "/2024/02/19/2023-Rust-Annual-Survey-2023-results.html",
        "scheme": "https",
        "title": "2023 Annual Rust Survey Results | Rust Blog",
        "uri_uuid": "528a93692b0ce554002b8e9f135106a2b8da892439145852b60d815296a49ffd",
        "url": "https://blog.rust-lang.org/2024/02/19/2023-Rust-Annual-Survey-2023-results.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:50:45.673493882+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:45.673493882+02:00",
        "modi_user": "api",
        "path": "/inside-rust/2024/02/19/leadership-council-repr-selection.html",
        "scheme": "https",
        "title": "Leadership Council March Representative Selections | Inside Rust Blog",
        "uri_uuid": "847908c019a21cf06839f49cb267f94f6a8da306b425b341597b6d94b04f51ec",
        "url": "https://blog.rust-lang.org/inside-rust/2024/02/19/leadership-council-repr-selection.html"
    },
    {
        "auto_descr": "Mark your calendars! RustConf will be taking place in Montreal, Canada from September 10-13, 2024",
        "crea_time": "2024-08-29T17:50:45.909395947+02:00",
        "crea_user": "api",
        "host": "foundation.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:45.909395947+02:00",
        "modi_user": "api",
        "path": "/news/save-the-date-rustconf-2024-september-10-13/",
        "scheme": "https",
        "title": "Rust Foundation - Save the Date: RustConf 2024 – September 10-13",
        "uri_uuid": "406196a929ab8d480c035de2955904de80fc51da3e5da2b6b689e61990789428",
        "url": "https://foundation.rust-lang.org/news/save-the-date-rustconf-2024-september-10-13/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:46.167497903+02:00",
        "crea_user": "api",
        "host": "foundation.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:46.167497903+02:00",
        "modi_user": "api",
        "path": "/static/publications/security-initiative-report-february-2024.pdf",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "65de0a7090ded6891167d1b865007a3cf072675bcdd12829ead2d3a04c9bfb9e",
        "url": "https://foundation.rust-lang.org/static/publications/security-initiative-report-february-2024.pdf"
    },
    {
        "auto_descr": "This article takes a look at Rust tooling that helps you ship faster by boosting your productivity.",
        "crea_time": "2024-08-29T17:50:50.499885779+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:50.499885779+02:00",
        "modi_user": "api",
        "path": "/blog/2024/02/15/best-rust-tooling",
        "scheme": "https",
        "title": "Rust Tooling: 8 tools that will increase your productivity",
        "uri_uuid": "f2897a05afc4b8d71579ac51344b46be0510ee12f62fb457d5f31cda6beea275",
        "url": "https://www.shuttle.rs/blog/2024/02/15/best-rust-tooling"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:50.935790135+02:00",
        "crea_user": "api",
        "host": "www.egui.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:50.935790135+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "egui – An immediate mode GUI written in Rust",
        "uri_uuid": "b95bf9424754876a8a46ed02ffee336e71a6e05a3c6211dbb023a11c20ffd52f",
        "url": "https://www.egui.rs/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:51.054618545+02:00",
        "crea_user": "api",
        "host": "kornel.ski",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:51.054618545+02:00",
        "modi_user": "api",
        "path": "/rust-c-speed",
        "scheme": "https",
        "title": "Speed of Rust vs C",
        "uri_uuid": "7b6b1485bbb718972ccf8c2d839af4f87dc97503157bba384ca689052b7ad678",
        "url": "https://kornel.ski/rust-c-speed"
    },
    {
        "auto_descr": "Using the Overpass API to read OSM data, parsing the data with Rust, and then drawing the map onto HTML5 canvas.",
        "crea_time": "2024-08-29T17:50:51.272463662+02:00",
        "crea_user": "api",
        "host": "mary.codes",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:51.272463662+02:00",
        "modi_user": "api",
        "path": "/blog/programming/translating_openstreetmaps_to_HTML5_canvas_rust_wasm/",
        "scheme": "https",
        "title": "Translating OpenStreetMap data to HTML5 Canvas with Rust and WebAssembly | Programming | mary.codes",
        "uri_uuid": "c55caf882c04dc68b22b0818cb8710a1d6e6bde6e7ed52d9de4d6769d44e1ea7",
        "url": "https://mary.codes/blog/programming/translating_openstreetmaps_to_HTML5_canvas_rust_wasm/"
    },
    {
        "auto_descr": "Which red is your function? . GitHub Gist: instantly share code, notes, and snippets.",
        "crea_time": "2024-08-29T17:50:51.660248363+02:00",
        "crea_user": "api",
        "host": "gist.github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:51.660248363+02:00",
        "modi_user": "api",
        "path": "/JarredAllen/6cd2fd5faead573d1120a96135ed3346",
        "scheme": "https",
        "title": "Which red is your function?  · GitHub",
        "uri_uuid": "e9276689235d87eaaaf51895f8c0cee186b50d8e1124ecee56f03db83556479b",
        "url": "https://gist.github.com/JarredAllen/6cd2fd5faead573d1120a96135ed3346"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:52.278928926+02:00",
        "crea_user": "api",
        "host": "journal.stuffwithstuff.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:52.278928926+02:00",
        "modi_user": "api",
        "path": "/2015/02/01/what-color-is-your-function/",
        "scheme": "https",
        "title": "\n      What Color is Your Function?\n      \n        – journal.stuffwithstuff.com\n      \n    ",
        "uri_uuid": "cefe722a896e67af421775fb7a314fc4904d9fdba36e1cbab1a68e73660b6a0c",
        "url": "https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/"
    },
    {
        "auto_descr": "Slint is a declarative GUI toolkit to build native user interfaces for Rust, C++, or JavaScript apps. - slint/examples/mcu-board-support/esp32_s3_box at master · slint-ui/slint",
        "crea_time": "2024-08-29T17:50:53.500127909+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:53.500127909+02:00",
        "modi_user": "api",
        "path": "/slint-ui/slint/tree/master/examples/mcu-board-support/esp32_s3_box",
        "scheme": "https",
        "title": "slint/examples/mcu-board-support/esp32_s3_box at master · slint-ui/slint · GitHub",
        "uri_uuid": "17d4508181dd1bdbdb667c5abdb2b820e408fbd004e4c2a1eb180ed10b9443bd",
        "url": "https://github.com/slint-ui/slint/tree/master/examples/mcu-board-support/esp32_s3_box"
    },
    {
        "auto_descr": "A full-featured and easy-to-use web framework with the Rust programming language. - poem-web/poem",
        "crea_time": "2024-08-29T17:50:54.231058202+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:54.231058202+02:00",
        "modi_user": "api",
        "path": "/poem-web/poem",
        "scheme": "https",
        "title": "GitHub - poem-web/poem: A full-featured and easy-to-use web framework with the Rust programming language.",
        "uri_uuid": "62046a92b73249057707c3c88a95b6cf622e424d3359bc6343a9e5820f453146",
        "url": "https://github.com/poem-web/poem"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:55.040128613+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:55.040128613+02:00",
        "modi_user": "api",
        "path": "/crates/utoipa-swagger-ui",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e4a7392fb328c7d2a6acee180e16ddc985426f4f2f9a29cd8992092a22f88839",
        "url": "https://crates.io/crates/utoipa-swagger-ui"
    },
    {
        "auto_descr": "📘  OpenAPI/Swagger-generated API Reference Documentation - Redocly/redoc",
        "crea_time": "2024-08-29T17:50:55.253602751+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:55.253602751+02:00",
        "modi_user": "api",
        "path": "/Redocly/redoc",
        "scheme": "https",
        "title": "GitHub - Redocly/redoc: 📘  OpenAPI/Swagger-generated API Reference Documentation",
        "uri_uuid": "0990681f78d1308a413aea0edbdc413707f66d01d2e0814a3ae68074321b5fc5",
        "url": "https://github.com/Redocly/redoc"
    },
    {
        "auto_descr": "OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec (v2, v3) - OpenAPITools/openapi-generator",
        "crea_time": "2024-08-29T17:50:56.103839846+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:56.103839846+02:00",
        "modi_user": "api",
        "path": "/OpenAPITools/openapi-generator",
        "scheme": "https",
        "title": "GitHub - OpenAPITools/openapi-generator: OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec (v2, v3)",
        "uri_uuid": "fe996c3353841ac90612dfd45ca75047840cde59c45bca95bebe9410d28ae476",
        "url": "https://github.com/OpenAPITools/openapi-generator"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:57.076807246+02:00",
        "crea_user": "api",
        "host": "oauth.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:57.076807246+02:00",
        "modi_user": "api",
        "path": "/2/grant-types/",
        "scheme": "https",
        "title": "OAuth Grant Types",
        "uri_uuid": "862d4e547818dea5f6057656087f749344d6f6ea0240c3bd8f4826b13ac37626",
        "url": "https://oauth.net/2/grant-types/"
    },
    {
        "auto_descr": "OAuth grant types are methods for getting tokens to make requests to a resource server. The choice of grant type depends on the security level, client application type, and other conditions. Common OAuth grant types include authorization code, implicit, proof key for code exchange (PKCE), device code.",
        "crea_time": "2024-08-29T17:50:57.840955292+02:00",
        "crea_user": "api",
        "host": "frontegg.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:57.840955292+02:00",
        "modi_user": "api",
        "path": "/blog/oauth-grant-types",
        "scheme": "https",
        "title": "OAuth Grant Types: Explained | Frontegg",
        "uri_uuid": "cc435479e1de645ccb1833441e17ba168579b87ac877521e4abf5f41394e4649",
        "url": "https://frontegg.com/blog/oauth-grant-types"
    },
    {
        "auto_descr": "A reverse proxy that provides authentication with Google, Azure, OpenID Connect and many more identity providers. - oauth2-proxy/oauth2-proxy",
        "crea_time": "2024-08-29T17:50:58.593764932+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:58.593764932+02:00",
        "modi_user": "api",
        "path": "/oauth2-proxy/oauth2-proxy",
        "scheme": "https",
        "title": "GitHub - oauth2-proxy/oauth2-proxy: A reverse proxy that provides authentication with Google, Azure, OpenID Connect and many more identity providers.",
        "uri_uuid": "343e4dd46c02c74721f2054be326de066fe3b38368e8e532f645a543a7866cc5",
        "url": "https://github.com/oauth2-proxy/oauth2-proxy"
    },
    {
        "auto_descr": "You will need to register an OAuth application with a Provider (Google, GitHub or another provider), and configure it",
        "crea_time": "2024-08-29T17:50:59.382467812+02:00",
        "crea_user": "api",
        "host": "oauth2-proxy.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:59.382467812+02:00",
        "modi_user": "api",
        "path": "/oauth2-proxy/configuration/providers/",
        "scheme": "https",
        "title": "OAuth Provider Configuration | OAuth2 Proxy",
        "uri_uuid": "cc51344e3a845c2fa5f2d72b5c6536f7e07710a63eabd90df77dacbc9333a6c7",
        "url": "https://oauth2-proxy.github.io/oauth2-proxy/configuration/providers/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:59.664054693+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:59.664054693+02:00",
        "modi_user": "api",
        "path": "/crates/swagger-ui",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "1f2518403e4f863c7a9f24b2c5514d0f5f949efb0f480f4aa91d6b5c55c10356",
        "url": "https://crates.io/crates/swagger-ui"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:50:59.862037274+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:50:59.862037274+02:00",
        "modi_user": "api",
        "path": "/crates/poem-openapi",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "1a1ed4b6a5a4023e07e099889feaa34f969e7894bbf2ae5b57361886153a3bd3",
        "url": "https://crates.io/crates/poem-openapi"
    },
    {
        "auto_descr": "The cross-platform app building toolkit",
        "crea_time": "2024-08-29T17:51:00.078381190+02:00",
        "crea_user": "api",
        "host": "beta.tauri.app",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:00.078381190+02:00",
        "modi_user": "api",
        "path": "/blog/tauri-2-0-0-beta/",
        "scheme": "https",
        "title": "Announcing the Tauri v2 Beta Release | Tauri",
        "uri_uuid": "8adae2b84d58e08d2845fc503e6fd09536a4d0bbd2e32d0a788b89339daba4e2",
        "url": "https://beta.tauri.app/blog/tauri-2-0-0-beta/"
    },
    {
        "auto_descr": "None of the major Rust web frameworks have a great error reporting story. We try to implement robust error logging with both axum and Actix Web and then compare the results with Pavex, an upcoming Rust web framework.",
        "crea_time": "2024-08-29T17:51:00.720302535+02:00",
        "crea_user": "api",
        "host": "www.lpalmieri.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:00.720302535+02:00",
        "modi_user": "api",
        "path": "/posts/rust-web-frameworks-have-subpar-error-reporting/",
        "scheme": "https",
        "title": " Rust web frameworks have subpar error reporting | Luca Palmieri ",
        "uri_uuid": "4274b6b5fbf5e647ef76fab3053bcab5c8d93b4704ab837bcd1f1bcd1ccafa18",
        "url": "https://www.lpalmieri.com/posts/rust-web-frameworks-have-subpar-error-reporting/"
    },
    {
        "auto_descr": "Horizon3 wrote an article about 'Rust wont save us'. This is a response.",
        "crea_time": "2024-08-29T17:51:00.973295621+02:00",
        "crea_user": "api",
        "host": "glitchbyte.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:00.973295621+02:00",
        "modi_user": "api",
        "path": "/posts/rust-wont-save-us/",
        "scheme": "https",
        "title": "Rust wont save us, but its ideas will • Glitchbyte",
        "uri_uuid": "3dc2f82202a67f327a0eb3ef6d9062ad37d9c913f3fd5e6af19f6d20ea00616b",
        "url": "https://glitchbyte.io/posts/rust-wont-save-us/"
    },
    {
        "auto_descr": "Last year was an important year for Async Rust, culminating in the release of async fn in traits, one of Rust’s most long-awaited language features. I’m really proud of the work and expertise the Async Working Group has put in to this effort, and for the community feedback that helped shape the release.\nWe still have important work to do in the coming year, and setting priorities is one of the top things on my mind right now.",
        "crea_time": "2024-08-29T17:51:01.831569126+02:00",
        "crea_user": "api",
        "host": "tmandry.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:01.831569126+02:00",
        "modi_user": "api",
        "path": "/blog/posts/making-async-reliable/",
        "scheme": "https",
        "title": "\n        Making Async Rust Reliable - Tyler Mandry\n    ",
        "uri_uuid": "815bbf726f5bb840feb77e0c672679d66d9be36b0ba766c209a4bc92d6343001",
        "url": "https://tmandry.gitlab.io/blog/posts/making-async-reliable/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - Add more weirdness to weird-exprs.rs by oberien · Pull Request #119028 · rust-lang/rust",
        "crea_time": "2024-08-29T17:51:02.557548539+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:02.557548539+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/119028/files",
        "scheme": "https",
        "title": "Add more weirdness to weird-exprs.rs by oberien · Pull Request #119028 · rust-lang/rust · GitHub",
        "uri_uuid": "722d436a3f093dc487d5b4fc4d1dc468f0cde5f8185fdd5b953147689cd44ace",
        "url": "https://github.com/rust-lang/rust/pull/119028/files"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:03.476215867+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:03.476215867+02:00",
        "modi_user": "api",
        "path": "/2024/schedule/track/rust/",
        "scheme": "https",
        "title": "FOSDEM 2024 - Rust devroom",
        "uri_uuid": "e86b224487631c5cde13521406f2569d0943dfbbddd4b25c3b977874e591181c",
        "url": "https://fosdem.org/2024/schedule/track/rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:03.683563121+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:03.683563121+02:00",
        "modi_user": "api",
        "path": "/2024/schedule/event/fosdem-2024-3283-the-state-of-the-matrix-rust-sdk-in-2023/",
        "scheme": "https",
        "title": "FOSDEM 2024 - The state of the Matrix Rust SDK in 2023",
        "uri_uuid": "da29e7b06f045e9d41a8568ce38d2379e14d6c1998cf9364496c8b85509e38ad",
        "url": "https://fosdem.org/2024/schedule/event/fosdem-2024-3283-the-state-of-the-matrix-rust-sdk-in-2023/"
    },
    {
        "auto_descr": "I just finished reading The Churn by James S. A. Corey. It's quite short, but it was a fun read!\n It is a sort of prequel to The Expanse novels, which I haven't read. A friend of mine from online Rust meetups mentioned it to me. I always introduce myself as \"Tim from Baltimore\" at these meetups and the main character in The Churn is \"Timmy from Baltimore.\" Naturally, I wanted to see what he was all about!",
        "crea_time": "2024-08-29T17:51:03.874935715+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:03.874935715+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20230612/",
        "scheme": "https",
        "title": "\n  The Churn · oylenshpeegul\n",
        "uri_uuid": "4e784995b4090278a476abfda2c41e3706885d8403d45f61a78eb697ac306b9f",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20230612/"
    },
    {
        "auto_descr": "The next-generation framework for embedded applications. Write safe, correct and energy-efficient embedded code faster, using the Rust programming language, its async facilities, and the Embassy libraries.",
        "crea_time": "2024-08-29T17:51:04.406902025+02:00",
        "crea_user": "api",
        "host": "embassy.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:04.406902025+02:00",
        "modi_user": "api",
        "path": "/blog/embassy-hals-released/",
        "scheme": "https",
        "title": "Embassy crates released and Rust stable support | Embassy",
        "uri_uuid": "e5ddf7f3e61e08688429f1321a05dd867ee4592ed3310a0deccd9d5857206e27",
        "url": "https://embassy.dev/blog/embassy-hals-released/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:05.221487970+02:00",
        "crea_user": "api",
        "host": "beej.us",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:05.221487970+02:00",
        "modi_user": "api",
        "path": "/guide/bgnet0/",
        "scheme": "https",
        "title": "Beej's Guide to Networking Concepts",
        "uri_uuid": "0dd3253d1106be1390a23ef7dff2c7293b7c72ead7893fa957c6d3b334e62f95",
        "url": "https://beej.us/guide/bgnet0/"
    },
    {
        "auto_descr": "GPX file splitter written in Rust. Contribute to mario-s/gpx_split_rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:51:05.818015860+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:05.818015860+02:00",
        "modi_user": "api",
        "path": "/mario-s/gpx_split_rs",
        "scheme": "https",
        "title": "GitHub - mario-s/gpx_split_rs: GPX file splitter written in Rust",
        "uri_uuid": "c06474e5fa9c8b3ac2d26f6f4e596521b66140e6559922e7412cbdd7a62b446c",
        "url": "https://github.com/mario-s/gpx_split_rs"
    },
    {
        "auto_descr": "Have you ever tried to compile a helloworld Rust program in --release mode? If yes, have you seen its binary size? Suffice to say, it’s not exactly small. Or at least it wasn’t small until recently. This post details how I found about the issue and my attempt to fix it in Cargo.",
        "crea_time": "2024-08-29T17:51:07.163090975+02:00",
        "crea_user": "api",
        "host": "kobzol.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:07.163090975+02:00",
        "modi_user": "api",
        "path": "/rust/cargo/2024/01/23/making-rust-binaries-smaller-by-default.html",
        "scheme": "https",
        "title": "Making Rust binaries smaller by default | Kobzol’s blog",
        "uri_uuid": "1c380e3aa7afd503692a320c1ea6c65b8c71deaa7c14f7dbe992b7b73756abfe",
        "url": "https://kobzol.github.io/rust/cargo/2024/01/23/making-rust-binaries-smaller-by-default.html"
    },
    {
        "auto_descr": "Tracking issue: #107540\nCurrently, a Cursor points to a single element in the tree, and allows moving to the next or previous element while mutating the tree. However this was found to be confusing...",
        "crea_time": "2024-08-29T17:51:07.422879896+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:07.422879896+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/118208",
        "scheme": "https",
        "title": "Rewrite the BTreeMap cursor API using gaps by Amanieu · Pull Request #118208 · rust-lang/rust · GitHub",
        "uri_uuid": "b889c033abe2d942e9aadb98d1b925dee7915eb4d1b9f923b8a1fc564efe5915",
        "url": "https://github.com/rust-lang/rust/pull/118208"
    },
    {
        "auto_descr": "Closes #76118\nStabilises the remaining array methods\nFCP is yet to be carried out for this\nThere wasn't a clear consensus on the naming, but all the other alternatives had some flaws as discussed i...",
        "crea_time": "2024-08-29T17:51:09.671673827+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:09.671673827+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/103522",
        "scheme": "https",
        "title": "stabilise array methods by Dylan-DPC · Pull Request #103522 · rust-lang/rust · GitHub",
        "uri_uuid": "89acb784fa7fb3af9f83cb0f753dcbd68de5eb3854921f71f13fe10bf0caa167",
        "url": "https://github.com/rust-lang/rust/pull/103522"
    },
    {
        "auto_descr": "I did some benchmark digging into the intersperse and intersperse_with code as part of this discussion, and as a result I optimized them a bit, without relying on the peekable iterator.\nSee also fu...",
        "crea_time": "2024-08-29T17:51:11.217571498+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:11.217571498+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/111379",
        "scheme": "https",
        "title": "Boost iterator intersperse(_with) performance by nyurik · Pull Request #111379 · rust-lang/rust · GitHub",
        "uri_uuid": "812537b5b2f787f6f50e00c1e810470931003cb63d24838acc8a42f0bebeb5d2",
        "url": "https://github.com/rust-lang/rust/pull/111379"
    },
    {
        "auto_descr": "We track all locals and projections on them ourselves within the const propagator and only use the InterpCx to actually do some low level operations or read from constants (via OpTy we get for said...",
        "crea_time": "2024-08-29T17:51:13.348632248+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:13.348632248+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/119627",
        "scheme": "https",
        "title": "Remove all ConstPropNonsense by oli-obk · Pull Request #119627 · rust-lang/rust · GitHub",
        "uri_uuid": "db5d944d38955dafe42ff9e671ee30d53c85e165cc53d5ba7a316b1c157d94e4",
        "url": "https://github.com/rust-lang/rust/pull/119627"
    },
    {
        "auto_descr": "Changes the function signature of the closure given to {slice,Iteraotr}::is_sorted_by to return a bool instead of a PartiolOrd as suggested by the libs-api team here: #53485 (comment).\nThis means t...",
        "crea_time": "2024-08-29T17:51:15.944634865+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:15.944634865+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/118811",
        "scheme": "https",
        "title": "Use `bool` instead of `PartiolOrd` as return value of the comparison closure in `{slice,Iteraotr}::is_sorted_by` by EbbDrop · Pull Request #118811 · rust-lang/rust · GitHub",
        "uri_uuid": "16126ec73b96cbd0ffd51ba190090542817db5260396645499f3fc7b005a2ced",
        "url": "https://github.com/rust-lang/rust/pull/118811"
    },
    {
        "auto_descr": "This caches local DefId-keyed queries using just an IndexVec. This costs ~5% extra max-rss at most but brings significant runtime improvement, up to 13% cycle counts (mean: 4%) on primary benchmark...",
        "crea_time": "2024-08-29T17:51:17.396816696+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:17.396816696+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/119977",
        "scheme": "https",
        "title": "Cache local DefId-keyed queries without hashing by Mark-Simulacrum · Pull Request #119977 · rust-lang/rust · GitHub",
        "uri_uuid": "e0a54df65a03e9c8f7a4696d5f261b17061c0bd48c99a75ef7951c82c4740cb3",
        "url": "https://github.com/rust-lang/rust/pull/119977"
    },
    {
        "auto_descr": "Shuttle is a Rust-native cloud development platform that lets you deploy your app while also taking care of all of your infrastructure.",
        "crea_time": "2024-08-29T17:51:19.137775055+02:00",
        "crea_user": "api",
        "host": "docs.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:19.137775055+02:00",
        "modi_user": "api",
        "path": "/introduction/what-is-shuttle",
        "scheme": "https",
        "title": "What is Shuttle? - Shuttle",
        "uri_uuid": "99535ff4849b7a98cfa8dff74fdb1ecaf9fc914518e4d40e967c2c4e18bc7d42",
        "url": "https://docs.shuttle.rs/introduction/what-is-shuttle"
    },
    {
        "auto_descr": "This article talks about serde, a Rust serialization library and how you can use it in applications.",
        "crea_time": "2024-08-29T17:51:19.549097603+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:19.549097603+02:00",
        "modi_user": "api",
        "path": "/blog/2024/01/23/using-serde-rust",
        "scheme": "https",
        "title": "Using Serde in Rust",
        "uri_uuid": "2fea4628c5297cf69666eb66f7b5f30d3201f5563b8e8a9e625b782284e79d1b",
        "url": "https://www.shuttle.rs/blog/2024/01/23/using-serde-rust"
    },
    {
        "auto_descr": "This article talks about parsing JSON in Rust and compares JSON parsing libraries.",
        "crea_time": "2024-08-29T17:51:19.829210822+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:19.829210822+02:00",
        "modi_user": "api",
        "path": "/blog/2024/01/18/parsing-json-rust",
        "scheme": "https",
        "title": "Parsing JSON in Rust",
        "uri_uuid": "39d56251a72751b3fb02497ad91254a2cfa7ed188c51467fd18cb45e1e32732b",
        "url": "https://www.shuttle.rs/blog/2024/01/18/parsing-json-rust"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:51:20.099022455+02:00",
        "crea_user": "api",
        "host": "rkyv.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:20.099022455+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "rkyv - rkyv",
        "uri_uuid": "d9e6b27c729b941f12f803a9f3938fce6bec2dec56ac05c6256e45d97a82860e",
        "url": "https://rkyv.org/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:51:20.575615296+02:00",
        "crea_user": "api",
        "host": "rkyv.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:20.575615296+02:00",
        "modi_user": "api",
        "path": "/motivation.html",
        "scheme": "https",
        "title": "Motivation - rkyv",
        "uri_uuid": "7a123207c95c410542deaec1ea3e6fe4fc2f6af01f3006f0c9cd0661bb881bd5",
        "url": "https://rkyv.org/motivation.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:21.023335448+02:00",
        "crea_user": "api",
        "host": "www.asciinema.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:21.023335448+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Record and share your terminal sessions, the simple way - www.asciinema.org",
        "uri_uuid": "8ace36c04c340edd4f9bda24e9b8f5213782e4e5f9891266751c59679a32331b",
        "url": "https://www.asciinema.org/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:51:21.292745662+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:21.292745662+02:00",
        "modi_user": "api",
        "path": "/episode/marcin-kulik/",
        "scheme": "https",
        "title": "Asciinema with Marcin Kulik :: Rustacean Station",
        "uri_uuid": "89346c1c05bd5a72a50398389941e97055b05de5a7801a788ab9c3cae8eb22d2",
        "url": "https://rustacean-station.org/episode/marcin-kulik/"
    },
    {
        "auto_descr": "Fyrox 0.33 includes new UI editor, rendering improvements, various editor improvements,  script API improvements, async tasks, book improvements and more.",
        "crea_time": "2024-08-29T17:51:21.416842296+02:00",
        "crea_user": "api",
        "host": "fyrox.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:21.416842296+02:00",
        "modi_user": "api",
        "path": "/blog/post/fyrox-game-engine-0-33/",
        "scheme": "https",
        "title": "Fyrox Game Engine 0.33 | Fyrox - A feature-rich game engine built in Rust",
        "uri_uuid": "4e01a9cbbfe377163db67ed21fe5bc81289be1c416c0f11bd1cc596cb5a8e50d",
        "url": "https://fyrox.rs/blog/post/fyrox-game-engine-0-33/"
    },
    {
        "auto_descr": "Prelude In the start of the year, I started keeping myself a list of technologies I don’t understand and want to learn about. The first candidate I immediately thought about was WebSockets. I kept seeing them popping up in websites and CTFs, but they always looked like gibberish to me, and I just moved on without looking at the WebSocket functionality. This blog post summarizes what I learned about WebSockets in hope that other people like me that used to avoid them will understand them better. The Why A good way to start learning a new technology is to look at its documentation. For web related stuff, my favorite resource is the MDN (Mozilla Developer Network). Quoting this page: “The WebSocket API is an advanced technology that makes it possible to open a two-way interactive communication session between the user’s browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.” There are two bits that jump out here: “Two-way interactive connection” means that the server and the client (In this case the client’s browser) can both send messages at any time Event-driven, along with polling, forms the two most common ways to handle events. You can think of them like waiting for a friend of yours to knock on the door. Polling means that you check the door every few minutes to see if your friend arrived, and event-driven in this case means that your friend rings the bell, and when the bell is rung you open the door. This is the reason WebSockets were created: Think of a chat application. If the app only uses HTTP, every time you wanted to check if you received a new message, you would have to refresh the page. But because WebSockets are event-driven, if the app uses them you’ll immediately see any new messages you receive. The How (Client-Side) So far this is all nice and well, but how do we actually use WebSockets? The answer to this is split into two parts: How WebSocket are used in the client side (JavaScript), and how WebSocket servers work. In the client side part, we’ll see how WebSockets are generally used in JavaScript In the server side part, we’ll write a WebSocket server in Rust to implement what we’ve learned. It won’t implement all of the protocol, but it will implement the core parts. Let’s start with the client side. To use WebSockets in JavaScript, the WebSocket class is used: my_websocket = WebSocket(url, protocols); The constructor for this class receives two arguments: A url to which to connect, and an optional list of protocols. The protocols are sub-protocols to WebSockets, and you might want your server to handle different sub-protocols differently, for example one protocol gamepos for communicating your position in a game, and another protocol chat for the in-game chat. In order to send a WebSocket message, the send method is used: my_websocket.send(\"Hello World!\"); Then, to receive messages from the server, websockets have an onmessage event handler in JavaScript: 1 2 3 my_websocket.onmessage = (event) => { console.log(`Received a message from the server: ${event.data}`) } Finally the connection is closed using my_websocket.close() The How (Server-Side) First of all, WebSocket architectures often use the HTTP server like a reverse proxy (see the following figure), so we want to listen on some TCP port: A reverse proxy architecutre In Rust, listening on a TCP port is done as follows: ```rust let listener = TcpListener::bind(“127.0.0.1:8000”).unwrap(); println!(“Listening on 127.0.0.1:8000”);",
        "crea_time": "2024-08-29T17:51:21.791663631+02:00",
        "crea_user": "api",
        "host": "vaktibabat.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:21.791663631+02:00",
        "modi_user": "api",
        "path": "/posts/websockets/",
        "scheme": "https",
        "title": "WebSockets - The Beginner's Guide | Vaktibabat",
        "uri_uuid": "7ca939b226baa38cee85d1d5478608776fe5dc0bc4dce45a3dedf8bd8f799d6a",
        "url": "https://vaktibabat.github.io/posts/websockets/"
    },
    {
        "auto_descr": "This article talks about how you can write cron jobs as a web service on Shuttle using the apalis cron job framework.",
        "crea_time": "2024-08-29T17:51:22.113220558+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:22.113220558+02:00",
        "modi_user": "api",
        "path": "/blog/2024/01/24/writing-cronjobs-rust",
        "scheme": "https",
        "title": "Writing Cronjobs in Rust",
        "uri_uuid": "32b611da8a12ec29edcb2f308ce79a3054558423567784e5df8dcfcedfe54476",
        "url": "https://www.shuttle.rs/blog/2024/01/24/writing-cronjobs-rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:22.763454196+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:22.763454196+02:00",
        "modi_user": "api",
        "path": "/wiki/Strategy_pattern",
        "scheme": "https",
        "title": "Strategy pattern - Wikipedia",
        "uri_uuid": "b8dcd8af37c0e7e4de02219ee460e8a8671f452901ab6aa8bb9d77073390ad59",
        "url": "https://en.wikipedia.org/wiki/Strategy_pattern"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:23.163203758+02:00",
        "crea_user": "api",
        "host": "www.ralfj.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:23.163203758+02:00",
        "modi_user": "api",
        "path": "/projects/rust-101/part11.html",
        "scheme": "https",
        "title": "Rust-101: part11.rs",
        "uri_uuid": "e3f9338c311782d3e9bc11e6bcd8696fc66ff0f92655df03e015b42617f0007d",
        "url": "https://www.ralfj.de/projects/rust-101/part11.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:51:23.351570792+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:23.351570792+02:00",
        "modi_user": "api",
        "path": "/cargo/reference/manifest.html",
        "scheme": "https",
        "title": "The Manifest Format - The Cargo Book",
        "uri_uuid": "b3ca48709fb80a2b1e04e9ac7ddad927e335731bd532a355fce3b51db32a94a3",
        "url": "https://doc.rust-lang.org/cargo/reference/manifest.html#the-lints-section"
    },
    {
        "auto_descr": "GPX file splitter written in Rust. Contribute to mario-s/gpx_split_rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:51:23.519281771+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:23.519281771+02:00",
        "modi_user": "api",
        "path": "/mario-s/gpx_split_rs/blob/0bb50566dead7a19995a2f3500980dfd9bcb4755/src/split.rs",
        "scheme": "https",
        "title": "gpx_split_rs/src/split.rs at 0bb50566dead7a19995a2f3500980dfd9bcb4755 · mario-s/gpx_split_rs · GitHub",
        "uri_uuid": "cf825509be7b645efde3abf78bf761851cf73922a81aa1f73dbb1f2d27e86918",
        "url": "https://github.com/mario-s/gpx_split_rs/blob/0bb50566dead7a19995a2f3500980dfd9bcb4755/src/split.rs#L126"
    },
    {
        "auto_descr": "A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’.",
        "crea_time": "2024-08-29T17:51:24.215604788+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:24.215604788+02:00",
        "modi_user": "api",
        "path": "/std/sync/struct.Arc.html",
        "scheme": "https",
        "title": "Arc in std::sync - Rust",
        "uri_uuid": "e6aa37c5e2485a7323b81a015eef435df535ef115fb77083edd6f1fdf00a3933",
        "url": "https://doc.rust-lang.org/std/sync/struct.Arc.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:24.891843044+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:24.891843044+02:00",
        "modi_user": "api",
        "path": "/crates/kml",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "374a70a6ea00f05df48497bfc41410ad8d52a1c9de94d49ab0997012907a67b9",
        "url": "https://crates.io/crates/kml"
    },
    {
        "auto_descr": "Pointers (this includes values of reference type) in Rust have two components.\n\nThe pointer's \"address\" says where in memory the pointer is currently pointing.\nThe pointer's \"provenance\" says where...",
        "crea_time": "2024-08-29T17:51:25.109586214+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:25.109586214+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rfcs/pull/3559",
        "scheme": "https",
        "title": "RFC: Rust Has Provenance by RalfJung · Pull Request #3559 · rust-lang/rfcs · GitHub",
        "uri_uuid": "2d81b498fe319a9e40c8788b07787eaf4b8ab28b78f53189314873cc128c02b5",
        "url": "https://github.com/rust-lang/rfcs/pull/3559"
    },
    {
        "auto_descr": "Feature gate: #![feature(strict_provenance)] read the docs get the stable polyfill subtasks This is a tracking issue for the strict_provenance feature. This is a standard library feature that governs the following APIs: pointer::addr poi...",
        "crea_time": "2024-08-29T17:51:27.769257586+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:27.769257586+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/issues/95228",
        "scheme": "https",
        "title": "Tracking Issue for strict_provenance · Issue #95228 · rust-lang/rust · GitHub",
        "uri_uuid": "9efe047ffdec55c0c266e22c82b7e71ce0f99091ba43a0b3e9a8e99f5106747a",
        "url": "https://github.com/rust-lang/rust/issues/95228"
    },
    {
        "auto_descr": "Some time ago, I wrote a blog post about how there’s more to a pointer than meets the eye. One key point I was trying to make is that     just because two pointers point to the same address...",
        "crea_time": "2024-08-29T17:51:29.874575368+02:00",
        "crea_user": "api",
        "host": "www.ralfj.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:29.874575368+02:00",
        "modi_user": "api",
        "path": "/blog/2020/12/14/provenance.html",
        "scheme": "https",
        "title": "Pointers Are Complicated II, or: We need better language specs",
        "uri_uuid": "6dd468e537a5f6ef3ba17ba10ca069e9b7a0bb65b6ad8409e1ae3c88e8718418",
        "url": "https://www.ralfj.de/blog/2020/12/14/provenance.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:30.036414932+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:30.036414932+02:00",
        "modi_user": "api",
        "path": "/RalfJung/rfcs/blob/provenance/text/0000-rust-has-provenance.md",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "6b12c70b9524abb8c62ca1a5bd18622df3b527d03a1fa7d3bb85446c4786ab04",
        "url": "https://github.com/RalfJung/rfcs/blob/provenance/text/0000-rust-has-provenance.md"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:51:30.380309623+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:30.380309623+02:00",
        "modi_user": "api",
        "path": "/unsafe-code-guidelines/glossary.html",
        "scheme": "https",
        "title": "Glossary - Unsafe Code Guidelines Reference",
        "uri_uuid": "db35e55beae9bdc9ee7f8820646b728b6d0fe7241a8262a56e601793b9d8df0a",
        "url": "https://rust-lang.github.io/unsafe-code-guidelines/glossary.html#pointer-provenance"
    },
    {
        "auto_descr": "A recently disclosed flaw in the GNU C library can give hackers full root access to Linux machines.",
        "crea_time": "2024-08-29T17:51:30.634088927+02:00",
        "crea_user": "api",
        "host": "thehackernews.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:30.634088927+02:00",
        "modi_user": "api",
        "path": "/2024/01/new-glibc-flaw-grants-attackers-root.html",
        "scheme": "https",
        "title": "New Glibc Flaw Grants Attackers Root Access on Major Linux Distros",
        "uri_uuid": "727123b3033b80d4ae521a0a54611502e6556acf9c25a73044c00c05cbd0da9c",
        "url": "https://thehackernews.com/2024/01/new-glibc-flaw-grants-attackers-root.html?m=1"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:31.318910963+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:31.318910963+02:00",
        "modi_user": "api",
        "path": "/blog/2024/01/17/this-week-in-rust-530/",
        "scheme": "https",
        "title": "This Week in Rust 530  · This Week in Rust\n",
        "uri_uuid": "54ec5c3d31d9696ba659d2a7a01d94fe0877c09d3c98e204aa0de686a91d1136",
        "url": "https://this-week-in-rust.org/blog/2024/01/17/this-week-in-rust-530/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:31.593761919+02:00",
        "crea_user": "api",
        "host": "secure.meetupstatic.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:31.593761919+02:00",
        "modi_user": "api",
        "path": "/photos/member/5/a/f/9/highres_318083289.jpeg",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "46bfe30f82605a3a1eaf3ca72115859cea165f632bebe0b2dc0c4238d8988274",
        "url": "https://secure.meetupstatic.com/photos/member/5/a/f/9/highres_318083289.jpeg"
    },
    {
        "auto_descr": "Closes #96469\n@rustbot +T-libs-api",
        "crea_time": "2024-08-29T17:51:31.799056017+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:31.799056017+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/119804",
        "scheme": "https",
        "title": "Stabilize mutex_unpoison feature by tmccombs · Pull Request #119804 · rust-lang/rust · GitHub",
        "uri_uuid": "f761d7333b8b6f1e12d63388b11a436423ffdb13e5b153188c497849b14c40b8",
        "url": "https://github.com/rust-lang/rust/pull/119804"
    },
    {
        "auto_descr": "(This is a follow up PR on #113654)\nThis PR changes the implementation for [T] slice comparison when T: !BytewiseEq. The previous implementation using zip was not optimized properly by the compiler...",
        "crea_time": "2024-08-29T17:51:32.884628272+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:32.884628272+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/116846",
        "scheme": "https",
        "title": "A more efficient slice comparison implementation for T: !BytewiseEq by krtab · Pull Request #116846 · rust-lang/rust · GitHub",
        "uri_uuid": "710c104660dc08c98280184fc7db8ae16013cb6242f92bcf328a0450cf76634f",
        "url": "https://github.com/rust-lang/rust/pull/116846"
    },
    {
        "auto_descr": "You're invited to talk on Matrix",
        "crea_time": "2024-08-29T17:51:34.914723283+02:00",
        "crea_user": "api",
        "host": "matrix.to",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:34.914723283+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "You're invited to talk on Matrix",
        "uri_uuid": "efd415832b4f111167f09c99e214c5c6377da835539ba8fd08f339bc64f3c87e",
        "url": "https://matrix.to/#/!xycQxSjSAvEezkyztA:chat.berline.rs"
    },
    {
        "auto_descr": "New changes Rust 1.75.0! Visit https://ultimaterustcourses.com for Ultimate Rust Crash Course and other Rust courses!Links:Rust 1.75.0 Blog Post - https://bl...",
        "crea_time": "2024-08-29T17:51:35.704787374+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:35.704787374+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust 1.75.0: 54 highlights in 20 minutes - YouTube",
        "uri_uuid": "828dee78359c66793ea3bbbb6048224ccf07dc93aad87a21925fad34e4e78de0",
        "url": "https://www.youtube.com/watch?v=Z8xig7wEV68"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:51:36.602014872+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:36.602014872+02:00",
        "modi_user": "api",
        "path": "/2023/12/21/async-fn-rpit-in-traits.html",
        "scheme": "https",
        "title": "Announcing `async fn` and return-position `impl Trait` in traits | Rust Blog",
        "uri_uuid": "f9517504a43fa390117b8fe928a5f4b3bcaf1b5141a69de2b552e5c4919912ab",
        "url": "https://blog.rust-lang.org/2023/12/21/async-fn-rpit-in-traits.html#where-the-gaps-lie"
    },
    {
        "auto_descr": "github crates-io docs-rs",
        "crea_time": "2024-08-29T17:51:36.835900186+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:36.835900186+02:00",
        "modi_user": "api",
        "path": "/async-trait/latest/async_trait/",
        "scheme": "https",
        "title": "async_trait - Rust",
        "uri_uuid": "3cc258576256becc38657746cdc47d5c0f95f717018cdec6739acd6e3cc28dfd",
        "url": "https://docs.rs/async-trait/latest/async_trait/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:36.991374752+02:00",
        "crea_user": "api",
        "host": "uutils.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:36.991374752+02:00",
        "modi_user": "api",
        "path": "/coreutils/book/index.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "051de75241dc107ef408017e5c884eccddfa1567178cde9bba98e2873b957898",
        "url": "https://uutils.github.io/coreutils/book/index.html"
    },
    {
        "auto_descr": "Cross-platform Rust rewrite of the GNU coreutils. Contribute to uutils/coreutils development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:51:37.222153180+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:37.222153180+02:00",
        "modi_user": "api",
        "path": "/uutils/coreutils/tree/main/src/uu",
        "scheme": "https",
        "title": "coreutils/src/uu at main · uutils/coreutils · GitHub",
        "uri_uuid": "83055a8994b5601bb6fcd08b3eae91fc28bc18f73882a8a974ed36172ce965e3",
        "url": "https://github.com/uutils/coreutils/tree/main/src/uu"
    },
    {
        "auto_descr": "#fishshell rewrite-it-in #rust progress, 2024-01-15\n\n87029 rust lines added\n76776 / 76776 C++ lines removed\n ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ 100%\n\n#riir #rustlang\n\n--\n\nSo, we're done? Well, yes and no.",
        "crea_time": "2024-08-29T17:51:37.801482857+02:00",
        "crea_user": "api",
        "host": "aus.social",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:37.801482857+02:00",
        "modi_user": "api",
        "path": "/@zanchey/111760402786767224",
        "scheme": "https",
        "title": "David Adam: &quot;#fishshell rewrite-it-in #rust progress, 2024-01-…&quot; - Aus.Social",
        "uri_uuid": "5102175d826c7cc9308ae289955b1cfd5faf127486567d88670998bfd940740f",
        "url": "https://aus.social/@zanchey/111760402786767224"
    },
    {
        "auto_descr": "Systemnahe Programmierung erfordert eine effiziente und sichere Sprache. Der Erfahrungsbericht beschreibt den Wechsel eines Kernelprojekts von C nach Rust.",
        "crea_time": "2024-08-29T17:51:39.210334954+02:00",
        "crea_user": "api",
        "host": "www.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:39.210334954+02:00",
        "modi_user": "api",
        "path": "/hintergrund/Mit-dem-Kernel-von-C-nach-Rust-ein-Projektbericht-zu-Effizienz-und-Sicherheit-9593219.html",
        "scheme": "https",
        "title": "\n    Mit dem Kernel von C nach Rust – ein Projektbericht zu Effizienz und Sicherheit | heise online\n",
        "uri_uuid": "1ef2acc96f24e5f2871d610fbf5b7a28580e6ead11edf561891fa9ec078b01b1",
        "url": "https://www.heise.de/hintergrund/Mit-dem-Kernel-von-C-nach-Rust-ein-Projektbericht-zu-Effizienz-und-Sicherheit-9593219.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:39.536230565+02:00",
        "crea_user": "api",
        "host": "without.boats",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:39.536230565+02:00",
        "modi_user": "api",
        "path": "/blog/the-registers-of-rust/",
        "scheme": "https",
        "title": "The registers of Rust",
        "uri_uuid": "e88d0fed01f39e9129d62e26b20479ecf8b152599509233856540c62d031c43d",
        "url": "https://without.boats/blog/the-registers-of-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:39.793770538+02:00",
        "crea_user": "api",
        "host": "www.abubalay.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:39.793770538+02:00",
        "modi_user": "api",
        "path": "/blog/2024/01/14/rust-effect-lowering",
        "scheme": "https",
        "title": "A universal lowering strategy for control effects in Rust - Abubalay",
        "uri_uuid": "298882ee77bab3dacc465c6d1fc2406ab33fbee2cb726862da2dbd9e705eb623",
        "url": "https://www.abubalay.com/blog/2024/01/14/rust-effect-lowering"
    },
    {
        "auto_descr": "Solvitas perambulum",
        "crea_time": "2024-08-29T17:51:40.250779009+02:00",
        "crea_user": "api",
        "host": "darkcoding.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:40.250779009+02:00",
        "modi_user": "api",
        "path": "/software/rust-systemd-memory-remains/",
        "scheme": "https",
        "title": "The memory remains: Permanent memory with systemd and a Rust allocator · Graham King",
        "uri_uuid": "4338442bce737eb062b3b5026923d6d99cd356687f9002b3a41d85bc26fc5be9",
        "url": "https://darkcoding.net/software/rust-systemd-memory-remains/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:41.209269650+02:00",
        "crea_user": "api",
        "host": "jyn.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:41.209269650+02:00",
        "modi_user": "api",
        "path": "/2024/01/16/the-rust-project-has-a-burnout-problem.html",
        "scheme": "https",
        "title": "Redirect",
        "uri_uuid": "3635bd4c3befc48035038cb7671043207ac9860ce257c9ff7ea85af585b76153",
        "url": "https://jyn.dev/2024/01/16/the-rust-project-has-a-burnout-problem.html"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:51:41.522403500+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:41.522403500+02:00",
        "modi_user": "api",
        "path": "/episode/josh-aas/",
        "scheme": "https",
        "title": "Prossimo with Josh Aas :: Rustacean Station",
        "uri_uuid": "ce4283353c181198866f28e8004cbc5ac7ce5fb30600eb0c1b7184a9278bc224",
        "url": "https://rustacean-station.org/episode/josh-aas/"
    },
    {
        "auto_descr": "Hynek Schlawack: Pythonista, Gopher, blogger, and speaker from Berlin / Germany.",
        "crea_time": "2024-08-29T17:51:41.679068747+02:00",
        "crea_user": "api",
        "host": "hynek.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:41.679068747+02:00",
        "modi_user": "api",
        "path": "/talks/python-foss/",
        "scheme": "https",
        "title": "Maintaining a Python Project When It’s Not Your Job",
        "uri_uuid": "a53c812819b6b6ff678a4379562948ee93f6141a54050dadb6f969d5e97559fd",
        "url": "https://hynek.me/talks/python-foss/"
    },
    {
        "auto_descr": "How I'm learning Rust while coming from a Python background, and how you can too",
        "crea_time": "2024-08-29T17:51:41.928626649+02:00",
        "crea_user": "api",
        "host": "thedataquarry.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:41.928626649+02:00",
        "modi_user": "api",
        "path": "/posts/path-to-becoming-a-rustacean/",
        "scheme": "https",
        "title": "My path to becoming a Rustacean | The Data Quarry",
        "uri_uuid": "bae417191e4dcd7fca8aa24b8580ff9e9c06d98c41dbb27e011fbfce59f1ae9c",
        "url": "https://thedataquarry.com/posts/path-to-becoming-a-rustacean/"
    },
    {
        "auto_descr": "Analysis of Arc<str> vs String cloning performance in contentended scenarios.",
        "crea_time": "2024-08-29T17:51:42.201984704+02:00",
        "crea_user": "api",
        "host": "blocklisted.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:42.201984704+02:00",
        "modi_user": "api",
        "path": "/blog/arc_str_vs_string_is_it_really_faster/",
        "scheme": "https",
        "title": "Arc<str> vs String, is Arc<str> really faster?",
        "uri_uuid": "a92c9b7ec48d6898b93ccf32e02994f4fb8a9bbb59cb5a01931c9551c2deac35",
        "url": "https://blocklisted.github.io/blog/arc_str_vs_string_is_it_really_faster/"
    },
    {
        "auto_descr": "Learning the RUST programming language can be a turbulent experience.Welcome to rust, enjoy your stay!My discord group:https://discord.gg/9P8QSYfWant to supp...",
        "crea_time": "2024-08-29T17:51:42.482308889+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:42.482308889+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "your first RUST programming experience - YouTube",
        "uri_uuid": "d615cc744bbed20cc79d98920f174c173a8fde7d96a5d9562af73aa6026e381e",
        "url": "https://www.youtube.com/watch?v=H-YSveaHTsA"
    },
    {
        "auto_descr": "Rust lets you do efficient reference-counted strings and dynamic arrays using Arc basically just as easily as their owning (and deep-cloning) equivalents, St...",
        "crea_time": "2024-08-29T17:51:43.268403690+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:43.268403690+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Use Arc Instead of Vec - YouTube",
        "uri_uuid": "1dd0744efff2cb33f42d04b4ec4ad44e684dc112d3d59cd2a71c99d416bc23d6",
        "url": "https://www.youtube.com/watch?v=A4cKi7PTJSs"
    },
    {
        "auto_descr": "Teile deine Videos mit Freunden, Verwandten oder der ganzen Welt",
        "crea_time": "2024-08-29T17:51:43.922070397+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:43.922070397+02:00",
        "modi_user": "api",
        "path": "/playlist",
        "scheme": "https",
        "title": "Rust - YouTube",
        "uri_uuid": "c8b5188489250523b46f399d15ec96fa9db213e74dd13d96190b6198e6c55353",
        "url": "https://www.youtube.com/playlist?list=PLhjB8nmMLotIG0ik1RXjl0lfZcg9oxhMg"
    },
    {
        "auto_descr": "A walkthrough of the assembly code idioms the Rust compiler uses to implement the language’s core features (as they appear in Klabnik’s a...",
        "crea_time": "2024-08-29T17:51:44.219325037+02:00",
        "crea_user": "api",
        "host": "media.ccc.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:44.219325037+02:00",
        "modi_user": "api",
        "path": "/v/37c3-11684-rust_binary_analysis_featur",
        "scheme": "https",
        "title": "\nRust Binary Analysis, Feature by Feature\n\n- media.ccc.de\n",
        "uri_uuid": "3e0d790303b3b90fa8621374bd2bb34bf4698aae9770db12c88fbcfe81e9b576",
        "url": "https://media.ccc.de/v/37c3-11684-rust_binary_analysis_featur"
    },
    {
        "auto_descr": "A walkthrough of the assembly code idioms the Rust compiler uses to implement the language’s core features (as they appear in Klabnik’s a...",
        "crea_time": "2024-08-29T17:51:44.485634330+02:00",
        "crea_user": "api",
        "host": "media.ccc.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:44.485634330+02:00",
        "modi_user": "api",
        "path": "/v/37c3-11684-rust_binary_analysis_feature_by_feature",
        "scheme": "https",
        "title": "\nRust Binary Analysis, Feature by Feature\n\n- media.ccc.de\n",
        "uri_uuid": "2aa0b6b51b7a1b2bb0c1b47745e8272c96eef76d52b0a81691fd0db0d4672488",
        "url": "https://media.ccc.de/v/37c3-11684-rust_binary_analysis_feature_by_feature"
    },
    {
        "auto_descr": "Over the weekend, I was working on a personal Rust project when I ran into an excessive memory usage problem. After an evening of trial and error, I found a workaround to fix the memory usage, but I still didn’t understand how the issue was even possible, so I then spent another evening digging through the source code of the Rust standard library to understand the root cause.",
        "crea_time": "2024-08-29T17:51:44.699856195+02:00",
        "crea_user": "api",
        "host": "blog.polybdenum.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:44.699856195+02:00",
        "modi_user": "api",
        "path": "/2024/01/17/identifying-the-collect-vec-memory-leak-footgun.html",
        "scheme": "https",
        "title": "Identifying Rust’s collect::<Vec>() memory leak footgun | Considerations on Codecrafting",
        "uri_uuid": "d4f713627cc18613b3cf4a051f774a6fcabf066a2fba406ae35eea1a93325cfa",
        "url": "https://blog.polybdenum.com/2024/01/17/identifying-the-collect-vec-memory-leak-footgun.html"
    },
    {
        "auto_descr": "🔥 Time Travel Visual Debugger for Rust",
        "crea_time": "2024-08-29T17:51:45.235220380+02:00",
        "crea_user": "api",
        "host": "firedbg.sea-ql.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:45.235220380+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "FireDBG - 🔥 Time Travel Visual Debugger for Rust",
        "uri_uuid": "4f2c82db65bb80467ddf52f350a2eb526da4ff8adb89d1087e90f285fccc616a",
        "url": "https://firedbg.sea-ql.org/"
    },
    {
        "auto_descr": "🚀 **Linux Torvalds Reveals Insights on Rust Programming Language!**In this exclusive interview, dive deep into the world of open-source programming as Linux...",
        "crea_time": "2024-08-29T17:51:45.493759490+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:45.493759490+02:00",
        "modi_user": "api",
        "path": "/YyRVOGxRKLg",
        "scheme": "https",
        "title": "Torvalds Speaks: Rust's Impact on the Linux Kernel - YouTube",
        "uri_uuid": "e9e81966b9ae3ade1b43e7b5cfe32ef2e58c04a3d2feb5c87113ebf49082b7cf",
        "url": "https://youtu.be/YyRVOGxRKLg"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:46.434563187+02:00",
        "crea_user": "api",
        "host": "capnproto.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:46.434563187+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Cap'n Proto: Introduction",
        "uri_uuid": "162331e8a3ee48548a0039dbef0c32388378b19542f209e3a22e253a41523387",
        "url": "https://capnproto.org/"
    },
    {
        "auto_descr": "This article talks about how you can deploy Loco.rs to Shuttle, as well as an in-depth review of what the framework offers.",
        "crea_time": "2024-08-29T17:51:46.593881482+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:46.593881482+02:00",
        "modi_user": "api",
        "path": "/blog/2023/12/20/loco-rust-rails",
        "scheme": "https",
        "title": "Introducing Loco: The Rails of Rust",
        "uri_uuid": "dc5678c7ed545c7411c86c01a88960083c0f79b701c942df5fc01b1836420f11",
        "url": "https://www.shuttle.rs/blog/2023/12/20/loco-rust-rails"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:47.098207705+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:47.098207705+02:00",
        "modi_user": "api",
        "path": "/crates/poem",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f17e489320ad0d32b2b234bd23027b0e475778e43d40d754dafe5e3364aa266f",
        "url": "https://crates.io/crates/poem"
    },
    {
        "auto_descr": "This article goes into a deep dive on getting started with Loco in Rust and how you can utilise its capabilities to speed up your productivity.",
        "crea_time": "2024-08-29T17:51:47.356763273+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:47.356763273+02:00",
        "modi_user": "api",
        "path": "/blog/2023/12/28/using-loco-rust-rails",
        "scheme": "https",
        "title": "Getting Started with Loco in Rust: Part 1",
        "uri_uuid": "091e6fe7bca781f455da614ebd538a381e9cca2a21b59fa2fbf33399993ff4c1",
        "url": "https://www.shuttle.rs/blog/2023/12/28/using-loco-rust-rails"
    },
    {
        "auto_descr": "This article talks about how you can use Actix Web to write a web application, covering routing, middleware, static files and databases.",
        "crea_time": "2024-08-29T17:51:47.918544447+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:47.918544447+02:00",
        "modi_user": "api",
        "path": "/blog/2023/12/15/using-actix-rust",
        "scheme": "https",
        "title": "Getting Started with Actix Web in Rust",
        "uri_uuid": "18b97fbf0a96eb8bc0d56b66c442e8b7081b27a0ac67f370eda05b6c0f4f0088",
        "url": "https://www.shuttle.rs/blog/2023/12/15/using-actix-rust"
    },
    {
        "auto_descr": "This article talks about how you can use Rocket to write a web application, covering routing, middleware, static files and databases.",
        "crea_time": "2024-08-29T17:51:48.334090995+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:48.334090995+02:00",
        "modi_user": "api",
        "path": "/blog/2023/12/13/using-rocket-rust",
        "scheme": "https",
        "title": "Getting Started with Rocket in Rust",
        "uri_uuid": "6c8da73841ac4b8b6f19707e0d27c197ba189b583457b874274a8e0fa284cf97",
        "url": "https://www.shuttle.rs/blog/2023/12/13/using-rocket-rust"
    },
    {
        "auto_descr": "This guide is a deep-dive on Axum, a Rust web backend framework. We look at using Axum to write a competent web service with middleware, routing, static files and more.",
        "crea_time": "2024-08-29T17:51:48.864541656+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:48.864541656+02:00",
        "modi_user": "api",
        "path": "/blog/2023/12/06/using-axum-rust",
        "scheme": "https",
        "title": "Getting Started with Axum - Rust's Most Popular Web Framework",
        "uri_uuid": "3d2bd86634609804ebd31529b0b445c1485f12c5f2161ff705fc61a1ac2294a6",
        "url": "https://www.shuttle.rs/blog/2023/12/06/using-axum-rust"
    },
    {
        "auto_descr": "Super fast secure applications in a language you love.",
        "crea_time": "2024-08-29T17:51:49.684491480+02:00",
        "crea_user": "api",
        "host": "rust-on-nails.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:49.684491480+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "A guide to full stack web development in Rust",
        "uri_uuid": "cb71182c4cb3c05714fe84123709e44b895c632082bf641ffbb049084a8173bf",
        "url": "https://rust-on-nails.com/"
    },
    {
        "auto_descr": "Attached: 1 image\n\nPOV: small rust projects to start with\n\n#rustlang #rust #funny",
        "crea_time": "2024-08-29T17:51:50.209892112+02:00",
        "crea_user": "api",
        "host": "mstdn.social",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:50.209892112+02:00",
        "modi_user": "api",
        "path": "/@skwee357/111709321200412094",
        "scheme": "https",
        "title": "Dmitry Kudryavtsev: &quot;POV: small rust projects to start with\n\n#rustlang…&quot; - Mastodon 🐘",
        "uri_uuid": "d91dc770a68f08db1cb48f1e6a199b6aa34a560cf1c02146334109570df5aa30",
        "url": "https://mstdn.social/@skwee357/111709321200412094"
    },
    {
        "auto_descr": "Integrating OpenTelemetry with Jaeger (tracing), ELK (logging), and Prometheus (monitoring) for a comprehensive Observability solution for your applications",
        "crea_time": "2024-08-29T17:51:50.350595555+02:00",
        "crea_user": "api",
        "host": "medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:50.350595555+02:00",
        "modi_user": "api",
        "path": "/cloud-native-daily/harnessing-opentelemetry-with-jaeger-elk-and-prometheus-e06360de831a",
        "scheme": "https",
        "title": "Harnessing OpenTelemetry with Jaeger, ELK, and Prometheus | Cloud Native Daily",
        "uri_uuid": "42a9df0742af3a9662ab961177dc056a4bfa30273194704a5bd167cc465e9b7b",
        "url": "https://medium.com/cloud-native-daily/harnessing-opentelemetry-with-jaeger-elk-and-prometheus-e06360de831a"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:50.619126062+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:50.619126062+02:00",
        "modi_user": "api",
        "path": "/crates/pdf_forms",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "823a8c80d62a5120ce208f14ab0195c16525f1d7ef49999936eb3fda1991f925",
        "url": "https://crates.io/crates/pdf_forms"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:51:50.855274982+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:50.855274982+02:00",
        "modi_user": "api",
        "path": "/from-perl-to-rust/",
        "scheme": "https",
        "title": "Introduction - From Perl to Rust",
        "uri_uuid": "9b2a4e24f28c1bd00a3035694c24a393c3c20c6391b360be94de2c0e3c660790",
        "url": "https://oylenshpeegul.gitlab.io/from-perl-to-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:51.511763975+02:00",
        "crea_user": "api",
        "host": "dpunkt.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:51.511763975+02:00",
        "modi_user": "api",
        "path": "/produkt/rust/",
        "scheme": "https",
        "title": "Rust • Buch oder E-Book kaufen • dpunkt.verlag",
        "uri_uuid": "dde5775189d637a8d5bac7f65117d2d635b97379523901782dbb88be76560af4",
        "url": "https://dpunkt.de/produkt/rust/"
    },
    {
        "auto_descr": "A definitive book about the first half-century of interactive fiction.",
        "crea_time": "2024-08-29T17:51:54.331475058+02:00",
        "crea_user": "api",
        "host": "if50.textories.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:54.331475058+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "50 Years of Text Games",
        "uri_uuid": "712a927f6e2c8794495f61a5b35171821eb062cf9b8ad8d6385246f642538f45",
        "url": "https://if50.textories.com/"
    },
    {
        "auto_descr": "In the two years since I've posted  I want off Mr Golang's Wild\nRide , it's made the rounds time and\ntime again, on Reddit, on Lobste.rs, on HackerNews, and elsew...",
        "crea_time": "2024-08-29T17:51:55.643094620+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:55.643094620+02:00",
        "modi_user": "api",
        "path": "/articles/lies-we-tell-ourselves-to-keep-using-golang",
        "scheme": "https",
        "title": "\n        \n        Lies we tell ourselves to keep using Golang\n        \n    ",
        "uri_uuid": "b05f23729b627dcad4ae7a5292a3157ed17310076339852b13ad483abe5604b9",
        "url": "https://fasterthanli.me/articles/lies-we-tell-ourselves-to-keep-using-golang"
    },
    {
        "auto_descr": "amos loves to tinker",
        "crea_time": "2024-08-29T17:51:55.831867126+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:55.831867126+02:00",
        "modi_user": "api",
        "path": "/tags/golang",
        "scheme": "https",
        "title": "\n        \n        fasterthanli.me\n        \n    ",
        "uri_uuid": "e736f1d2f31334caf0c5004079fa15bf33a345e1223350819ec0d57ec6dde55f",
        "url": "https://fasterthanli.me/tags/golang"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:51:56.010111390+02:00",
        "crea_user": "api",
        "host": "docs.rust-embedded.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:56.010111390+02:00",
        "modi_user": "api",
        "path": "/book/",
        "scheme": "https",
        "title": "Introduction - The Embedded Rust Book",
        "uri_uuid": "11b0bd691ea9e1153c2733f0121fc9f1e824e32300bfefe99a781c98e2c70aa4",
        "url": "https://docs.rust-embedded.org/book/"
    },
    {
        "auto_descr": "A Go compiler for small places",
        "crea_time": "2024-08-29T17:51:56.274072100+02:00",
        "crea_user": "api",
        "host": "tinygo.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:56.274072100+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "TinyGo",
        "uri_uuid": "b6a039b49f758faa5ea88eb3f3aa801592041f522bd2a8d59bc69372937afe93",
        "url": "https://tinygo.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:56.488859018+02:00",
        "crea_user": "api",
        "host": "iodapson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:56.488859018+02:00",
        "modi_user": "api",
        "path": "/akamai-deploy/chapter_1.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ea92c6d118c0932c9a166d3a185e40fea1474c4bcef8a79f2d4be6bf27efeba6",
        "url": "https://iodapson.github.io/akamai-deploy/chapter_1.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:51:56.745565478+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:56.745565478+02:00",
        "modi_user": "api",
        "path": "/2023/12/18/survey-launch.html",
        "scheme": "https",
        "title": "Launching the 2023 State of Rust Survey | Rust Blog",
        "uri_uuid": "6ea67c7690656345820b8ce23863a0e57e05d6bbaf50b479ddd354a3c75a12e0",
        "url": "https://blog.rust-lang.org/2023/12/18/survey-launch.html"
    },
    {
        "auto_descr": "Pretty Good Messenger. Delta Chat has 86 repositories available. Follow their code on GitHub.",
        "crea_time": "2024-08-29T17:51:56.987005065+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:56.987005065+02:00",
        "modi_user": "api",
        "path": "/deltachat",
        "scheme": "https",
        "title": "Delta Chat · GitHub",
        "uri_uuid": "fefca08391aab80f6e94c3d723df0810dd7dd9bf8ff28ddc3a051d1e3e68db5f",
        "url": "https://github.com/deltachat"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:51:57.895032772+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:57.895032772+02:00",
        "modi_user": "api",
        "path": "/2024/schedule/",
        "scheme": "https",
        "title": "FOSDEM 2024 - Schedule",
        "uri_uuid": "e5324b91f30cc3adf26abceecd26bd9d0961f2423325e701dc3edc01d003c607",
        "url": "https://fosdem.org/2024/schedule/"
    },
    {
        "auto_descr": "Turbofish is the name of the syntax that allows us to define a type in the function call.",
        "crea_time": "2024-08-29T17:51:58.120219841+02:00",
        "crea_user": "api",
        "host": "rust.code-maven.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:58.120219841+02:00",
        "modi_user": "api",
        "path": "/turbofish",
        "scheme": "https",
        "title": "Turbofish ::<> 🐠",
        "uri_uuid": "4250b12d3997ec34440ef85f12d23381500a8d82f6557fc8f261abb3f193e066",
        "url": "https://rust.code-maven.com/turbofish"
    },
    {
        "auto_descr": "The lifetime of temporaries in Rust is a complicated but often ignored topic. In simple cases, Rust keeps temporaries around for exactly long enough, such that we don&rsquo;t have to think about them. However, there are plenty of cases were we might not get exactly what we want, right away.\nIn this post, we (re)discover the rules for the lifetime of temporaries, go over a few use cases for temporary lifetime extension, and explore a new language idea, super let, to give us more control.\n",
        "crea_time": "2024-08-29T17:51:58.333740407+02:00",
        "crea_user": "api",
        "host": "blog.m-ou.se",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:58.333740407+02:00",
        "modi_user": "api",
        "path": "/super-let/",
        "scheme": "https",
        "title": "Rust Temporary Lifetimes and \"Super Let\" - Mara's Blog",
        "uri_uuid": "c086253767385c3aa051f45ec08de7371faa1aaeaacddeeb0445284a3796788a",
        "url": "https://blog.m-ou.se/super-let/"
    },
    {
        "auto_descr": "The fmt::Arguments type is one of my favorite types in the Rust standard library. It&rsquo;s not particularly amazing, but it is a great building block that is indirectly used in nearly every Rust program. This type, together with the format_args!() macro, is the power behind print!(), format!(), log::info!() and many more text formatting macros, both from the standard library and community crates.\nIn this blog post, we learn how it works, how it is implemented today, and how that might change in the future.\n",
        "crea_time": "2024-08-29T17:51:58.659946851+02:00",
        "crea_user": "api",
        "host": "blog.m-ou.se",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:58.659946851+02:00",
        "modi_user": "api",
        "path": "/format-args/",
        "scheme": "https",
        "title": "Behind the Scenes of Rust String Formatting: format_args!() - Mara's Blog",
        "uri_uuid": "a22f57dcd6b5481ea8b39afac6181767047d506a1585eeacb598297288651b40",
        "url": "https://blog.m-ou.se/format-args/"
    },
    {
        "auto_descr": "Loco is a Rails-like web framework in the making. Let's try it.",
        "crea_time": "2024-08-29T17:51:58.971966993+02:00",
        "crea_user": "api",
        "host": "rust.code-maven.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:58.971966993+02:00",
        "modi_user": "api",
        "path": "/getting-started-with-loco",
        "scheme": "https",
        "title": "Getting started with Loco, the one-person web framework for Rust",
        "uri_uuid": "26ed21fdaa8724106bf0673b159713d693a5384f439ca58983b91027984b9263",
        "url": "https://rust.code-maven.com/getting-started-with-loco"
    },
    {
        "auto_descr": "In this next1 post of my series explaining how Rust is better off without Object-Oriented Programming, I discuss the last and (in my opinion) the weirdest of OOP&rsquo;s 3 traditional pillars.\nIt&rsquo;s not encapsulation, a great idea which exists in some form in every modern programming language, just OOP does it oddly. It&rsquo;s not polymorphism, also a great idea that OOP puts too many restrictions on, and that Rust borrows a better design for from Haskell (with syntax from C++).",
        "crea_time": "2024-08-29T17:51:59.557392139+02:00",
        "crea_user": "api",
        "host": "www.thecodedmessage.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:51:59.557392139+02:00",
        "modi_user": "api",
        "path": "/posts/oop-3-inheritance/",
        "scheme": "https",
        "title": "Rust Is Beyond Object-Oriented, Part 3: Inheritance :: The Coded Message",
        "uri_uuid": "e049d1d2356cb27ae99caa7cb5ad14084d6406323540f7a9e931a461831f1294",
        "url": "https://www.thecodedmessage.com/posts/oop-3-inheritance/"
    },
    {
        "auto_descr": "Learn about how you can write a CLI tool with Clap by following this article. We also cover libraries that go well with Clap and example repositories.",
        "crea_time": "2024-08-29T17:52:00.195642541+02:00",
        "crea_user": "api",
        "host": "www.shuttle.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:00.195642541+02:00",
        "modi_user": "api",
        "path": "/blog/2023/12/08/clap-rust",
        "scheme": "https",
        "title": "Writing a CLI Tool in Rust with Clap",
        "uri_uuid": "95fcc2616abd2c95a3a4870fa454e41a5a086214a45a0c5b7e2833dcb632dd74",
        "url": "https://www.shuttle.rs/blog/2023/12/08/clap-rust"
    },
    {
        "auto_descr": "GitHub Repo updated to Axum 0.7. See commit: https://github.com/jeremychone-channel/rust-axum-course/commit/52ded5e01efce0fc237280d9a5e6b8d7c1436d9cRust Prog...",
        "crea_time": "2024-08-29T17:52:00.446369126+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:00.446369126+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust Axum Full Course - Web Development (GitHub repo updated to Axum 0.7) - YouTube",
        "uri_uuid": "c2a04ce383fb4997907deaec42843a03071b0ad29ce9a1ec131e76b860ad19bf",
        "url": "https://www.youtube.com/watch?v=XZtlD_m59sM"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:01.429657134+02:00",
        "crea_user": "api",
        "host": "lwn.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:01.429657134+02:00",
        "modi_user": "api",
        "path": "/SubscriberLink/954787/41470c731eda02a4/",
        "scheme": "https",
        "title": "Progress toward a GCC-based Rust compiler [LWN.net]",
        "uri_uuid": "a912b057bbf89060176f07c45c7a56a937ce25c961936d94d65960326375ef13",
        "url": "https://lwn.net/SubscriberLink/954787/41470c731eda02a4/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:02.214018543+02:00",
        "crea_user": "api",
        "host": "cranelift.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:02.214018543+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Cranelift",
        "uri_uuid": "07e82046b154e73cfb676e0d5790be1aa2640129d15af9562d56a8383e29be0b",
        "url": "https://cranelift.dev/"
    },
    {
        "auto_descr": "This adds a method for taking a substring of an OsStr, which in combination with OsStr::as_encoded_bytes() makes it possible to implement most string operations in safe code.\nAPI:\nimpl OsStr {\n    ...",
        "crea_time": "2024-08-29T17:52:02.504503278+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:02.504503278+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/118484",
        "scheme": "https",
        "title": "Add substring API for `OsStr` by blyxxyz · Pull Request #118484 · rust-lang/rust · GitHub",
        "uri_uuid": "cb4fe4064ebe2232122953038b35fe50d4e26d3cbb3bcc4388a1fa368a972c30",
        "url": "https://github.com/rust-lang/rust/pull/118484"
    },
    {
        "auto_descr": "OLD: \n    str::iter::chars_advance_by_0001  0.00ns/iter  +/- 0.00ns\n    str::iter::chars_advance_by_0010 13.00ns/iter  +/- 1.00ns\n    str::iter::chars_advance_by_1000  1.20µs/iter +/- 15.00ns\n\nNEW:...",
        "crea_time": "2024-08-29T17:52:03.797519422+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:03.797519422+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/115331",
        "scheme": "https",
        "title": "optimize str::iter::Chars::advance_by by the8472 · Pull Request #115331 · rust-lang/rust · GitHub",
        "uri_uuid": "aa97ec1d7ea4462e661a556c75cbcf3990c0844e623e6f438a8d620e30116120",
        "url": "https://github.com/rust-lang/rust/pull/115331"
    },
    {
        "auto_descr": "This enables the following cases to collect in-place:\nlet v = vec![[0u8; 4]; 1024]\nlet v: Vec<_> = v.into_iter().flatten().collect();\n\nlet v: Vec<Option<NonZeroUsize>> = vec![NonZeroUsize::new(0); ...",
        "crea_time": "2024-08-29T17:52:05.361514605+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:05.361514605+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/110353",
        "scheme": "https",
        "title": "Expand in-place iteration specialization to Flatten, FlatMap and ArrayChunks by the8472 · Pull Request #110353 · rust-lang/rust · GitHub",
        "uri_uuid": "25c23e14d86a42ecc5e18c088609dad6f51949622b448f1ea9da964f9a1b48a0",
        "url": "https://github.com/rust-lang/rust/pull/110353"
    },
    {
        "auto_descr": "Fixes: #93610\nThis likely needs FCP. I created this PR as it's stabilization is trivial and FCP can be just conducted here. Not sure how to ping the libs API team (last attempt didn't work apparent...",
        "crea_time": "2024-08-29T17:52:07.703995917+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:07.703995917+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/116949",
        "scheme": "https",
        "title": "Stablize arc_unwrap_or_clone by ranile · Pull Request #116949 · rust-lang/rust · GitHub",
        "uri_uuid": "5770162a5d198f9df73586fe4c2d8db63fdbaa4893e84f1dcf40da4b07f207b4",
        "url": "https://github.com/rust-lang/rust/pull/116949"
    },
    {
        "auto_descr": "Implement #114135\nThe API is consistent with other collections.",
        "crea_time": "2024-08-29T17:52:09.080560293+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:09.080560293+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/114136",
        "scheme": "https",
        "title": "add LinkedList::{retain,retain_mut} by TennyZhuang · Pull Request #114136 · rust-lang/rust · GitHub",
        "uri_uuid": "76995d16076cdca218ecd9fcbe43a69e0d955dfbdd96bdc15670ccc6260ec4b8",
        "url": "https://github.com/rust-lang/rust/pull/114136"
    },
    {
        "auto_descr": "First cycle runs until we found 2 same elements, second runs after if there any found in the first one. This allows to avoid any memory writes until we found an item which we want to remove.\nThis l...",
        "crea_time": "2024-08-29T17:52:10.374184005+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:10.374184005+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/118273",
        "scheme": "https",
        "title": "Split `Vec::dedup_by` into 2 cycles by AngelicosPhosphoros · Pull Request #118273 · rust-lang/rust · GitHub",
        "uri_uuid": "a8764abbb49f0333887d2d4a6d44b7229ed999152f280a7f721f185b9c3a6dfc",
        "url": "https://github.com/rust-lang/rust/pull/118273"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:52:12.053516928+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:12.053516928+02:00",
        "modi_user": "api",
        "path": "/2023/12/15/2024-Edition-CFP.html",
        "scheme": "https",
        "title": "A Call for Proposals for the Rust 2024 Edition | Rust Blog",
        "uri_uuid": "e9f37d018cf1e3d6510eeb4d62367da80584b1da2be0b0937f7a7759b07797bf",
        "url": "https://blog.rust-lang.org/2023/12/15/2024-Edition-CFP.html"
    },
    {
        "auto_descr": "wakegp - Detecting wake words using Linear Genetic Programming",
        "crea_time": "2024-08-29T17:52:12.279494070+02:00",
        "crea_user": "api",
        "host": "codeberg.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:12.279494070+02:00",
        "modi_user": "api",
        "path": "/farooqkz/wake-word-detection-lgp",
        "scheme": "https",
        "title": "farooqkz/wakegp: Detecting wake words using Linear Genetic Programming - Codeberg.org",
        "uri_uuid": "fc4df345f0ca5bc648807f92ebb0877079da91fdd568df1bf302fe53848f906f",
        "url": "https://codeberg.org/farooqkz/wake-word-detection-lgp"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:12.612402265+02:00",
        "crea_user": "api",
        "host": "llvm.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:12.612402265+02:00",
        "modi_user": "api",
        "path": "/docs/tutorial/MyFirstLanguageFrontend/index.html",
        "scheme": "https",
        "title": "My First Language Frontend with LLVM Tutorial — LLVM 20.0.0git documentation",
        "uri_uuid": "fc8af125c7658f8a0adf0a958c857215aba5accfd7fa65366aa287bf75c94a24",
        "url": "https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:13.693133190+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:13.693133190+02:00",
        "modi_user": "api",
        "path": "/wiki/Costasiella_kuroshimae",
        "scheme": "https",
        "title": "Costasiella kuroshimae - Wikipedia",
        "uri_uuid": "4240829f22122e9644821a089811a53e55d7c3d0c9601f45f04453750f1cde08",
        "url": "https://en.wikipedia.org/wiki/Costasiella_kuroshimae"
    },
    {
        "auto_descr": "General information on the PrivateBin project.",
        "crea_time": "2024-08-29T17:52:13.917367618+02:00",
        "crea_user": "api",
        "host": "privatebin.info",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:13.917367618+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "PrivateBin",
        "uri_uuid": "04e558445ab7289d049f55881eee0b76fbf28df8f6c078fdbac3785b48dd9935",
        "url": "https://privatebin.info/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:14.129501549+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:14.129501549+02:00",
        "modi_user": "api",
        "path": "/wiki/Egyptian_Hieroglyphs_(Unicode_block)",
        "scheme": "https",
        "title": "Egyptian Hieroglyphs (Unicode block) - Wikipedia",
        "uri_uuid": "5346be96c8eafcdf3c3d1663bfff80929d6ac458aeab6edc023a0e410bf505c6",
        "url": "https://en.wikipedia.org/wiki/Egyptian_Hieroglyphs_(Unicode_block)"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:14.483708822+02:00",
        "crea_user": "api",
        "host": "www.unicode.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:14.483708822+02:00",
        "modi_user": "api",
        "path": "/reports/tr31/",
        "scheme": "https",
        "title": "UAX #31: Unicode Identifiers and Syntax",
        "uri_uuid": "8d5e04cbc4c7cb8933f838fc9696a0f1eba38248c4eaa03a1970c82f18b7cc5d",
        "url": "https://www.unicode.org/reports/tr31/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:15.446301453+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:15.446301453+02:00",
        "modi_user": "api",
        "path": "/1137/",
        "scheme": "https",
        "title": "xkcd: ‮LTR",
        "uri_uuid": "050a9e46ba3378fc53fcf89677ea497486c66407668fb45d65a21e85326fb136",
        "url": "https://xkcd.com/1137/"
    },
    {
        "auto_descr": "Explain xkcd is a wiki dedicated to explaining the webcomic xkcd. Go figure.",
        "crea_time": "2024-08-29T17:52:15.708701273+02:00",
        "crea_user": "api",
        "host": "www.explainxkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:15.708701273+02:00",
        "modi_user": "api",
        "path": "/wiki/index.php/1137:_RTL",
        "scheme": "https",
        "title": "1137: RTL - explain xkcd",
        "uri_uuid": "01dc64afe81d3db571dcf533cdb1e748c06b5aca65da74a680aba26d96caf9e9",
        "url": "https://www.explainxkcd.com/wiki/index.php/1137:_RTL"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:16.375601772+02:00",
        "crea_user": "api",
        "host": "tokipona.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:16.375601772+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Toki Pona (official site)",
        "uri_uuid": "e3257fdbb17edbbfc966b3daddf1fc8324caf875d0f757e041d73f4f7ab8ca51",
        "url": "https://tokipona.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:17.784019234+02:00",
        "crea_user": "api",
        "host": "lwn.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:17.784019234+02:00",
        "modi_user": "api",
        "path": "/SubscriberLink/952029/412bfd44912e90b2/",
        "scheme": "https",
        "title": "Committing to Rust for kernel code [LWN.net]",
        "uri_uuid": "8b57418ddd6d7ba739a00124c382d21b4883aa7ae28f420d469930042b7561e7",
        "url": "https://lwn.net/SubscriberLink/952029/412bfd44912e90b2/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:52:18.812422744+02:00",
        "crea_user": "api",
        "host": "www.theembeddedrustacean.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:18.812422744+02:00",
        "modi_user": "api",
        "path": "/p/the-embedded-rustacean-issue-7",
        "scheme": "https",
        "title": "The Embedded Rustacean Issue #7",
        "uri_uuid": "efb3a75d7cfd6ae11f0b174f263a839144111f51aba5f4fdfba25cc53839e79c",
        "url": "https://www.theembeddedrustacean.com/p/the-embedded-rustacean-issue-7"
    },
    {
        "auto_descr": "Update on the rust port",
        "crea_time": "2024-08-29T17:52:20.284622815+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:20.284622815+02:00",
        "modi_user": "api",
        "path": "/fish-shell/fish-shell/discussions/10123",
        "scheme": "https",
        "title": "Update on the rust port · fish-shell/fish-shell · Discussion #10123 · GitHub",
        "uri_uuid": "b36dba10ca289560567d09aa69543564158ebd45cb977cb2eefbc9bffd351835",
        "url": "https://github.com/fish-shell/fish-shell/discussions/10123"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:21.170321790+02:00",
        "crea_user": "api",
        "host": "unix.stackexchange.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:21.170321790+02:00",
        "modi_user": "api",
        "path": "/a/34251",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c06324da21b902f759edf43eba6787c04070441ed36d29572b7650fb3a84ea6f",
        "url": "https://unix.stackexchange.com/a/34251"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:21.332715805+02:00",
        "crea_user": "api",
        "host": "tiswww.case.edu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:21.332715805+02:00",
        "modi_user": "api",
        "path": "/php/chet/readline/rltop.html",
        "scheme": "https",
        "title": "The GNU Readline Library",
        "uri_uuid": "6e67b14604c4eb3e4f7c4260ef7c31c062bd1e33e3880cbd2a6898881b5437d4",
        "url": "https://tiswww.case.edu/php/chet/readline/rltop.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:22.377486130+02:00",
        "crea_user": "api",
        "host": "mcyoung.xyz",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:22.377486130+02:00",
        "modi_user": "api",
        "path": "/2023/11/27/simd-base64/",
        "scheme": "https",
        "title": " Designing a SIMD Algorithm from Scratch · mcyoung ",
        "uri_uuid": "b237ffab38d86e1494b3829ce3ac686ccd7ff137411534a0f3ec01fe0453e3f8",
        "url": "https://mcyoung.xyz/2023/11/27/simd-base64/"
    },
    {
        "auto_descr": "This provides 5-8% iteration speedups when using internal iteration.\nSimilar work could probably be done with try_fold but this requires nightly to implement.\nMaybe this is worth running a rustc pe...",
        "crea_time": "2024-08-29T17:52:23.007187955+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:23.007187955+02:00",
        "modi_user": "api",
        "path": "/rust-lang/hashbrown/pull/480",
        "scheme": "https",
        "title": "Specialize `fold` implementation of iterators by a1phyr · Pull Request #480 · rust-lang/hashbrown · GitHub",
        "uri_uuid": "7d3d9e1878261046ad9eb3172f92d7da418bff6c9cca37b4574b8044d54da8ad",
        "url": "https://github.com/rust-lang/hashbrown/pull/480"
    },
    {
        "auto_descr": "Refactor the if/else checking on cmp::Ordering variants to a \"branchless\" reassignment of left and right.\nThis change results in fewer branches and instructions.\nhttps://rust.godbolt.org/z/698eYffT...",
        "crea_time": "2024-08-29T17:52:24.509385855+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:24.509385855+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/117722",
        "scheme": "https",
        "title": "Refactor `binary_search_by` to use conditional moves by okaneco · Pull Request #117722 · rust-lang/rust · GitHub",
        "uri_uuid": "ac40dedacc340aaea2158696f019e0f9953f3365d41da834a803b32b052b618a",
        "url": "https://github.com/rust-lang/rust/pull/117722"
    },
    {
        "auto_descr": "This is at least my 4th attempt at this in as many years x) Previous attempts were all too complicated or too slow. But we're finally here!\nThe previous version of the exhaustiveness algorithm comp...",
        "crea_time": "2024-08-29T17:52:25.538033179+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:25.538033179+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/117611",
        "scheme": "https",
        "title": "Rewrite exhaustiveness in one pass by Nadrieril · Pull Request #117611 · rust-lang/rust · GitHub",
        "uri_uuid": "6ea5123a5f213f2bed728216a945bf2874fba49ceba95b83658897b2d96628e6",
        "url": "https://github.com/rust-lang/rust/pull/117611"
    },
    {
        "auto_descr": "With #116670, #117531, and #117171, I think we would be comfortable with re-enabling the effects feature for more testing in libcore.\nr? @oli-obk\ncc @fmease\ncc #110395",
        "crea_time": "2024-08-29T17:52:27.557310879+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:27.557310879+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/117825",
        "scheme": "https",
        "title": "Reenable effects in libcore by fee1-dead · Pull Request #117825 · rust-lang/rust · GitHub",
        "uri_uuid": "705b264d21fa66f437fba19dd2b8a2d444fc36637a2a90830dccf3cd34f4c935",
        "url": "https://github.com/rust-lang/rust/pull/117825"
    },
    {
        "auto_descr": "During RustLab, Alice Ryhl brought to my attention that the Andoid team stumbled over the fact that if one attempts to write a unit test within a doctest, it will be summarily ignored. So this lint...",
        "crea_time": "2024-08-29T17:52:28.613378973+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:28.613378973+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-clippy/pull/11872",
        "scheme": "https",
        "title": "add lint against unit tests in doctests by llogiq · Pull Request #11872 · rust-lang/rust-clippy · GitHub",
        "uri_uuid": "d32b2aa8ee879710e5ba790c21e8e1a56ecb5e931bf97332945e7a03763aaa4e",
        "url": "https://github.com/rust-lang/rust-clippy/pull/11872"
    },
    {
        "auto_descr": "github crates-io docs-rs",
        "crea_time": "2024-08-29T17:52:29.784206802+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:29.784206802+02:00",
        "modi_user": "api",
        "path": "/no-panic/latest/no_panic/",
        "scheme": "https",
        "title": "no_panic - Rust",
        "uri_uuid": "db3ca16abaf3d61535d49780b6197ea0f88e485dbd6a7dabe47cf45018095492",
        "url": "https://docs.rs/no-panic/latest/no_panic/"
    },
    {
        "auto_descr": "API documentation for the Rust `dont_panic` crate.",
        "crea_time": "2024-08-29T17:52:29.926035344+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:29.926035344+02:00",
        "modi_user": "api",
        "path": "/dont_panic/latest/dont_panic/",
        "scheme": "https",
        "title": "dont_panic - Rust",
        "uri_uuid": "9c7d2b4eb1c15a3686106f323a3d6b6bd98a239bd5e661656bf405ceb228f6d1",
        "url": "https://docs.rs/dont_panic/latest/dont_panic/"
    },
    {
        "auto_descr": "The opposite of do",
        "crea_time": "2024-08-29T17:52:30.059863971+02:00",
        "crea_user": "api",
        "host": "metacpan.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:30.059863971+02:00",
        "modi_user": "api",
        "path": "/pod/Acme::Don::t",
        "scheme": "https",
        "title": "Acme::Don::t - The opposite of do - metacpan.org",
        "uri_uuid": "74dbb7b59219bd844d680f4b63c57924c0f69f6dc97d5032269ae0150a1752be",
        "url": "https://metacpan.org/pod/Acme::Don::t"
    },
    {
        "auto_descr": "A guide to the Rust game development ecosystem.",
        "crea_time": "2024-08-29T17:52:30.235261262+02:00",
        "crea_user": "api",
        "host": "arewegameyet.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:30.235261262+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Are we game yet?",
        "uri_uuid": "837fff8149222675295cfbec2c2b5c82fde694578ec7920b1f37e244f46b3597",
        "url": "https://arewegameyet.rs/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:30.763347586+02:00",
        "crea_user": "api",
        "host": "arewewebyet.rs",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:30.763347586+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "8d4af86dbaed57b1836aeddc2767d3e789754666f2b96970a283f5ce745ca63a",
        "url": "https://arewewebyet.rs/"
    },
    {
        "auto_descr": "Code for \"Zero To Production In Rust\", a book on API development using Rust. - LukeMathWalker/zero-to-production",
        "crea_time": "2024-08-29T17:52:31.715114161+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:31.715114161+02:00",
        "modi_user": "api",
        "path": "/LukeMathWalker/zero-to-production",
        "scheme": "https",
        "title": "GitHub - LukeMathWalker/zero-to-production: Code for \"Zero To Production In Rust\", a book on API development using Rust.",
        "uri_uuid": "093a23730a4e73a2ad2613e5ea27d045b30d9eca31adb060f899b1b97aa0b3f9",
        "url": "https://github.com/LukeMathWalker/zero-to-production"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:32.440150430+02:00",
        "crea_user": "api",
        "host": "wiki.mozilla.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:32.440150430+02:00",
        "modi_user": "api",
        "path": "/Areweyet",
        "scheme": "https",
        "title": "Areweyet - MozillaWiki",
        "uri_uuid": "802def85e6fbf603b155de69dfb09be91447a92bc28748a34b88e542ee6ab0d6",
        "url": "https://wiki.mozilla.org/Areweyet"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:33.710870416+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:33.710870416+02:00",
        "modi_user": "api",
        "path": "/crates/tracing-bunyan-formatter",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "24470a88babbb55b653ad0e9620138b7e1131d8022cf15d942d621bfb69abdda",
        "url": "https://crates.io/crates/tracing-bunyan-formatter"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:33.903221239+02:00",
        "crea_user": "api",
        "host": "areweguiyet.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:33.903221239+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Are we GUI yet?",
        "uri_uuid": "b1c11b252e928a2393c6fd245f0cd0d54e93b915b0ac6af17ad3a5856b495ca8",
        "url": "https://areweguiyet.com/"
    },
    {
        "auto_descr": "Awesome list of \"Are We *thing* Yet\" for Rust. Contribute to UgurcanAkkok/AreWeRustYet development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:52:34.245813638+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:34.245813638+02:00",
        "modi_user": "api",
        "path": "/UgurcanAkkok/AreWeRustYet",
        "scheme": "https",
        "title": "GitHub - UgurcanAkkok/AreWeRustYet: Awesome list of \"Are We *thing* Yet\" for Rust",
        "uri_uuid": "934c22d3a408a57d279a31ebf6c775b429545edb686a9847a70f2683c96f1518",
        "url": "https://github.com/UgurcanAkkok/AreWeRustYet"
    },
    {
        "auto_descr": "Showcase how to use nom to parse mathematical expressions - jbethune/nom-equation-parser",
        "crea_time": "2024-08-29T17:52:35.153941049+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:35.153941049+02:00",
        "modi_user": "api",
        "path": "/jbethune/nom-equation-parser",
        "scheme": "https",
        "title": "GitHub - jbethune/nom-equation-parser: Showcase how to use nom to parse mathematical expressions",
        "uri_uuid": "14bd16c9cbedc88795ae6c791251d1e47a2eba3c670dbb0ba194f81b76538549",
        "url": "https://github.com/jbethune/nom-equation-parser"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:52:36.408487567+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:36.408487567+02:00",
        "modi_user": "api",
        "path": "/2022/02/24/Rust-1.59.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.59.0 | Rust Blog",
        "uri_uuid": "9110f50af9499a39df5b2eca7dbaddf0f17e530d3032319d9f08a733eaea233b",
        "url": "https://blog.rust-lang.org/2022/02/24/Rust-1.59.0.html#destructuring-assignments"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:36.643135991+02:00",
        "crea_user": "api",
        "host": "llvm.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:36.643135991+02:00",
        "modi_user": "api",
        "path": "/docs/tutorial/index.html",
        "scheme": "https",
        "title": "LLVM Tutorial: Table of Contents — LLVM 20.0.0git documentation",
        "uri_uuid": "608c60cb8fc9ccbe2daa7a638436f1c153190ca0220936aacdcd5f95f84606a0",
        "url": "https://llvm.org/docs/tutorial/index.html"
    },
    {
        "auto_descr": "Contribute to barafael/protohackers development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:52:37.382196044+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:37.382196044+02:00",
        "modi_user": "api",
        "path": "/barafael/protohackers/blob/2cc81d7273206c08ca677a82e557bc26dc9cdbcc/speedd/src/client.rs",
        "scheme": "https",
        "title": "protohackers/speedd/src/client.rs at 2cc81d7273206c08ca677a82e557bc26dc9cdbcc · barafael/protohackers · GitHub",
        "uri_uuid": "065db6d8c095c3c785153f97f5aaaf0a18d390d15a06930a2f9ddfe96c033da2",
        "url": "https://github.com/barafael/protohackers/blob/2cc81d7273206c08ca677a82e557bc26dc9cdbcc/speedd/src/client.rs#L5-L38"
    },
    {
        "auto_descr": "I'd like to think that my understanding of \"async Rust\" has increased over\nthe past year or so. I'm 100% onboard with the basic principle: I  would \nlike to ...",
        "crea_time": "2024-08-29T17:52:38.189939884+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:38.189939884+02:00",
        "modi_user": "api",
        "path": "/articles/pin-and-suffering",
        "scheme": "https",
        "title": "\n        \n        Pin and suffering\n        \n    ",
        "uri_uuid": "a54c01a0200fa91bf6cfb1498ac334833992b1dbf4b2cd1a39ac2602bc9fd375",
        "url": "https://fasterthanli.me/articles/pin-and-suffering"
    },
    {
        "auto_descr": "With the Future trait stabilized and async/await coming soon, many more people are being exposed to the Pin type and its sibling trait Unpin. In this video, ...",
        "crea_time": "2024-08-29T17:52:38.789467151+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:38.789467151+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "The Why, What, and How of Pinning in Rust - YouTube",
        "uri_uuid": "001296a5ef6c83763eead20d6c7975958f239364108f7f4e0aab8ef6e21dd2bb",
        "url": "https://www.youtube.com/watch?v=DkMwYxfSYNQ"
    },
    {
        "auto_descr": "All videos from both days of EuroRust 2023",
        "crea_time": "2024-08-29T17:52:39.577949309+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:39.577949309+02:00",
        "modi_user": "api",
        "path": "/playlist",
        "scheme": "https",
        "title": "EuroRust 2023 - YouTube",
        "uri_uuid": "11509de3a1b11d8b2eed6d86d4a0b559924c7731b0eae249512910fc9abed8aa",
        "url": "https://www.youtube.com/playlist?list=PLH6-VpZ3SvUUKFSEPEWiHQi4JqebBj9Tq"
    },
    {
        "auto_descr": "The Rust Book (Abridged)",
        "crea_time": "2024-08-29T17:52:39.942221937+02:00",
        "crea_user": "api",
        "host": "jasonwalton.ca",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:39.942221937+02:00",
        "modi_user": "api",
        "path": "/rust-book-abridged/",
        "scheme": "https",
        "title": "The Rust Book (Abridged) | The rs Book",
        "uri_uuid": "eacff5bba9bfcbc5a4697b5f13f0916e3a0c83c237add68f59757e1a244e7309",
        "url": "https://jasonwalton.ca/rust-book-abridged/"
    },
    {
        "auto_descr": "Intrinsic has incorrect return type! ptr @llvm.aarch64.neon.ld1x4.v16i8.p0i8 in function _ZN4core9core_arch10arm_shared4neon9generated11vld1q_u8_x417h224d569be9c8b1b6E LLVM ERROR: Broken function found, compilation aborted! error: could ...",
        "crea_time": "2024-08-29T17:52:40.209534943+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:40.209534943+02:00",
        "modi_user": "api",
        "path": "/llogiq/bytecount/issues/90",
        "scheme": "https",
        "title": "Aarch64 build appears broken · Issue #90 · llogiq/bytecount · GitHub",
        "uri_uuid": "245b8905328e0e2688316e80ce2c09ed1e28cacde0f1a04347ddba4f822eab98",
        "url": "https://github.com/llogiq/bytecount/issues/90"
    },
    {
        "auto_descr": "A web framework for Rust. Contribute to rwf2/Rocket development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:52:40.850793596+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:40.850793596+02:00",
        "modi_user": "api",
        "path": "/rwf2/Rocket/blob/v0.5.0-rc.4/CHANGELOG.md",
        "scheme": "https",
        "title": "Rocket/CHANGELOG.md at v0.5.0-rc.4 · rwf2/Rocket · GitHub",
        "uri_uuid": "ad1dfd7770ee5f7a3dbb22e9cb4e7a3eb05211826b6938973cd35c74e324289c",
        "url": "https://github.com/rwf2/Rocket/blob/v0.5.0-rc.4/CHANGELOG.md"
    },
    {
        "auto_descr": "Rust is a lovely programming language but I’ve never quite come to terms with crates.io, or any other of these language-specific repositories where everyone ...",
        "crea_time": "2024-08-29T17:52:42.051599697+02:00",
        "crea_user": "api",
        "host": "thomask.sdf.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:42.051599697+02:00",
        "modi_user": "api",
        "path": "/blog/2023/11/14/rust-without-crates-io.html",
        "scheme": "https",
        "title": "Rust without crates.io",
        "uri_uuid": "8d238cf5471263f945ffd47589ae0f740ffd259cbacc61647c13f94dd6022d0a",
        "url": "https://thomask.sdf.org/blog/2023/11/14/rust-without-crates-io.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:42.924919012+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:42.924919012+02:00",
        "modi_user": "api",
        "path": "/why-rust/",
        "scheme": "https",
        "title": "Redirect",
        "uri_uuid": "df222c50aafa27dec4720754c44df192e84cbe58f82675260619f6d0909650b3",
        "url": "https://corrode.dev/why-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:43.163506374+02:00",
        "crea_user": "api",
        "host": "slint.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:43.163506374+02:00",
        "modi_user": "api",
        "path": "/blog/slint-1.3-released",
        "scheme": "https",
        "title": "Slint 1.3 Released with Revamped Native Styles and JavaScript API — Slint Blog",
        "uri_uuid": "95f1118b14d6dbf2988c86b17117340c5ee75de62c17ac915e317175bd7738e1",
        "url": "https://slint.dev/blog/slint-1.3-released"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:52:43.711371100+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:43.711371100+02:00",
        "modi_user": "api",
        "path": "/inside-rust/2023/11/15/spec-vision.html",
        "scheme": "https",
        "title": "Our Vision for the Rust Specification | Inside Rust Blog",
        "uri_uuid": "c9c37739aa7ae3e9b0b7938efad4cf112d33725c1cb8ee8c417ee5c73b0809c3",
        "url": "https://blog.rust-lang.org/inside-rust/2023/11/15/spec-vision.html"
    },
    {
        "auto_descr": "gccrs is an alternative compiler implementation of the Rust Programming Language, which aims at adding support for the language to the GNU Compiler Collectio...",
        "crea_time": "2024-08-29T17:52:43.958028520+02:00",
        "crea_user": "api",
        "host": "m.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:43.958028520+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "The road to compiling the standard library with gccrs - Arthur Cohen - EuroRust 2023 - YouTube",
        "uri_uuid": "840e4afc6c8529e8eada8c651b3cc225f5b0dac67c04d438a5c6095b952ce84f",
        "url": "https://m.youtube.com/watch?v=WgqGahDl-sY"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:52:44.753242621+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:44.753242621+02:00",
        "modi_user": "api",
        "path": "/episode/067-quentin-ochem-florian-gilcher/",
        "scheme": "https",
        "title": "Rust Safety with Quentin Ochem and Florian Gilcher :: Rustacean Station",
        "uri_uuid": "a75ecd96b09195333601e0840d61abf1041a475eed0580ba2b5ef46fd2bdd51b",
        "url": "https://rustacean-station.org/episode/067-quentin-ochem-florian-gilcher/"
    },
    {
        "auto_descr": "Zig is a programming language that’s attempting to become “the new C” - the language of choice for low-level systems programming and embedded hardware. Going...",
        "crea_time": "2024-08-29T17:52:44.893551849+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:44.893551849+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "What's Zig got that C, Rust and Go don't have? (with Loris Cro) - YouTube",
        "uri_uuid": "c31e31663b307097475eee01fb80ce582043754b7ee5103772a6759dc02c77c1",
        "url": "https://www.youtube.com/watch?v=5_oqWE9otaE"
    },
    {
        "auto_descr": "Sub-tracking issue for rust-lang/rfcs#911. This tracks arithmetic for floating point types in const fn. These operations are already stable in const/static, and are also being promoted on stable (&(1.2*2.1) has lifetime 'static). However...",
        "crea_time": "2024-08-29T17:52:45.728459174+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:45.728459174+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/issues/57241",
        "scheme": "https",
        "title": "Tracking issue for `#![feature(const_fn_floating_point_arithmetic)]` · Issue #57241 · rust-lang/rust · GitHub",
        "uri_uuid": "cd80b3bc38c279d522fea21f49d61b9b562aa708f666125be02a284d626c7b0e",
        "url": "https://github.com/rust-lang/rust/issues/57241"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:52:47.739338488+02:00",
        "crea_user": "api",
        "host": "iodapson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:47.739338488+02:00",
        "modi_user": "api",
        "path": "/leptos-abridged/1-Building_user_interfaces/leptos-analysis-1.html",
        "scheme": "https",
        "title": "Components, Event Listeners, Signals, Dynamically-Derived Signals, Dynamic HTML Classes, Attributes & Styles, HTML Injection - Leptos Book Abridged",
        "uri_uuid": "bf39c0ecc4ffa1a24c03a46558ec7b51e8680520e525e727c792888dd9961611",
        "url": "https://iodapson.github.io/leptos-abridged/1-Building_user_interfaces/leptos-analysis-1.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:47.972766718+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:47.972766718+02:00",
        "modi_user": "api",
        "path": "/wiki/Graph_database",
        "scheme": "https",
        "title": "Graph database - Wikipedia",
        "uri_uuid": "d63bf3bd48b0f1b7c48d7bcb02cd0275d5e245a7346b336ae63bbbeb58d896af",
        "url": "https://en.wikipedia.org/wiki/Graph_database"
    },
    {
        "auto_descr": "Building a filesystem like a google drive, a threaded comments system, or an employee management system always sounds like a daunting task. The data for these use-cases has recursive relationships.",
        "crea_time": "2024-08-29T17:52:48.315055606+02:00",
        "crea_user": "api",
        "host": "fueled.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:48.315055606+02:00",
        "modi_user": "api",
        "path": "/the-cache/posts/backend/closure-table/",
        "scheme": "https",
        "title": "Closure Table | The Cache • Fueled Engineering",
        "uri_uuid": "8fe750c31175a8a472ba4833862029e876b28a80cd399c1a71aeacfd8b6d6222",
        "url": "https://fueled.com/the-cache/posts/backend/closure-table/"
    },
    {
        "auto_descr": "Featuring binary versus linear search, and non-clustered indexes. Uh, indices. However you want to say it. • MORE BASICS: https://www.youtube.com/playlist?li...",
        "crea_time": "2024-08-29T17:52:48.512523421+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:48.512523421+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "How Binary Search Makes Computers Much, Much Faster - YouTube",
        "uri_uuid": "199fbe5fbab6383d473b67d7a0084471a1e41381730b1c44adb4716a2dc42970",
        "url": "https://www.youtube.com/watch?v=KXJSjte_OAI"
    },
    {
        "auto_descr": "Tutorial explains Prolog concepts with text, diagrams and \nspecialized diagrams for illustrating flow-of-control. Uses \nfull program examples to lead you step-by-step \nthrough writing: an adventure game, an intelligent data-base, \nan expert system and an order entry program.",
        "crea_time": "2024-08-29T17:52:49.478842383+02:00",
        "crea_user": "api",
        "host": "www.amzi.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:49.478842383+02:00",
        "modi_user": "api",
        "path": "/AdventureInProlog/apreface.php",
        "scheme": "https",
        "title": "Preface",
        "uri_uuid": "3790e990c4a26b9d686ec4d5747d10de7242185f5133a7403958b62e5f02bf39",
        "url": "https://www.amzi.com/AdventureInProlog/apreface.php"
    },
    {
        "auto_descr": "Attached: 1 image\n\nDecided I'm old enough to get my first tattoo  #rustlang #ferris 🦀",
        "crea_time": "2024-08-29T17:52:49.860309433+02:00",
        "crea_user": "api",
        "host": "chaos.social",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:49.860309433+02:00",
        "modi_user": "api",
        "path": "/@zeenix@toot.cat/111286487633841441",
        "scheme": "https",
        "title": "Zeeshan Ali Khan :rust: 🇺🇦: &quot;Decided I&#39;m old enough to get my first tattoo  #r…&quot; - Toot.Cat",
        "uri_uuid": "e4533eeacabe6724e286997e65bac50943f13b7d0da0393e0b02e227ae6d6241",
        "url": "https://chaos.social/@zeenix@toot.cat/111286487633841441"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:52:50.855014064+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:50.855014064+02:00",
        "modi_user": "api",
        "path": "/from-perl-to-rust/control_flow.html",
        "scheme": "https",
        "title": "Control Flow - From Perl to Rust",
        "uri_uuid": "9a85bb12103f53828dd84278cc35d4672a6cb454b764a2e11d2cbd0123ce8caf",
        "url": "https://oylenshpeegul.gitlab.io/from-perl-to-rust/control_flow.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:51.616855497+02:00",
        "crea_user": "api",
        "host": "adventofcode.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:51.616855497+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Advent of Code 2023",
        "uri_uuid": "94c9ac382121316e005ea6219d05800f9e87ac176c9c58fdee06aa08a0550a33",
        "url": "https://adventofcode.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:52.081426007+02:00",
        "crea_user": "api",
        "host": "phind.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:52.081426007+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b747e3ffd6a4f43e813440996c78440080b9ae8372172a76bff55486f80f2459",
        "url": "https://phind.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:52.212873838+02:00",
        "crea_user": "api",
        "host": "asahilinux.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:52.212873838+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Asahi Linux",
        "uri_uuid": "d59a9bca4736a02286ae278b9399304bcb24d69af9bf6c033f7ce481745de28e",
        "url": "https://asahilinux.org/"
    },
    {
        "auto_descr": "htmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext\n\n    htmx is small (~14k min.gz’d), dependency-free, extendable, IE11 compatible & has reduced code base sizes by 67% when compared with react",
        "crea_time": "2024-08-29T17:52:52.467921306+02:00",
        "crea_user": "api",
        "host": "htmx.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:52.467921306+02:00",
        "modi_user": "api",
        "path": "/reference/",
        "scheme": "https",
        "title": "</> htmx ~ Reference",
        "uri_uuid": "b7283c7376445de2dbacde6c11432eaec0d50aae11d62925316d56f5a28412a7",
        "url": "https://htmx.org/reference/#attributes/hx-swap"
    },
    {
        "auto_descr": "A few years ago, I dropped everything to focus 100% on WebAssembly. At the time, Rust had the best support for compiling into WebAssembly, and the most full-featured WebAssembly runtimes were…",
        "crea_time": "2024-08-29T17:52:52.792623526+02:00",
        "crea_user": "api",
        "host": "jsoverson.medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:52.792623526+02:00",
        "modi_user": "api",
        "path": "/was-rust-worth-it-f43d171fb1b3",
        "scheme": "https",
        "title": "Was Rust Worth It?. From JavaScript to Rust, three years… | by Jarrod Overson | Medium",
        "uri_uuid": "c90e95ca2a5d4b84c3e4200fd5a8ed1af7e891d72a389444ac8a70238b2a4429",
        "url": "https://jsoverson.medium.com/was-rust-worth-it-f43d171fb1b3"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:52:53.063166960+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:53.063166960+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2023/10/20/using-rust/",
        "scheme": "https",
        "title": "Idea: \"Using Rust\", a living document · baby steps",
        "uri_uuid": "342c5a598495283ff250cb3999ecfca03ff9eb8ba6c16823d807f0c105f68c41",
        "url": "https://smallcultfollowing.com/babysteps/blog/2023/10/20/using-rust/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:52:53.979331577+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:53.979331577+02:00",
        "modi_user": "api",
        "path": "/2023/10/26/broken-badges-and-23k-keywords.html",
        "scheme": "https",
        "title": "A tale of broken badges and 23,000 features | Rust Blog",
        "uri_uuid": "a73631dbb03981140258912df8150b7b4bc18c971412db764d3677a701a6076f",
        "url": "https://blog.rust-lang.org/2023/10/26/broken-badges-and-23k-keywords.html"
    },
    {
        "auto_descr": "A language empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:52:54.272441462+02:00",
        "crea_user": "api",
        "host": "www.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:54.272441462+02:00",
        "modi_user": "api",
        "path": "/governance",
        "scheme": "https",
        "title": "\n            Governance - Rust Programming Language\n        ",
        "uri_uuid": "b1b5e6950457a879d2a0c16d44f3c1c236d14f602779bf1c6b2d79e88043a4c4",
        "url": "https://www.rust-lang.org/governance"
    },
    {
        "auto_descr": "\n      \n\n  Rust and Tell - November Edition\n\n\n  \n    \n\n \n \n\nTuesday,\nNov.\n\n14th,\n2023\n    18:30 CET\n  \n  \n    \n    \n    @ GitButler\n    \n  \n\n\n    ",
        "crea_time": "2024-08-29T17:52:54.925131603+02:00",
        "crea_user": "api",
        "host": "berline.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:54.925131603+02:00",
        "modi_user": "api",
        "path": "/2023/11/14/rust-and-tell-november-edition.html",
        "scheme": "https",
        "title": "Rust and Tell - November Edition - Berline.rs",
        "uri_uuid": "0ac03f21135830546ae78de99da573ab221ad76aeb58098f71527a41e287a504",
        "url": "https://berline.rs/2023/11/14/rust-and-tell-november-edition.html"
    },
    {
        "auto_descr": "Extract conditions in singular matches! with or-patterns to individual matches! statements which enables branchless code output. The following functions were changed:\n\nis_ascii_alphanumeric\nis_asci...",
        "crea_time": "2024-08-29T17:52:55.165236208+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:55.165236208+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/117260",
        "scheme": "https",
        "title": "Refactor some `char`, `u8` ASCII functions to be branchless by okaneco · Pull Request #117260 · rust-lang/rust · GitHub",
        "uri_uuid": "2cd5cd405ac94ab1b9341e61743a266570842453e6c7eb6a8ffab686eeebbc0c",
        "url": "https://github.com/rust-lang/rust/pull/117260"
    },
    {
        "auto_descr": "Fixes #116861",
        "crea_time": "2024-08-29T17:52:56.694989769+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:56.694989769+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/117038",
        "scheme": "https",
        "title": "Add #[inline] to some recalcitrant ops::range methods by saethlin · Pull Request #117038 · rust-lang/rust · GitHub",
        "uri_uuid": "436bb5ecc0c1fa9ccec72147e761db0cf2b51d1559759795a4a6b2965c4220ff",
        "url": "https://github.com/rust-lang/rust/pull/117038"
    },
    {
        "auto_descr": "Use CreateWaitableTimerExW with CREATE_WAITABLE_TIMER_HIGH_RESOLUTION. Does not work before Windows 10, version 1803 so in that case we fallback to using Sleep.\nI've created a WaitableTimer type so...",
        "crea_time": "2024-08-29T17:52:59.866847176+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:52:59.866847176+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/116461",
        "scheme": "https",
        "title": "Windows: Support sub-millisecond sleep by ChrisDenton · Pull Request #116461 · rust-lang/rust · GitHub",
        "uri_uuid": "f69bf0d059499c24f0b653064d8788bf3c86c4d981ba101c78e3c990835f1836",
        "url": "https://github.com/rust-lang/rust/pull/116461"
    },
    {
        "auto_descr": "Closes #96283\nAwaiting FCP completion: #96283 (comment)\nr? libs-api",
        "crea_time": "2024-08-29T17:53:02.086838222+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:02.086838222+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/116205",
        "scheme": "https",
        "title": "Stabilize `[const_]pointer_byte_offsets` by WaffleLapkin · Pull Request #116205 · rust-lang/rust · GitHub",
        "uri_uuid": "872ee7e3f31119a5c0f56bfb282f8ab41199fdd6c3910f979402bb39a712ccee",
        "url": "https://github.com/rust-lang/rust/pull/116205"
    },
    {
        "auto_descr": "This reduces the runtime for a simple program using Bytes::next to iterate through a file from 220ms to 70ms on my Linux box.\nr? @the8472",
        "crea_time": "2024-08-29T17:53:04.170257043+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:04.170257043+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/116785",
        "scheme": "https",
        "title": "Specialize `Bytes<R>::next` when `R` is a `BufReader`. by nnethercote · Pull Request #116785 · rust-lang/rust · GitHub",
        "uri_uuid": "16192f23ea80e61659cf0603907c1ad0644a20d88439e3fca0527bcf09b4abfb",
        "url": "https://github.com/rust-lang/rust/pull/116785"
    },
    {
        "auto_descr": "r? @fee1-dead\nThis was accidentally allowed by #114776 without feature gates",
        "crea_time": "2024-08-29T17:53:06.519648115+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:06.519648115+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/116856",
        "scheme": "https",
        "title": "Disable effects in libcore again by oli-obk · Pull Request #116856 · rust-lang/rust · GitHub",
        "uri_uuid": "9a2ccc28842ca07db4e4fc6588e82a25c7a65870b12cf84342b582b23a09d404",
        "url": "https://github.com/rust-lang/rust/pull/116856"
    },
    {
        "auto_descr": "This PR adds a new real-world runtime benchmark to the suite: Pinky, my NES emulator.\nIt uses a simple test ROM I've found here and emulates its execution for a given number of frames (which can be...",
        "crea_time": "2024-08-29T17:53:08.331672491+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:08.331672491+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rustc-perf/pull/1730",
        "scheme": "https",
        "title": "Add NES emulation runtime benchmark by koute · Pull Request #1730 · rust-lang/rustc-perf · GitHub",
        "uri_uuid": "9fb52b91622f4f5bdea311067771ae718f82b3ead3739ca31f77ab025434f0b5",
        "url": "https://github.com/rust-lang/rustc-perf/pull/1730"
    },
    {
        "auto_descr": "after nearly five decades since its discovery, the room believed to have served as michelangelo's refuge in 1530 is open to the public.",
        "crea_time": "2024-08-29T17:53:09.628304567+02:00",
        "crea_user": "api",
        "host": "www.designboom.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:09.628304567+02:00",
        "modi_user": "api",
        "path": "/art/michelangelo-secret-room-florence-opens-public-medici-chapel-museum-11-03-2023/",
        "scheme": "https",
        "title": "michelangelo's secret drawing room in florence opens to the public for the first time",
        "uri_uuid": "80245edf500ec77d3479b19c3dac8baec2e2745e9811bb679ae558b2764ead61",
        "url": "https://www.designboom.com/art/michelangelo-secret-room-florence-opens-public-medici-chapel-museum-11-03-2023/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:10.256122409+02:00",
        "crea_user": "api",
        "host": "pharo.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:10.256122409+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Pharo - Welcome to Pharo!",
        "uri_uuid": "9a211043b5985c5b99f0acd42d28b6bee88ef35f9ab5a81bf073356c11e6e3f4",
        "url": "https://pharo.org/"
    },
    {
        "auto_descr": "Glamorous Toolkit (GT) is the Moldable Development Environment. Version 1.0 embodies more than 6 years of development and is the result of some 14 years of research. Our goal is to make systems explainable by means of custom tools created for each problem. Glamorous Toolkit makes this possible by making the creation of custom tools inexpensive and seamless.",
        "crea_time": "2024-08-29T17:53:10.912758724+02:00",
        "crea_user": "api",
        "host": "lepiter.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:10.912758724+02:00",
        "modi_user": "api",
        "path": "/feenk/what-exactly-is-glamorous-toolkit-v1-0--7sex44dze2dqlocqxwfz8ju0i/",
        "scheme": "https",
        "title": "What exactly is Glamorous Toolkit v1.0?",
        "uri_uuid": "266a44696bff350bbaf2f1896728f91377dfbdf02b5bb6408f93a3dbc65f6264",
        "url": "https://lepiter.io/feenk/what-exactly-is-glamorous-toolkit-v1-0--7sex44dze2dqlocqxwfz8ju0i/"
    },
    {
        "auto_descr": "Glamorous Toolkit is the moldable development environment",
        "crea_time": "2024-08-29T17:53:11.131619373+02:00",
        "crea_user": "api",
        "host": "gtoolkit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:11.131619373+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Glamorous Toolkit",
        "uri_uuid": "3750ead2fbb6c9495e3659f352c287a33fa5f6322f7fc31426dbb462129de0ec",
        "url": "https://gtoolkit.com/"
    },
    {
        "auto_descr": "A post-modern modal text editor.",
        "crea_time": "2024-08-29T17:53:11.574517938+02:00",
        "crea_user": "api",
        "host": "helix-editor.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:11.574517938+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Helix",
        "uri_uuid": "72f1359be1ccf7ed5eefab4a224959dbd3ce8dccaa5f5a9210f755c7e9e88b42",
        "url": "https://helix-editor.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:11.830946233+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:11.830946233+02:00",
        "modi_user": "api",
        "path": "/crates/tabfile",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "280487b9cac8b10284e0a140e16be91654804d970a0cf06c3a2db2abff537d84",
        "url": "https://crates.io/crates/tabfile"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:12.087306330+02:00",
        "crea_user": "api",
        "host": "www.phoronix.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:12.087306330+02:00",
        "modi_user": "api",
        "path": "/news/IO_uring-FUTEX-Linux-6.7",
        "scheme": "https",
        "title": "IO_uring FUTEX Support In Linux 6.7 For A Nice Performance/Efficiency Boost - Phoronix",
        "uri_uuid": "fe28e38b4ddec6ffe7ca985cbb97d2a2204a85059fa91f854d48acb1be4cb204",
        "url": "https://www.phoronix.com/news/IO_uring-FUTEX-Linux-6.7"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:12.934470593+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:12.934470593+02:00",
        "modi_user": "api",
        "path": "/r/Assembly_language/comments/13oagbq/stop_doing_avx512/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ab5a56fce541ea2d779586b564337359fe4283c7d807230617add02361794378",
        "url": "https://www.reddit.com/r/Assembly_language/comments/13oagbq/stop_doing_avx512/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:13.069599403+02:00",
        "crea_user": "api",
        "host": "aya-rs.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:13.069599403+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Home - Aya",
        "uri_uuid": "b61bddc4a1a53d9290d9fad5190fa4be90b6c886aa5ab50504156fe8fc53e946",
        "url": "https://aya-rs.dev/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:53:13.314112464+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:13.314112464+02:00",
        "modi_user": "api",
        "path": "/stable/clippy/usage.html",
        "scheme": "https",
        "title": "Usage - Clippy Documentation",
        "uri_uuid": "bddacca7474ef8506888674f9f15a87c5d03f07754613e863e3acf1d977f8ffa",
        "url": "https://doc.rust-lang.org/stable/clippy/usage.html"
    },
    {
        "auto_descr": "Iconic font aggregator, collection, & patcher: 9,000+ glyph/icons, 60+ patched fonts: Hack, Source Code Pro, more. Popular glyph collections: Font Awesome, Octicons, Material Design Icons, and more",
        "crea_time": "2024-08-29T17:53:13.493811615+02:00",
        "crea_user": "api",
        "host": "www.nerdfonts.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:13.493811615+02:00",
        "modi_user": "api",
        "path": "/font-downloads",
        "scheme": "https",
        "title": "Nerd Fonts - Iconic font aggregator, glyphs/icons collection, & fonts patcher",
        "uri_uuid": "20511f8859689521bb5b3032057b78d63c41764b749aa7af7828e749f9b0c6cd",
        "url": "https://www.nerdfonts.com/font-downloads"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:53:13.839828502+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:13.839828502+02:00",
        "modi_user": "api",
        "path": "/episode/dave-macleod/",
        "scheme": "https",
        "title": "Learn Rust in a Month of Lunches with Dave MacLeod :: Rustacean Station",
        "uri_uuid": "153d1c98f65268576c606717d91f10faed1d6797aa962027fb4fa1d180fabf60",
        "url": "https://rustacean-station.org/episode/dave-macleod/"
    },
    {
        "auto_descr": "How to hash, index, profile, multi-thread, and SIMD your way to incredible speeds.",
        "crea_time": "2024-08-29T17:53:13.969651815+02:00",
        "crea_user": "api",
        "host": "willcrichton.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:13.969651815+02:00",
        "modi_user": "api",
        "path": "/notes/k-corrset/",
        "scheme": "https",
        "title": "Analyzing Data 180,000x Faster with Rust",
        "uri_uuid": "ee44031a2659ca09dff3d96c06283c3b17ec9d192ecbf4a19751ca920a42c0ef",
        "url": "https://willcrichton.net/notes/k-corrset/"
    },
    {
        "auto_descr": "Nikolai Vazquez is a software engineer, designer, and musician.",
        "crea_time": "2024-08-29T17:53:14.376795916+02:00",
        "crea_user": "api",
        "host": "nikolaivazquez.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:14.376795916+02:00",
        "modi_user": "api",
        "path": "/blog/divan/",
        "scheme": "https",
        "title": "Divan: Fast and Simple Benchmarking for Rust · Nikolai Vazquez",
        "uri_uuid": "6389cb8df8c689ebbc2ca4c74f4a63b8e9bfcf43673d198e1e7cf64cb77e1508",
        "url": "https://nikolaivazquez.com/blog/divan/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:15.263823017+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:15.263823017+02:00",
        "modi_user": "api",
        "path": "/crates/simd-json",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "95227603a1153745d7b8cc4c0595f643ed55c77bba1b7017e463b4be5eaebe2c",
        "url": "https://crates.io/crates/simd-json"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:15.518724996+02:00",
        "crea_user": "api",
        "host": "marabos.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:15.518724996+02:00",
        "modi_user": "api",
        "path": "/atomics/basics.html",
        "scheme": "https",
        "title": "Rust Atomics and Locks — Chapter 1. Basics of Rust Concurrency",
        "uri_uuid": "7d3ec61dae8581fa59d81e650de2f376c35907534e1ddc86152357d56a008858",
        "url": "https://marabos.nl/atomics/basics.html#undefined-behavior"
    },
    {
        "auto_descr": "A recap of EuroRust 2023 and thoughts on Rust",
        "crea_time": "2024-08-29T17:53:15.807010397+02:00",
        "crea_user": "api",
        "host": "lucumr.pocoo.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:15.807010397+02:00",
        "modi_user": "api",
        "path": "/2023/10/14/eurorust-whats-a-conference/",
        "scheme": "https",
        "title": "EuroRust 2023 Reflections: What's a Conference For? | Armin Ronacher's Thoughts and Writings",
        "uri_uuid": "1c54667ec92d67e3fab3d27ab5a9b5a789813d1cbbe237c0604640c854a9e5e3",
        "url": "https://lucumr.pocoo.org/2023/10/14/eurorust-whats-a-conference/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:53:15.973470243+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:15.973470243+02:00",
        "modi_user": "api",
        "path": "/2023/10/05/Rust-1.73.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.73.0 | Rust Blog",
        "uri_uuid": "85f6f0aca02f83de0387513dbb4bf4ff7365cd359052462f9c5d5f1f6b9ef768",
        "url": "https://blog.rust-lang.org/2023/10/05/Rust-1.73.0.html"
    },
    {
        "auto_descr": "Rust 1.73.0 has been released! Want to get started with Rust? Take my crash course: https://agileperception.com/ultimate_rust_crash_courseLinks:- Rust 1.73.0...",
        "crea_time": "2024-08-29T17:53:16.223118759+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:16.223118759+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust 1.73.0: Everything Revealed in 16 Minutes - YouTube",
        "uri_uuid": "4749dbbdd16803baadde9080759014212d66cf2dd62d52e3c5d0693d7a8a93cb",
        "url": "https://www.youtube.com/watch?v=xXdfLNIHkPk"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:53:17.022383436+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:17.022383436+02:00",
        "modi_user": "api",
        "path": "/inside-rust/2023/10/06/polonius-update.html",
        "scheme": "https",
        "title": "Polonius update | Inside Rust Blog",
        "uri_uuid": "ee50a8f6d55f4e0631f770d1926400778c1cbe976bd59d1c2b730cbfa34ad83b",
        "url": "https://blog.rust-lang.org/inside-rust/2023/10/06/polonius-update.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:17.275460139+02:00",
        "crea_user": "api",
        "host": "de.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:17.275460139+02:00",
        "modi_user": "api",
        "path": "/wiki/G%C3%BCnter_Freiherr_von_Gravenreuth",
        "scheme": "https",
        "title": "Günter Freiherr von Gravenreuth – Wikipedia",
        "uri_uuid": "7328cdcf04ce0e39be2a41c9a742ce0ea759bb5e0e925e662f8df271d10cc29b",
        "url": "https://de.wikipedia.org/wiki/G%C3%BCnter_Freiherr_von_Gravenreuth"
    },
    {
        "auto_descr": "`show-image` is a library for quickly displaying images. It is intended as a debugging aid for writing image processing code. The library is not intended for making full-featured GUIs, but you can process keyboard events from the created windows.",
        "crea_time": "2024-08-29T17:53:17.554617180+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:17.554617180+02:00",
        "modi_user": "api",
        "path": "/show-image/latest/show_image/index.html",
        "scheme": "https",
        "title": "show_image - Rust",
        "uri_uuid": "449653df1fbd674b185f575e0e7310d774c89bb99d9d0a8a2cb8e22717f272fe",
        "url": "https://docs.rs/show-image/latest/show_image/index.html"
    },
    {
        "auto_descr": "Contemporary C++ in Action - Daniela Engert - Center Keynote Meeting C++ 2022Slides: https://slides.meetingcpp.comSurvey: https://survey.meetingcpp.comThis k...",
        "crea_time": "2024-08-29T17:53:17.804954845+02:00",
        "crea_user": "api",
        "host": "m.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:17.804954845+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Contemporary C++ in Action - Daniela Engert - Center Keynote Meeting C++ 2022 - YouTube",
        "uri_uuid": "72baaf8989397b568b2a635f071555c3553a9bfe082d5c49063601bb8b30f93e",
        "url": "https://m.youtube.com/watch?v=el-xE645Clo"
    },
    {
        "auto_descr": "A discussion of pure Rust crates and what crates I would like to see",
        "crea_time": "2024-08-29T17:53:18.497998744+02:00",
        "crea_user": "api",
        "host": "gburghoorn.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:18.497998744+02:00",
        "modi_user": "api",
        "path": "/posts/pure-rust-wishlist/",
        "scheme": "https",
        "title": "My Pure Rust Wishlist - GBurghoorn",
        "uri_uuid": "699e4d0fa9b4ed287c8e7822d056ee2e5e73384baa74191c4445a160a54426cb",
        "url": "https://gburghoorn.com/posts/pure-rust-wishlist/"
    },
    {
        "auto_descr": "In the eternal quest to rewrite everything in Rust, even the C standard library isn’t safe from carcinisation.",
        "crea_time": "2024-08-29T17:53:18.698607510+02:00",
        "crea_user": "api",
        "host": "notgull.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:18.698607510+02:00",
        "modi_user": "api",
        "path": "/eyra/",
        "scheme": "https",
        "title": "Eyra is an interesting Rust project – notgull – The world's number one source of notgull",
        "uri_uuid": "972e1f58c473727df82b24e3dc06bf4fc04417444a1857c8b1c376b0763dadd4",
        "url": "https://notgull.net/eyra/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:53:19.307581587+02:00",
        "crea_user": "api",
        "host": "redbadger.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:19.307581587+02:00",
        "modi_user": "api",
        "path": "/crux/",
        "scheme": "https",
        "title": "Overview - Crux: Cross-platform app development in Rust",
        "uri_uuid": "9ffa13716835606d29bf18b085b1dc990d9d3a71a3e239fa7d61acac29882d34",
        "url": "https://redbadger.github.io/crux/"
    },
    {
        "auto_descr": "Let's take a look at the new Rust IDE by JetBrains.  I'll compare it to the other editors and IDEs like VSCode, Fleet and the existing IntelliJ Rust plugin. ...",
        "crea_time": "2024-08-29T17:53:19.549594941+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:19.549594941+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "The ultimate Rust IDE is here - YouTube",
        "uri_uuid": "450eaa0bfbeb9aebe488f40ff09a8c696cddbee016b78b05fb6fe97a76e7aa4c",
        "url": "https://www.youtube.com/watch?v=sZaAP4AS0hc"
    },
    {
        "auto_descr": "What it's like in-person",
        "crea_time": "2024-08-29T17:53:20.313831816+02:00",
        "crea_user": "api",
        "host": "blog.adamchalmers.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:20.313831816+02:00",
        "modi_user": "api",
        "path": "/rustconf-2023-recap/",
        "scheme": "https",
        "title": "Rustconf 2023 recap",
        "uri_uuid": "d017e856570ac987a79da1aa16bd147aa5d14e083fdac559c46a68594648c6c4",
        "url": "https://blog.adamchalmers.com/rustconf-2023-recap/"
    },
    {
        "auto_descr": "Kani Rust Verifier. Contribute to model-checking/kani development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:53:21.008934633+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:21.008934633+02:00",
        "modi_user": "api",
        "path": "/model-checking/kani",
        "scheme": "https",
        "title": "GitHub - model-checking/kani: Kani Rust Verifier",
        "uri_uuid": "95403922368abd78b13ebb30ff7ee6f866c50d8e7b07ad1ea72ec1b0bb34e1a0",
        "url": "https://github.com/model-checking/kani"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:22.477985508+02:00",
        "crea_user": "api",
        "host": "i.giphy.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:22.477985508+02:00",
        "modi_user": "api",
        "path": "/media/3KC2jD2QcBOSc/giphy.gif",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "262cf4c3493cf8fdcfe25f61c39488e916829fbb482e07f0475cd64bdfad0167",
        "url": "https://i.giphy.com/media/3KC2jD2QcBOSc/giphy.gif"
    },
    {
        "auto_descr": "Source code of Ferrocene, safety-critical Rust toolchain - ferrocene/ferrocene",
        "crea_time": "2024-08-29T17:53:24.821289791+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:24.821289791+02:00",
        "modi_user": "api",
        "path": "/ferrocene/ferrocene",
        "scheme": "https",
        "title": "GitHub - ferrocene/ferrocene: Source code of Ferrocene, safety-critical Rust toolchain",
        "uri_uuid": "4b01d0428d605c1b70b19ec139ceea0b0eb1ca0922024bb76156561d22238e24",
        "url": "https://github.com/ferrocene/ferrocene"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T17:53:25.628642175+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:25.628642175+02:00",
        "modi_user": "api",
        "path": "/Rust-Berlin/events/213884832/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "adef7f98210c8731562edc60ba89cf74122c241b881fd36d4e1303d7bafa3686",
        "url": "https://www.meetup.com/Rust-Berlin/events/213884832/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:26.985324180+02:00",
        "crea_user": "api",
        "host": "chatcontrol.dearmep.eu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:26.985324180+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "DearMEP Demo",
        "uri_uuid": "822762faa8e885668413eb3a902531b0a13d5d9e1fdeae3656525d97ab8e0695",
        "url": "https://chatcontrol.dearmep.eu/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:27.149635335+02:00",
        "crea_user": "api",
        "host": "chatcontrol.dk",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:27.149635335+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "redirecting",
        "uri_uuid": "440ce2374fdd7fbc6d85f3e96fdf2fde5524756e54a5370b3fe32908ed7c8999",
        "url": "https://chatcontrol.dk/"
    },
    {
        "auto_descr": "Integer overflow/underflows are surprisingly common in smart contracts, because blockchain applications often compute math over financial data. Rust is a popular language used in blockchains such as…",
        "crea_time": "2024-08-29T17:53:27.269939606+02:00",
        "crea_user": "api",
        "host": "medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:27.269939606+02:00",
        "modi_user": "api",
        "path": "/coinmonks/understanding-arithmetic-overflow-underflows-in-rust-and-solana-smart-contracts-9f3c9802dc45",
        "scheme": "https",
        "title": "Understanding arithmetic overflow/underflows in Rust and Solana smart contracts | by sec3 (formerly Soteria) | Coinmonks | Medium",
        "uri_uuid": "4a8f571f5b4a4e6d635c0ee83999d806167a2d7627549fecd47286fbc16fe3ca",
        "url": "https://medium.com/coinmonks/understanding-arithmetic-overflow-underflows-in-rust-and-solana-smart-contracts-9f3c9802dc45"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:28.349304054+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:28.349304054+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "Myths about Integer Overflow in Rust | Hacker News",
        "uri_uuid": "8acc8a12d2e83ae8db171a4db24b9cf416e354cda4f4cf0d6c1477fb1b24ddf0",
        "url": "https://news.ycombinator.com/item?id=11595398"
    },
    {
        "auto_descr": "API documentation for the Rust `u8` primitive in crate `std`.",
        "crea_time": "2024-08-29T17:53:30.060542812+02:00",
        "crea_user": "api",
        "host": "web.mit.edu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:30.060542812+02:00",
        "modi_user": "api",
        "path": "/rust-lang_v1.25/arch/amd64_ubuntu1404/share/doc/rust/html/std/primitive.u8.html",
        "scheme": "https",
        "title": "u8 - Rust",
        "uri_uuid": "f30d5cba349b3f22778b6c4057c984d005dc7756792da9582f3020b40dad822c",
        "url": "https://web.mit.edu/rust-lang_v1.25/arch/amd64_ubuntu1404/share/doc/rust/html/std/primitive.u8.html#method.overflowing_add"
    },
    {
        "auto_descr": "A handle to the standard output stream of a process.",
        "crea_time": "2024-08-29T17:53:30.972134499+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:30.972134499+02:00",
        "modi_user": "api",
        "path": "/tokio/latest/tokio/io/struct.Stdout.html",
        "scheme": "https",
        "title": "Stdout in tokio::io - Rust",
        "uri_uuid": "5644879bca5538decdffd4b684ebb38b2d0d9f199728eca85142556f286f1866",
        "url": "https://docs.rs/tokio/latest/tokio/io/struct.Stdout.html#examples"
    },
    {
        "auto_descr": "Rust lets you do efficient reference-counted strings and dynamic arrays using Arc basically just as easily as their owning (and deep-cloning) equivalents, St...",
        "crea_time": "2024-08-29T17:53:31.264025077+02:00",
        "crea_user": "api",
        "host": "m.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:31.264025077+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Use Arc Instead of Vec - YouTube",
        "uri_uuid": "17c6d726a1342bd985c4a49ee98f4c8fd18760f30df5ad5913fa96b3b7036a91",
        "url": "https://m.youtube.com/watch?v=A4cKi7PTJSs"
    },
    {
        "auto_descr": "Today we are diving into the surprisingly complicated world of strings. Not only will we learn about the fundamental data structures behind strings, but we'l...",
        "crea_time": "2024-08-29T17:53:32.013175347+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:32.013175347+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "All Rust string types explained - YouTube",
        "uri_uuid": "0adac7540dd53dcb4dac4e2f1aef2c8f6e59d2a469b804d1ce4655f18e4b3032",
        "url": "https://www.youtube.com/watch?v=CpvzeyzgQdw"
    },
    {
        "auto_descr": "The current validator crate provides built-in validators for various use cases, but it lacks a validator for checking the length of a string based on its UTF-16 code units. This feature request proposes the addition of a UTF-16 code unit...",
        "crea_time": "2024-08-29T17:53:32.743856528+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:32.743856528+02:00",
        "modi_user": "api",
        "path": "/Keats/validator/issues/250",
        "scheme": "https",
        "title": "Feature request: Consider an UTF-16 code units length validator · Issue #250 · Keats/validator · GitHub",
        "uri_uuid": "5bd1842abacde3f637f984baa07555241faca300ad8c6234046d3e6d45310c6c",
        "url": "https://github.com/Keats/validator/issues/250#issuecomment-1511848163"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:34.276664418+02:00",
        "crea_user": "api",
        "host": "arxiv.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:34.276664418+02:00",
        "modi_user": "api",
        "path": "/pdf/2309.06640.pdf",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d3ce967f693c31cc1560c28e9e328a6a7280eca77e1752126da1295c68310174",
        "url": "https://arxiv.org/pdf/2309.06640.pdf"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:35.593005922+02:00",
        "crea_user": "api",
        "host": "trent.kiwi",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:35.593005922+02:00",
        "modi_user": "api",
        "path": "/bevy-three-years",
        "scheme": "https",
        "title": "Three years of Bevy",
        "uri_uuid": "343a6fc3852737ae0a12e1533f7d918946991ad88096f91272a2d8df1cef0939",
        "url": "https://trent.kiwi/bevy-three-years"
    },
    {
        "auto_descr": "Ah, the firsts in life! Your first bike, first crush, first taste of a bizarre foreign delicacy, and… your first programming language? Okay, maybe that last one doesn’t send shivers of nostalgia down…",
        "crea_time": "2024-08-29T17:53:36.079983538+02:00",
        "crea_user": "api",
        "host": "medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:36.079983538+02:00",
        "modi_user": "api",
        "path": "/@otukof/breaking-tradition-why-rust-might-be-your-best-first-language-d10afc482ac1",
        "scheme": "https",
        "title": "Breaking Tradition: Why Rust Might Be Your Best First Language | by Kofi Otuo | Stackademic",
        "uri_uuid": "d6c72a8fe3b682f1bcf329fe471636bd9759c3600c9c8eb97a268baa0fdfa5d3",
        "url": "https://medium.com/@otukof/breaking-tradition-why-rust-might-be-your-best-first-language-d10afc482ac1"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:37.594801314+02:00",
        "crea_user": "api",
        "host": "kerkour.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:37.594801314+02:00",
        "modi_user": "api",
        "path": "/should-i-rust-or-should-i-go",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b1bbbe4afd45c272033907c47e6d872b28171c1ca36e407aff2ef3ceefcf45c6",
        "url": "https://kerkour.com/should-i-rust-or-should-i-go"
    },
    {
        "auto_descr": "Recently, I found myself returning to a compelling series of blog posts titled\nZero-cost futures in Rust\nby Aaron Turon about what would become the foundation of Rust's async ecosyste…",
        "crea_time": "2024-08-29T17:53:37.987265358+02:00",
        "crea_user": "api",
        "host": "corrode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:37.987265358+02:00",
        "modi_user": "api",
        "path": "/blog/async/",
        "scheme": "https",
        "title": "The State of Async Rust: Runtimes | corrode Rust Consulting",
        "uri_uuid": "91b49d30b69944e2eaf4a527857bbe96f71c6a47aa8d0eebdcce72d1c9072b0e",
        "url": "https://corrode.dev/blog/async/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:38.318491228+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:38.318491228+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2023/09/18/stability-without-stressing-the-out/",
        "scheme": "https",
        "title": "Stability without stressing the !@#! out · baby steps",
        "uri_uuid": "35ddc92b1c2081962750f3439f29b32b11134fc211b201719050a57a89371993",
        "url": "https://smallcultfollowing.com/babysteps/blog/2023/09/18/stability-without-stressing-the-out/"
    },
    {
        "auto_descr": "Wasmer is the leading WebAssembly runtime enabling super lightweight containers to run anywhere from the Edge to the Cloud. Perfect for developers looking to deploy applications across various environments with speed and efficiency. Join the future of software deployment and execution with Wasmer",
        "crea_time": "2024-08-29T17:53:39.276955274+02:00",
        "crea_user": "api",
        "host": "wasmer.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:39.276955274+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Wasmer: The Universal WebAssembly Runtime",
        "uri_uuid": "8e441dc048c86b7c40ea0d8f5c7d06d2c023c78eb0702a0d74a6bf5ae421b3dd",
        "url": "https://wasmer.io/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:39.819446668+02:00",
        "crea_user": "api",
        "host": "bytecodealliance.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:39.819446668+02:00",
        "modi_user": "api",
        "path": "/articles/",
        "scheme": "https",
        "title": "Bytecode Alliance",
        "uri_uuid": "dbaa1d56fffdc990a357dddfca5481dba1f9538a1cbe2827ef7f00b47d98fbb1",
        "url": "https://bytecodealliance.org/articles/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:40.116640414+02:00",
        "crea_user": "api",
        "host": "briansmith.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:40.116640414+02:00",
        "modi_user": "api",
        "path": "/lets-build-a-fips-rust-crypto",
        "scheme": "https",
        "title": "Let's Build a FIPS-validated Rust Crypto Library",
        "uri_uuid": "eaf2e761999e036f8464b68f7b8a9ee6d628d98505777f0062c430aa86e45e23",
        "url": "https://briansmith.org/lets-build-a-fips-rust-crypto"
    },
    {
        "auto_descr": "Found Rust crates: fasta-stats, noodles-fasta, fasta_split, seq_io, needletail, gfatk, fasta, fakit, kseq, faimm, etc.",
        "crea_time": "2024-08-29T17:53:40.616920930+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:40.616920930+02:00",
        "modi_user": "api",
        "path": "/search",
        "scheme": "https",
        "title": "‘fasta’ search // Lib.rs",
        "uri_uuid": "ccadcbc02d3b965e1ea0071cd73312012168753189e4de1c1dba43c21df9b7b9",
        "url": "https://lib.rs/search?q=fasta"
    },
    {
        "auto_descr": "String slices.",
        "crea_time": "2024-08-29T17:53:41.317282405+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:41.317282405+02:00",
        "modi_user": "api",
        "path": "/std/primitive.str.html",
        "scheme": "https",
        "title": "str - Rust",
        "uri_uuid": "52301879914006b350851d6a5d001a9c85d726b7bef06149e258178d81acb5ba",
        "url": "https://doc.rust-lang.org/std/primitive.str.html#method.trim_matches"
    },
    {
        "auto_descr": "String slices.",
        "crea_time": "2024-08-29T17:53:41.987958903+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:41.987958903+02:00",
        "modi_user": "api",
        "path": "/std/primitive.str.html",
        "scheme": "https",
        "title": "str - Rust",
        "uri_uuid": "b62d87e24a013ee31ca1b36da7261df56176c2b941d1244151460f418e071a65",
        "url": "https://doc.rust-lang.org/std/primitive.str.html#method.trim_end_matches"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:53:42.771740807+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:42.771740807+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "b22b4269085cd1aa6158494373eb7a90bd7f94561397a067a9d1db9233018ebf",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=7d8b0e3a27d9e648f59e988cdcd4b4bc"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:53:42.876079295+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:42.876079295+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "863f33c9e2bbc3bc29550c363cd529ede622d70559fc48bc323a5eecc5bd3ee8",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=803a12557c2d817a863387282b7256db"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:53:43.004079213+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:43.004079213+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "27bc2b2f8f966cc56ac62b28cbf29c0cd33da64a6f3757d59dc893df3f935177",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=bf8082ded62986752457ebf1df4fcbc3"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:53:43.120586068+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:43.120586068+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "ed7e2b0d6086b0a3973ec5bac9ffd370c0686bcabf7e59dce53530fc251d089c",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=517cde93496344237f85b67cb98d7bec"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:43.224650182+02:00",
        "crea_user": "api",
        "host": "blog.phylum.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:43.224650182+02:00",
        "modi_user": "api",
        "path": "/rust-malware-staged-on-crates-io/",
        "scheme": "https",
        "title": "Rust Malware Staged on Crates.io",
        "uri_uuid": "38992fd9183da4990eadf4cbe6e9db07c784e0d2ac3ebcfc7749eed87d14914f",
        "url": "https://blog.phylum.io/rust-malware-staged-on-crates-io/"
    },
    {
        "auto_descr": "Rust is maturing and every year more software is being made with it. In fact, Rust can be used as a competitor to C. In this article I will argue that this is now also the case for embedded Rust!",
        "crea_time": "2024-08-29T17:53:43.408974737+02:00",
        "crea_user": "api",
        "host": "tweedegolf.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:43.408974737+02:00",
        "modi_user": "api",
        "path": "/en/blog/101/are-we-embedded-yet",
        "scheme": "https",
        "title": "Tweede golf",
        "uri_uuid": "90c80cdd52b74008d6bb1fdd12f272c82d736df407b59472abcfa3f96f460865",
        "url": "https://tweedegolf.nl/en/blog/101/are-we-embedded-yet"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:43.747303514+02:00",
        "crea_user": "api",
        "host": "37.252.189.42",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:43.747303514+02:00",
        "modi_user": "api",
        "path": "/rust_test_api/docs",
        "scheme": "http",
        "title": "-",
        "uri_uuid": "17abf41128ab25f2de96dc9609a65196fe3fb1c2779cf868e6cf91ed77e79388",
        "url": "http://37.252.189.42/rust_test_api/docs"
    },
    {
        "auto_descr": "GitHub repo updated to Axum 0.7 https://github.com/rust10x/rust-web-appIn this episode, we'll dive into some Rust production coding. Starting from where we l...",
        "crea_time": "2024-08-29T17:53:43.843774657+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:43.843774657+02:00",
        "modi_user": "api",
        "path": "/3cA_mk4vdWY",
        "scheme": "https",
        "title": "Rust Axum Production Coding (E01 - Rust Web App Production Coding) - YouTube",
        "uri_uuid": "7211a51985ac691ae7ac8595154c93a9058f3c299a178285e0d31a320102d802",
        "url": "https://youtu.be/3cA_mk4vdWY"
    },
    {
        "auto_descr": "Mit Version 1.2 erweitert Slint, das schlanke Toolkit für fensterbasierte GUIs, seine Fähigkeit bei der Entwicklung anwenderfreundlicher, eingebetteter Systeme.",
        "crea_time": "2024-08-29T17:53:44.823235299+02:00",
        "crea_user": "api",
        "host": "www.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:44.823235299+02:00",
        "modi_user": "api",
        "path": "/news/Schlanke-flexible-GUIs-fuer-den-Embedded-Bereich-mit-Slint-1-2-9295604.html",
        "scheme": "https",
        "title": "\n    Mit 300 KByte zur Embedded-GUI: Slint 1.2 ist da | heise online\n",
        "uri_uuid": "e4b9f35685f89d987f85f1fcf5a3acf757d04711d4541747fee86631f722e3d7",
        "url": "https://www.heise.de/news/Schlanke-flexible-GUIs-fuer-den-Embedded-Bereich-mit-Slint-1-2-9295604.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:45.091148274+02:00",
        "crea_user": "api",
        "host": "old.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:45.091148274+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/16g38gp/what_are_your_favorite_simple_open_source_tools/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "888530144ec128470c13cab1e3ba6338f205816b6c00789ab1c907b9b7e4cb6b",
        "url": "https://old.reddit.com/r/rust/comments/16g38gp/what_are_your_favorite_simple_open_source_tools/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:45.229173177+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:45.229173177+02:00",
        "modi_user": "api",
        "path": "/wiki/Moore_method",
        "scheme": "https",
        "title": "Moore method - Wikipedia",
        "uri_uuid": "c02e50df7bc2930ffee716f51649a65e4eb87f84f1ffb3ca95803681f7490ef6",
        "url": "https://en.wikipedia.org/wiki/Moore_method"
    },
    {
        "auto_descr": "Shining polarized light into sugar water reveals diagonal stripes of color. Why?Next video: https://youtu.be/aXRTczANuIsSteve Mould's video on the topic: htt...",
        "crea_time": "2024-08-29T17:53:45.467387496+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:45.467387496+02:00",
        "modi_user": "api",
        "path": "/QCX62YJCmGk",
        "scheme": "https",
        "title": "Polarized light in sugar water | Optics puzzles 1 - YouTube",
        "uri_uuid": "a6129d536bbfb319fb79b77161ec923daa7e0a7d0e8cefc8facf8ec88a645e6b",
        "url": "https://youtu.be/QCX62YJCmGk?si=FwHkSHlICarA8f65"
    },
    {
        "auto_descr": "Marco Otte-Witte explains why Mainmatter believes Rust has a bright future for web backend development.",
        "crea_time": "2024-08-29T17:53:46.458612869+02:00",
        "crea_user": "api",
        "host": "mainmatter.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:46.458612869+02:00",
        "modi_user": "api",
        "path": "/blog/2023/08/14/the-case-for-rust-on-the-web/",
        "scheme": "https",
        "title": "The Case for Rust on the Web | Mainmatter",
        "uri_uuid": "bffa8fab210a973e62518b947c5d363f8b0f2a441006a2df62105d28ce913d76",
        "url": "https://mainmatter.com/blog/2023/08/14/the-case-for-rust-on-the-web/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:47.117299770+02:00",
        "crea_user": "api",
        "host": "cheats.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:47.117299770+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Language Cheat Sheet",
        "uri_uuid": "64b09a9055b929a33de083646d31a9347a3bf856a9cd328fbd5fe3997a72b55a",
        "url": "https://cheats.rs/"
    },
    {
        "auto_descr": "In order to increase fluency in a programming language, one has to read a lot of\nit. But how can you read a lot of it if you don't know what it means? In this article, inst...",
        "crea_time": "2024-08-29T17:53:48.507183348+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:48.507183348+02:00",
        "modi_user": "api",
        "path": "/articles/a-half-hour-to-learn-rust",
        "scheme": "https",
        "title": "\n        \n        A half-hour to learn Rust\n        \n    ",
        "uri_uuid": "553d85ae5db2d26225e9c336eaa6b3c02263d933d4b76af6e15b55ff9ff760b5",
        "url": "https://fasterthanli.me/articles/a-half-hour-to-learn-rust"
    },
    {
        "auto_descr": "MarcoIeni's blog - programming, linux, and everything",
        "crea_time": "2024-08-29T17:53:48.902986070+02:00",
        "crea_user": "api",
        "host": "www.marcoieni.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:48.902986070+02:00",
        "modi_user": "api",
        "path": "/2023/08/rustship-a-new-rust-podcast/",
        "scheme": "https",
        "title": "RustShip: a new Rust podcast • Marco Ieni",
        "uri_uuid": "66c5555932db6e28515e5aa832be6a9c2411ac15914a28e333be1dc4265580b3",
        "url": "https://www.marcoieni.com/2023/08/rustship-a-new-rust-podcast/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:53:49.516392110+02:00",
        "crea_user": "api",
        "host": "learnxinyminutes.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:49.516392110+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Learn X in Y Minutes: Scenic Programming Language Tours",
        "uri_uuid": "e4b5d2ca2c88bdf2c5f610719e690b06f68531fd0f1c697ff5b3e878b80ca3b3",
        "url": "https://learnxinyminutes.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:53:49.856027202+02:00",
        "crea_user": "api",
        "host": "ffmpeg.lav.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:49.856027202+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "FFmpeg Explorer!",
        "uri_uuid": "b80bd3faadf2cbe6d659c26272b0184542a35393a8c8338ab7d98b6a1b3bc865",
        "url": "https://ffmpeg.lav.io/"
    },
    {
        "auto_descr": "Fixes #114949.\nReduced the loops to 1k iterations (100k was taking way too long), Miri no longer shows any UB.\n@rustbot label +A-process +C-bug +I-unsound +O-unix",
        "crea_time": "2024-08-29T17:53:50.529009342+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:50.529009342+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/114968",
        "scheme": "https",
        "title": "Fix UB in `std::sys::os::getenv()` by ShE3py · Pull Request #114968 · rust-lang/rust · GitHub",
        "uri_uuid": "0dc8928dc19abb4678a2c22b88ea5c2aed3c8fba9560b247f8f2e7710bba0047",
        "url": "https://github.com/rust-lang/rust/pull/114968"
    },
    {
        "auto_descr": "Tracking issue:  #87155.\nThis is inherited from the old PR  #82413.\nUnlike #82413, this PR implements the MapWindows to be lazy: only when pulling from the outer iterator, .next() of the inner iter...",
        "crea_time": "2024-08-29T17:53:52.175252607+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:52.175252607+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/94667",
        "scheme": "https",
        "title": "Add `Iterator::map_windows` by frank-king · Pull Request #94667 · rust-lang/rust · GitHub",
        "uri_uuid": "c077a86f565b34b66cafcf7d30db2f0c2c881282b4916baf1bbf7fc0135c7cc5",
        "url": "https://github.com/rust-lang/rust/pull/94667"
    },
    {
        "auto_descr": "Display actual vars instead of two dots.\nThe same was done for Args and ArgsOs in 275f9a0.",
        "crea_time": "2024-08-29T17:53:53.802177813+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:53.802177813+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/114132",
        "scheme": "https",
        "title": "Better Debug for Vars and VarsOs by tamird · Pull Request #114132 · rust-lang/rust · GitHub",
        "uri_uuid": "626035c66ca6b3535a7ac8b493b312434a3f94ea873eee08b78b46ea7944d34f",
        "url": "https://github.com/rust-lang/rust/pull/114132"
    },
    {
        "auto_descr": "Note: See #112849 (comment) for the snippet for the Rust 1.73 release blog post.\n\nThis PR finishes refactoring of the assert messages per #94005. The panic message format change #112849 used to be ...",
        "crea_time": "2024-08-29T17:53:55.502000946+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:55.502000946+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/111071",
        "scheme": "https",
        "title": "Cleaner assert_eq! & assert_ne! panic messages by nyurik · Pull Request #111071 · rust-lang/rust · GitHub",
        "uri_uuid": "36774a15b1002b39ace535b8b5d131bffcd2bebcb16379b39682b0f988fdecd7",
        "url": "https://github.com/rust-lang/rust/pull/111071"
    },
    {
        "auto_descr": "After coming across issue #66780, I realized that the other functions provided by Ord (min, max, and clamp) were similarly inefficient for bool. This change provides implementations for them in ter...",
        "crea_time": "2024-08-29T17:53:57.413259781+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:57.413259781+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/114721",
        "scheme": "https",
        "title": "Optimizing the rest of bool's Ord implementation by danflapjax · Pull Request #114721 · rust-lang/rust · GitHub",
        "uri_uuid": "1547ce0c6794901a1f01c39713a227998f69c1331e6c9eb4dcd49d00af004410",
        "url": "https://github.com/rust-lang/rust/pull/114721"
    },
    {
        "auto_descr": "We know consumer electronics can be better for you and for the environment. Unlike most products, ours are open for you to repair and upgrade",
        "crea_time": "2024-08-29T17:53:58.834830592+02:00",
        "crea_user": "api",
        "host": "frame.work",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:58.834830592+02:00",
        "modi_user": "api",
        "path": "/de/en/products/laptop16-diy-amd-7040",
        "scheme": "https",
        "title": "Framework | Fix Consumer Electronics",
        "uri_uuid": "8df41a9b3fcfc27ef958eab9b3ae64e03fa139bdf57bd090068fd991b5455711",
        "url": "https://frame.work/de/en/products/laptop16-diy-amd-7040"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:53:59.587362057+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:59.587362057+02:00",
        "modi_user": "api",
        "path": "/2023/08/24/Rust-1.72.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.72.0 | Rust Blog",
        "uri_uuid": "316ba135bfa7b09de30ff11e636f875529e25038adda02bd3251613019e81abc",
        "url": "https://blog.rust-lang.org/2023/08/24/Rust-1.72.0.html#future-windows-compatibility"
    },
    {
        "auto_descr": "Today it's just sub https://rust.godbolt.org/z/8EzEPnMr5; with this PR it's sub nsw.",
        "crea_time": "2024-08-29T17:53:59.826847555+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:53:59.826847555+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/114720",
        "scheme": "https",
        "title": "Tell LLVM that the negation in `<*const T>::sub` cannot overflow by scottmcm · Pull Request #114720 · rust-lang/rust · GitHub",
        "uri_uuid": "ad6a8cf455a20e4982066bc866933b0487e6b1741a587cdde6fdf9ed6b172bcc",
        "url": "https://github.com/rust-lang/rust/pull/114720"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:01.452966174+02:00",
        "crea_user": "api",
        "host": "serde.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:01.452966174+02:00",
        "modi_user": "api",
        "path": "/field-attrs.html",
        "scheme": "https",
        "title": "Field attributes · Serde",
        "uri_uuid": "0821102e43b3a9695794a5444c81319b7c1f3fb6beff5521c6d34e2dba16ed7f",
        "url": "https://serde.rs/field-attrs.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:01.985294728+02:00",
        "crea_user": "api",
        "host": "serde.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:01.985294728+02:00",
        "modi_user": "api",
        "path": "/container-attrs.html",
        "scheme": "https",
        "title": "Container attributes · Serde",
        "uri_uuid": "68390fc862e9ba0cf06aafb6379d6f34177a9b877a37f0be07cef48ab0b7e01c",
        "url": "https://serde.rs/container-attrs.html"
    },
    {
        "auto_descr": "Diamand Duo. Contribute to dariusgm/didu development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:02.430139485+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:02.430139485+02:00",
        "modi_user": "api",
        "path": "/dariusgm/didu",
        "scheme": "https",
        "title": "GitHub - dariusgm/didu: Diamand Duo",
        "uri_uuid": "52dcd55f4bc09362cd7cfacc86ec1b7c5260da6758fa5cad2d2ed084a04ef99c",
        "url": "https://github.com/dariusgm/didu"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:03.500872590+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:03.500872590+02:00",
        "modi_user": "api",
        "path": "/wiki/NetHack",
        "scheme": "https",
        "title": "NetHack - Wikipedia",
        "uri_uuid": "023b971e99cf2ef9c8273964f0df861c48c4093d8c327dc48fe973df6d8d7e20",
        "url": "https://en.wikipedia.org/wiki/NetHack"
    },
    {
        "auto_descr": "A parallel downloader to create private backups of embedded vimeo videos, vimeo showcases and vimeo events - showcase-dl/src/ui.rs at main · LeoniePhiline/showcase-dl",
        "crea_time": "2024-08-29T17:54:03.846406833+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:03.846406833+02:00",
        "modi_user": "api",
        "path": "/LeoniePhiline/showcase-dl/blob/main/src/ui.rs",
        "scheme": "https",
        "title": "showcase-dl/src/ui.rs at main · LeoniePhiline/showcase-dl · GitHub",
        "uri_uuid": "5147e8e6663324ec28bfc3a1a9e0cec4b9820a16790f50d6c35be21c34c02ee6",
        "url": "https://github.com/LeoniePhiline/showcase-dl/blob/main/src/ui.rs#L121-L127"
    },
    {
        "auto_descr": "Diamand Duo. Contribute to dariusgm/didu development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:04.557720552+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:04.557720552+02:00",
        "modi_user": "api",
        "path": "/dariusgm/didu",
        "scheme": "https",
        "title": "GitHub - dariusgm/didu: Diamand Duo",
        "uri_uuid": "ba682ded8f12c0e666deee1c095fcf062c61591a54ec2613fd553d30c95bf008",
        "url": "https://github.com/dariusgm/didu#instalation"
    },
    {
        "auto_descr": "Ensure that all your new code is fully covered, and see coverage trends emerge. Works with any CI service. Always free for open source. COVERALLS!",
        "crea_time": "2024-08-29T17:54:04.893851054+02:00",
        "crea_user": "api",
        "host": "coveralls.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:04.893851054+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Coveralls - Test Coverage History & Statistics",
        "uri_uuid": "6caa5f2b270d875610a62b3c9124c3925705698641308a572e404616e076d87d",
        "url": "https://coveralls.io/"
    },
    {
        "auto_descr": "Code coverage reporting solution for any test suite — Codecov gives developers actionable insights to deploy reliable code with confidence.",
        "crea_time": "2024-08-29T17:54:05.597356562+02:00",
        "crea_user": "api",
        "host": "codecov.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:05.597356562+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Codecov - The Leading Code Coverage Solution",
        "uri_uuid": "5feabb3bd78c6938d2fe13d05c7fcb997e003587d277330e3056349daf0b654d",
        "url": "https://codecov.io/"
    },
    {
        "auto_descr": "A code coverage tool for Rust projects. Contribute to xd009642/tarpaulin development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:06.093701128+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:06.093701128+02:00",
        "modi_user": "api",
        "path": "/xd009642/tarpaulin",
        "scheme": "https",
        "title": "GitHub - xd009642/tarpaulin: A code coverage tool for Rust projects",
        "uri_uuid": "fa4b0781644f4d3fa79b4112edab43071a90498fae8c3cfce3ff2282a12060bc",
        "url": "https://github.com/xd009642/tarpaulin#features"
    },
    {
        "auto_descr": "Three months ago I submitted a post to the Rust sub-reddit called Building a better /r/rust together. It quickly rose to the top and garn...",
        "crea_time": "2024-08-29T17:54:06.978933403+02:00",
        "crea_user": "api",
        "host": "blog.erlend.sh",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:06.978933403+02:00",
        "modi_user": "api",
        "path": "/transitioning-r-rust-to-the-threadiverse",
        "scheme": "https",
        "title": "Transitioning /r/rust to the Threadiverse — Open Indie",
        "uri_uuid": "36225fab2c0e884d3208b193ea489eee5ed05833581b46c7eac29fd8a01f934a",
        "url": "https://blog.erlend.sh/transitioning-r-rust-to-the-threadiverse"
    },
    {
        "auto_descr": "A code coverage tool for Rust projects. Contribute to xd009642/tarpaulin development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:07.773457806+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:07.773457806+02:00",
        "modi_user": "api",
        "path": "/xd009642/tarpaulin",
        "scheme": "https",
        "title": "GitHub - xd009642/tarpaulin: A code coverage tool for Rust projects",
        "uri_uuid": "47b08d5b6c34f8bfce7dc428bccdb0eba7a45502593eb7c79108463c5ff77b00",
        "url": "https://github.com/xd009642/tarpaulin#gitlab-pipelines"
    },
    {
        "auto_descr": "HTTP does a pretty good job staying out of everyone's way. If you're reading this article, there's a solid chance it was delivered to you\nover HTTP. Even if you&#...",
        "crea_time": "2024-08-29T17:54:08.145099871+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:08.145099871+02:00",
        "modi_user": "api",
        "path": "/articles/the-http-crash-course-nobody-asked-for",
        "scheme": "https",
        "title": "\n        \n        The HTTP crash course nobody asked for\n        \n    ",
        "uri_uuid": "939d1964cd225378f1a55af9857bbfec299e3d22f050dbda541881ab287c058b",
        "url": "https://fasterthanli.me/articles/the-http-crash-course-nobody-asked-for"
    },
    {
        "auto_descr": "Source of the Rust file `src/lib.rs`.",
        "crea_time": "2024-08-29T17:54:08.626817585+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:08.626817585+02:00",
        "modi_user": "api",
        "path": "/epoll/latest/src/epoll/lib.rs.html",
        "scheme": "https",
        "title": "lib.rs - source",
        "uri_uuid": "91d3cd7ba522735135a0dc29034b1af278117370181fccdc2bc78e6bc488b58a",
        "url": "https://docs.rs/epoll/latest/src/epoll/lib.rs.html#147-156"
    },
    {
        "auto_descr": "Source of the Rust file `library/std/src/sys_common/net.rs`.",
        "crea_time": "2024-08-29T17:54:08.803132459+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:08.803132459+02:00",
        "modi_user": "api",
        "path": "/stable/src/std/sys_common/net.rs.html",
        "scheme": "https",
        "title": "net.rs - source",
        "uri_uuid": "4da0b68feb7282affea06a813712a77c29f1e2f1c4cd968e587253a222bb1999",
        "url": "https://doc.rust-lang.org/stable/src/std/sys_common/net.rs.html#288-294"
    },
    {
        "auto_descr": "A parallel downloader to create private backups of embedded vimeo videos, vimeo showcases and vimeo events - showcase-dl/src/ui.rs at main · LeoniePhiline/showcase-dl",
        "crea_time": "2024-08-29T17:54:09.110404436+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:09.110404436+02:00",
        "modi_user": "api",
        "path": "/LeoniePhiline/showcase-dl/blob/main/src/ui.rs",
        "scheme": "https",
        "title": "showcase-dl/src/ui.rs at main · LeoniePhiline/showcase-dl · GitHub",
        "uri_uuid": "c10793f353eb445e01e07cdb55c75851ca2f2ffead7c6f6b64310e4053bef9e2",
        "url": "https://github.com/LeoniePhiline/showcase-dl/blob/main/src/ui.rs#L74-L94"
    },
    {
        "auto_descr": "Tokio is a runtime for writing reliable asynchronous applications with Rust. It provides async I/O, networking, scheduling, timers, and more.",
        "crea_time": "2024-08-29T17:54:09.374591923+02:00",
        "crea_user": "api",
        "host": "tokio.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:09.374591923+02:00",
        "modi_user": "api",
        "path": "/tokio/tutorial/select",
        "scheme": "https",
        "title": "Select | Tokio - An asynchronous Rust runtime",
        "uri_uuid": "ab392091531a7ce4d08402faf58d80efb7d6e7ba89c1e938247b5e4c6042b983",
        "url": "https://tokio.rs/tokio/tutorial/select"
    },
    {
        "auto_descr": "Tokio is a runtime for writing reliable asynchronous applications with Rust. It provides async I/O, networking, scheduling, timers, and more.",
        "crea_time": "2024-08-29T17:54:09.885054493+02:00",
        "crea_user": "api",
        "host": "tokio.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:09.885054493+02:00",
        "modi_user": "api",
        "path": "/tokio/tutorial/select",
        "scheme": "https",
        "title": "Select | Tokio - An asynchronous Rust runtime",
        "uri_uuid": "96ace963c84e3bbc39ff3023c47a91de0d4bb777f9ca900d82770de9f0231849",
        "url": "https://tokio.rs/tokio/tutorial/select#pattern-matching"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:10.227078427+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:10.227078427+02:00",
        "modi_user": "api",
        "path": "/wiki/Woodblock_(instrument)",
        "scheme": "https",
        "title": "Woodblock (instrument) - Wikipedia",
        "uri_uuid": "1b01b0ee54dc3beeae812053ef481ae6694c34a9460985d0e78676c11cf7c9b3",
        "url": "https://en.wikipedia.org/wiki/Woodblock_(instrument)"
    },
    {
        "auto_descr": "Infos, news, links and more",
        "crea_time": "2024-08-29T17:54:10.467976457+02:00",
        "crea_user": "api",
        "host": "events.ccc.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:10.467976457+02:00",
        "modi_user": "api",
        "path": "/camp/2023/infos/index.html",
        "scheme": "https",
        "title": "Chaos Communication Camp 2023",
        "uri_uuid": "30fa8026742f6e3da302bf380cc80f94ce45457b448f7bd353545f00f7af1329",
        "url": "https://events.ccc.de/camp/2023/infos/index.html"
    },
    {
        "auto_descr": "Go from SQL queries to web applications in an instant.",
        "crea_time": "2024-08-29T17:54:10.630322307+02:00",
        "crea_user": "api",
        "host": "sql.ophir.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:10.630322307+02:00",
        "modi_user": "api",
        "path": "/blog.sql",
        "scheme": "https",
        "title": "SQLPage: SQL to web pages",
        "uri_uuid": "f291a839d24aa1d710603d6f5fd54c5d8cd21c64b92983ec1bccc2d41eb8ccd8",
        "url": "https://sql.ophir.dev/blog.sql?post=I%E2%80%99m+sorry+I+forked+you"
    },
    {
        "auto_descr": "AtomicBool is defined to have the same layout as bool, which means that we guarantee that it has a size of 1 byte. However on certain architectures such as RISC-V, LLVM will emulate byte atomics us...",
        "crea_time": "2024-08-29T17:54:11.645283031+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:11.645283031+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/114034",
        "scheme": "https",
        "title": "Optimize `AtomicBool` for target that don't support byte-sized atomics by Amanieu · Pull Request #114034 · rust-lang/rust · GitHub",
        "uri_uuid": "e34182022645af75bd946a8556ac1f81c76f4e068e033d1a157f150a7090b00b",
        "url": "https://github.com/rust-lang/rust/pull/114034"
    },
    {
        "auto_descr": "An extension to the `include_str!()` and `include_bytes!()` macro for embedding an entire directory tree into your binary.",
        "crea_time": "2024-08-29T17:54:13.837870438+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:13.837870438+02:00",
        "modi_user": "api",
        "path": "/include_dir/latest/include_dir/index.html",
        "scheme": "https",
        "title": "include_dir - Rust",
        "uri_uuid": "0d8b42a2796a63a444ab8841e7ce21f11889e1d82d4c6e09cb2ef4173eae620c",
        "url": "https://docs.rs/include_dir/latest/include_dir/index.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:13.993136537+02:00",
        "crea_user": "api",
        "host": "seebass22.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:13.993136537+02:00",
        "modi_user": "api",
        "path": "/ffmpeg-builder-web/",
        "scheme": "https",
        "title": "ffmpeg-generator",
        "uri_uuid": "a9bd96480d2341158b689d42a3af2a9a6b9ad75605d60745d168d583257bfe64",
        "url": "https://seebass22.github.io/ffmpeg-builder-web/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:14.244283883+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:14.244283883+02:00",
        "modi_user": "api",
        "path": "/Seebass22/ffmpeg-generator",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "417ee1398ad16fe36570e4d8b88cde0f03219dfb4504930d7ecd667c81afff1a",
        "url": "https://github.com/Seebass22/ffmpeg-generator"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:14.617517202+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:14.617517202+02:00",
        "modi_user": "api",
        "path": "/1168/",
        "scheme": "https",
        "title": "xkcd: tar",
        "uri_uuid": "63b0913143b505d3b8484bf4910604b38232bd94b95d79dc48b0891c74e599d2",
        "url": "https://xkcd.com/1168/"
    },
    {
        "auto_descr": "The Accept request HTTP header indicates which content types, expressed as MIME types, the client is able to understand. The server uses content negotiation to select one of the proposals and informs the client of the choice with the Content-Type response header. Browsers set required values for this header based on the context of the request. For example, a browser uses different values in a request when fetching a CSS stylesheet, image, video, or a script.",
        "crea_time": "2024-08-29T17:54:15.042813315+02:00",
        "crea_user": "api",
        "host": "developer.mozilla.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:15.042813315+02:00",
        "modi_user": "api",
        "path": "/en-US/docs/Web/HTTP/Headers/Accept",
        "scheme": "https",
        "title": "Accept - HTTP | MDN",
        "uri_uuid": "a105f60483c2003e0c1937e82a28eb3aa363636b492ace715c0d3f494f099ebb",
        "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept"
    },
    {
        "auto_descr": "In the early stages of my time exploring the web, I was always confused at what exactly a favicon was. Then, when I started building my own websites I used to see warning during the early stages that…",
        "crea_time": "2024-08-29T17:54:15.493870014+02:00",
        "crea_user": "api",
        "host": "medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:15.493870014+02:00",
        "modi_user": "api",
        "path": "/@whosale/a-quick-history-of-favicon-41e51e146184",
        "scheme": "https",
        "title": "A Quick History of Favicon. In the early stages of my time… | by Alejandro Belgrave | Medium",
        "uri_uuid": "7fe921905d6fefa23343331d8c34305235b197ef049c14570ae6efdd41899be8",
        "url": "https://medium.com/@whosale/a-quick-history-of-favicon-41e51e146184"
    },
    {
        "auto_descr": "Rust by Example (RBE) is a collection of runnable examples that illustrate various Rust concepts and standard libraries.",
        "crea_time": "2024-08-29T17:54:16.092801165+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:16.092801165+02:00",
        "modi_user": "api",
        "path": "/rust-by-example/flow_control/loop/nested.html",
        "scheme": "https",
        "title": "Nesting and labels - Rust By Example",
        "uri_uuid": "5974b6ca5b0b1eaceaab7302aea6e2d6b0b327504b2a362474ae2731bae4f353",
        "url": "https://doc.rust-lang.org/rust-by-example/flow_control/loop/nested.html"
    },
    {
        "auto_descr": "https://ibraheem.ca/posts/too-many-web-servers/. Contribute to ibraheemdev/too-many-web-servers development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:16.330637375+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:16.330637375+02:00",
        "modi_user": "api",
        "path": "/ibraheemdev/too-many-web-servers/blob/master/src/bin/non_blocking.rs",
        "scheme": "https",
        "title": "too-many-web-servers/src/bin/non_blocking.rs at master · ibraheemdev/too-many-web-servers · GitHub",
        "uri_uuid": "93432e7ee40f9c9f6739be59d2c4832807a8b7391a338f63ef2f866cb082c781",
        "url": "https://github.com/ibraheemdev/too-many-web-servers/blob/master/src/bin/non_blocking.rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:17.311825216+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:17.311825216+02:00",
        "modi_user": "api",
        "path": "/crates/mio",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b4970444dd8e52401c23a2c2423559136df4fdd61286545c0cf58af36d2c6a4b",
        "url": "https://crates.io/crates/mio"
    },
    {
        "auto_descr": "View the code for the Introduction to Axum course at https://github.com/brooks-builds/full-stack-todo-rust-course/tree/main/backend/rust/axum.Axum is a backe...",
        "crea_time": "2024-08-29T17:54:17.561248538+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:17.561248538+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Trailer - Introduction to Axum - YouTube",
        "uri_uuid": "498ab46825c236e35c0c7aa85652a5c31f8e0862ac3689bfc28b0172765835f5",
        "url": "https://www.youtube.com/watch?v=tzFdrLxv1Bg&list=PLrmY5pVcnuE-_CP7XZ_44HN-mDrLQV4nS"
    },
    {
        "auto_descr": "Result is Rust's error handling type that is often discussed in the same (or similar) breath as Option, but it feels... scarier. But in this video, I'll argu...",
        "crea_time": "2024-08-29T17:54:18.193939822+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:18.193939822+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "A Simpler Way to See Results - YouTube",
        "uri_uuid": "2ee83743a8008a2709dbcbc45dc302f3c26ec3ef7364b4faf9362e59336de7c4",
        "url": "https://www.youtube.com/watch?v=s5S2Ed5T-dc&t=655s"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:18.897371647+02:00",
        "crea_user": "api",
        "host": "llogiq.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:18.897371647+02:00",
        "modi_user": "api",
        "path": "/2015/12/12/types.html",
        "scheme": "https",
        "title": "Type-Level Shenanigans — Llogiq on stuff",
        "uri_uuid": "d76f26d4f26686bd7f8af537db64222bf97db61b0fbda68df49a1155c970f342",
        "url": "https://llogiq.github.io/2015/12/12/types.html"
    },
    {
        "auto_descr": "Underrated!",
        "crea_time": "2024-08-29T17:54:19.152438874+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:19.152438874+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Kommentar von @rafaelbachmann7246 - YouTube",
        "uri_uuid": "120e9ecd2f706ce016a2d452d68927b3f75c279488d7cf5effb50333925dfbe7",
        "url": "https://www.youtube.com/watch?v=NbGQGfEzg58&lc=UgyrUJ9WCbvmFFOzP5R4AaABAg"
    },
    {
        "auto_descr": "`static` friendly data structures that don’t require dynamic memory allocation",
        "crea_time": "2024-08-29T17:54:19.899844602+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:19.899844602+02:00",
        "modi_user": "api",
        "path": "/heapless/latest/heapless/",
        "scheme": "https",
        "title": "heapless - Rust",
        "uri_uuid": "6e60062019e964a7e1949fb62c646bad4f13689bcf27f4730eef9ea16026ee5d",
        "url": "https://docs.rs/heapless/latest/heapless/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:20.922978418+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:20.922978418+02:00",
        "modi_user": "api",
        "path": "/crates/arrow",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "58518dba961d6990a989dc541985bc0c0cca968fa588ca8d1b8e101d91141037",
        "url": "https://crates.io/crates/arrow"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:21.152937670+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:21.152937670+02:00",
        "modi_user": "api",
        "path": "/crates/serde_arrow",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d5f900ac0246c03540c04ad7c0b588a4a5d6e195df78b9d501d404b46b05ead4",
        "url": "https://crates.io/crates/serde_arrow"
    },
    {
        "auto_descr": "TDLR: I propose doing major releases for arrow-rs more frequently (up to every other week) directly from master, breaking the correspondence with the main arrow release For example, the release cadence might look like 2022-01-01: 7.0.0 2...",
        "crea_time": "2024-08-29T17:54:21.393258561+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:21.393258561+02:00",
        "modi_user": "api",
        "path": "/apache/arrow-rs/issues/1120",
        "scheme": "https",
        "title": "More frequent major releases for arrow-rs · Issue #1120 · apache/arrow-rs · GitHub",
        "uri_uuid": "b1a4e89172253631cfc35343ed6eac80cc223d1cb144ac75337a552523d33d7a",
        "url": "https://github.com/apache/arrow-rs/issues/1120"
    },
    {
        "auto_descr": "CommonMark compliant markdown parser in Rust with ASTs and extensions - wooorm/markdown-rs",
        "crea_time": "2024-08-29T17:54:22.639155496+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:22.639155496+02:00",
        "modi_user": "api",
        "path": "/wooorm/markdown-rs",
        "scheme": "https",
        "title": "GitHub - wooorm/markdown-rs: CommonMark compliant markdown parser in Rust with ASTs and extensions",
        "uri_uuid": "def99ed1c1abc7df3f09263e323f5cb7c41e138bdb66e33afabdaf189eb0d18d",
        "url": "https://github.com/wooorm/markdown-rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:23.512177414+02:00",
        "crea_user": "api",
        "host": "go.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:23.512177414+02:00",
        "modi_user": "api",
        "path": "/ref/mem",
        "scheme": "https",
        "title": "The Go Memory Model - The Go Programming Language",
        "uri_uuid": "def82ec2b0e6af1a713fe853ed9dc837bdb43deaa8458d72efcd836b042c2a36",
        "url": "https://go.dev/ref/mem"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:24.021642607+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:24.021642607+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "Random question - but what happens when you divide by zero in go? | Hacker News",
        "uri_uuid": "f7992bca6c4b5591819d995e82ed92006031d416ee4437d864c5860b270d0777",
        "url": "https://news.ycombinator.com/item?id=6233968"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:24.991485120+02:00",
        "crea_user": "api",
        "host": "go.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:24.991485120+02:00",
        "modi_user": "api",
        "path": "/play/p/bVh52aKvMi",
        "scheme": "https",
        "title": "Go Playground - The Go Programming Language",
        "uri_uuid": "9caf31f7b1de18068ae313e08c43aa7e954968594c82e285d949193df0913b01",
        "url": "https://go.dev/play/p/bVh52aKvMi"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:25.346496716+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:25.346496716+02:00",
        "modi_user": "api",
        "path": "/wiki/Physical_unclonable_function",
        "scheme": "https",
        "title": "Physical unclonable function - Wikipedia",
        "uri_uuid": "09737578532db07beca1947012b5b852eca29ce169af6a9d5c40f953a310e1fc",
        "url": "https://en.wikipedia.org/wiki/Physical_unclonable_function"
    },
    {
        "auto_descr": "A guide/template for writing a Full-stack Rust web application with axum, Yew or Leptos, SQLx, TailwindCSS, Postgres, JWT, Cookies, Nginx, Docker, and deploy to Linode (Alkamai) Cloud. Check the 'README.md' file of each branch in this project for more info. - iodapson/axum_workspace",
        "crea_time": "2024-08-29T17:54:25.626843918+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:25.626843918+02:00",
        "modi_user": "api",
        "path": "/iodapson/axum_workspace",
        "scheme": "https",
        "title": "GitHub - iodapson/axum_workspace: A guide/template for writing a Full-stack Rust web application with axum, Yew or Leptos, SQLx, TailwindCSS, Postgres, JWT, Cookies, Nginx, Docker, and deploy to Linode (Alkamai) Cloud. Check the 'README.md' file of each branch in this project for more info.",
        "uri_uuid": "48c9a705dbc9fbc7b78f9c371aaa50355bc136434d19415bd0fd2ad83dc16e0c",
        "url": "https://github.com/iodapson/axum_workspace"
    },
    {
        "auto_descr": "A parsed URL record.",
        "crea_time": "2024-08-29T17:54:26.433233798+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:26.433233798+02:00",
        "modi_user": "api",
        "path": "/url/latest/url/struct.Url.html",
        "scheme": "https",
        "title": "Url in url - Rust",
        "uri_uuid": "55f63af0793a0a62b2bc92ad8ebe6a8462a52171d5ae420ff69adba77ce57774",
        "url": "https://docs.rs/url/latest/url/struct.Url.html#method.as_ref"
    },
    {
        "auto_descr": "Running your Rust application on an Alpine Docker image isn't straightforward. But don't worry. I will show you how you can create an optimized and small Rust Docker image based on Alpine Linux. If…",
        "crea_time": "2024-08-29T17:54:26.839061312+02:00",
        "crea_user": "api",
        "host": "levelup.gitconnected.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:26.839061312+02:00",
        "modi_user": "api",
        "path": "/create-an-optimized-rust-alpine-docker-image-1940db638a6c",
        "scheme": "https",
        "title": "Create an Optimized Rust Alpine Docker Image | by Pascal Zwikirsch | Level Up Coding",
        "uri_uuid": "6f0b3cfeeec180475208b1ceed69cc497e4ef581f22cbc28e0cf723f682b845d",
        "url": "https://levelup.gitconnected.com/create-an-optimized-rust-alpine-docker-image-1940db638a6c"
    },
    {
        "auto_descr": "“Zero setup” cross compilation and “cross testing” of Rust crates - cross-rs/cross",
        "crea_time": "2024-08-29T17:54:28.411846225+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:28.411846225+02:00",
        "modi_user": "api",
        "path": "/cross-rs/cross",
        "scheme": "https",
        "title": "GitHub - cross-rs/cross: “Zero setup” cross compilation and “cross testing” of Rust crates",
        "uri_uuid": "d3a4024e29d9255ba80308d5644e0e2e515e94c49688098179a04c83c48ee7d1",
        "url": "https://github.com/cross-rs/cross"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:29.405022329+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:29.405022329+02:00",
        "modi_user": "api",
        "path": "/search",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "dde184d51fd29a00be7dd6cf5c35570054d307e2adf3cf319eab7a1e52bbaaa9",
        "url": "https://crates.io/search?q=actor"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:29.626925615+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:29.626925615+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/n2cmvd/there_are_a_lot_of_actor_framework_projects_on/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "739dc34b4612d2dcebabe1dc39703965aa1aed1fa8aa4a4a1d6bd83e32b87a54",
        "url": "https://www.reddit.com/r/rust/comments/n2cmvd/there_are_a_lot_of_actor_framework_projects_on/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:29.772702879+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:29.772702879+02:00",
        "modi_user": "api",
        "path": "/crates/chikatetsu",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e7bbb7ed08cca52068d23a60d4e758f56c526b8f0c4ab3036936df3c2f576456",
        "url": "https://crates.io/crates/chikatetsu"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:30.010898202+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:30.010898202+02:00",
        "modi_user": "api",
        "path": "/crates/thespian",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "273bc23d0b5ce54571cc205730f5d5c070ccfd1446964ddf9a6434997702976c",
        "url": "https://crates.io/crates/thespian"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:30.254853576+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:30.254853576+02:00",
        "modi_user": "api",
        "path": "/wiki/Actor_model",
        "scheme": "https",
        "title": "Actor model - Wikipedia",
        "uri_uuid": "f0c40aff36c9e6c44a2c116eb66c7ea762377d21ba448f35fbdf3a2d0299a81f",
        "url": "https://en.wikipedia.org/wiki/Actor_model"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:30.726719388+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:30.726719388+02:00",
        "modi_user": "api",
        "path": "/wiki/Communicating_sequential_processes",
        "scheme": "https",
        "title": "Communicating sequential processes - Wikipedia",
        "uri_uuid": "97765c6f1ae1f3efe90e89b5f359c400a6469c38b952c781ef12caa9d1702662",
        "url": "https://en.wikipedia.org/wiki/Communicating_sequential_processes"
    },
    {
        "auto_descr": "This is a set of recommendations on how to design and present APIs for the Rust programming language.",
        "crea_time": "2024-08-29T17:54:31.131853627+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:31.131853627+02:00",
        "modi_user": "api",
        "path": "/api-guidelines/about.html",
        "scheme": "https",
        "title": "About - Rust API Guidelines",
        "uri_uuid": "4a37e92c29e541295f83236154d9bfa14686805e4e62930b0628071cb906ea60",
        "url": "https://rust-lang.github.io/api-guidelines/about.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:31.379447114+02:00",
        "crea_user": "api",
        "host": "cliffle.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:31.379447114+02:00",
        "modi_user": "api",
        "path": "/blog/async-inversion/",
        "scheme": "https",
        "title": "\nHow to think about `async`/`await` in Rust - Cliffle\n",
        "uri_uuid": "4d1c6eb5382d4975de0d78380030e766394c3d02f102ab77a19130ad85eb18ca",
        "url": "https://cliffle.com/blog/async-inversion/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:32.371698028+02:00",
        "crea_user": "api",
        "host": "hegdenu.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:32.371698028+02:00",
        "modi_user": "api",
        "path": "/posts/understanding-async-await-1/",
        "scheme": "https",
        "title": "how I finally understood async/await in Rust (part 1) - hēg denu - Hayden\n\t\tStainsby",
        "uri_uuid": "c41bfb5c529344f8c22f41589ff678136253bf8a57a1ff0616a48be03135cb9d",
        "url": "https://hegdenu.net/posts/understanding-async-await-1/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:33.053453460+02:00",
        "crea_user": "api",
        "host": "hegdenu.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:33.053453460+02:00",
        "modi_user": "api",
        "path": "/posts/understanding-async-await-2/",
        "scheme": "https",
        "title": "how I finally understood async/await in Rust (part 2) - hēg denu - Hayden\n\t\tStainsby",
        "uri_uuid": "0c02cba774e000246ac7240ca7aca17b3600097f50695d9a59b544a28ea29132",
        "url": "https://hegdenu.net/posts/understanding-async-await-2/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:54:33.594360218+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:33.594360218+02:00",
        "modi_user": "api",
        "path": "/2023/07/01/rustfmt-supports-let-else-statements.html",
        "scheme": "https",
        "title": "Rustfmt support for let-else statements | Rust Blog",
        "uri_uuid": "d96a42e78bf3083a042e21eb95951343b33c2933983b703b2c43601ea5a107cb",
        "url": "https://blog.rust-lang.org/2023/07/01/rustfmt-supports-let-else-statements.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:54:33.825546997+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:33.825546997+02:00",
        "modi_user": "api",
        "path": "/2023/07/05/regex-1.9.html",
        "scheme": "https",
        "title": "Announcing regex 1.9 | Rust Blog",
        "uri_uuid": "26eb16ba5a17af1271383e746b4b7455834b45b835607660cf9a4c5dccc6e4b6",
        "url": "https://blog.rust-lang.org/2023/07/05/regex-1.9.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:34.080316405+02:00",
        "crea_user": "api",
        "host": "tavianator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:34.080316405+02:00",
        "modi_user": "api",
        "path": "/2023/irregex.html",
        "scheme": "https",
        "title": "Irregular expressions - tavianator.com",
        "uri_uuid": "84be9c4b5babb46a245b2ccbd81606d8339ab9282a33dd9133f7355fa410e029",
        "url": "https://tavianator.com/2023/irregex.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:54:34.989484515+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:34.989484515+02:00",
        "modi_user": "api",
        "path": "/inside-rust/2023/07/17/trait-system-refactor-initiative.html",
        "scheme": "https",
        "title": "Rustc Trait System Refactor Initiative Update | Inside Rust Blog",
        "uri_uuid": "dc3868bd5cb9266821eb9fb4b189ed7805f67800aa69c9c75ec0b2c33e6a29bb",
        "url": "https://blog.rust-lang.org/inside-rust/2023/07/17/trait-system-refactor-initiative.html"
    },
    {
        "auto_descr": "Contribute to pascal-chenevas/carbone_sdk_rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:35.217079561+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:35.217079561+02:00",
        "modi_user": "api",
        "path": "/pascal-chenevas/carbone_sdk_rs",
        "scheme": "https",
        "title": "GitHub - pascal-chenevas/carbone_sdk_rs",
        "uri_uuid": "8c335d007e8dc1bf5a7e9fe8a046bf1d5885b7fe5239a98fc72391bfda81188e",
        "url": "https://github.com/pascal-chenevas/carbone_sdk_rs"
    },
    {
        "auto_descr": "Contribute to pascal-chenevas/carbone_cli_rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:36.107297593+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:36.107297593+02:00",
        "modi_user": "api",
        "path": "/pascal-chenevas/carbone_cli_rs",
        "scheme": "https",
        "title": "GitHub - pascal-chenevas/carbone_cli_rs",
        "uri_uuid": "263cf4e0be9c4ba8be4e5485ad663b562eff751997da5b2eee4b9215b915580a",
        "url": "https://github.com/pascal-chenevas/carbone_cli_rs"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:37.084182152+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:37.084182152+02:00",
        "modi_user": "api",
        "path": "/cargo/reference/specifying-dependencies.html",
        "scheme": "https",
        "title": "Specifying Dependencies - The Cargo Book",
        "uri_uuid": "12da2b771e19b1a706485166b09698e636889e063200f930da0ab3085b442d0e",
        "url": "https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-cratesio"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:37.341903150+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:37.341903150+02:00",
        "modi_user": "api",
        "path": "/reference/attributes/type_system.html",
        "scheme": "https",
        "title": "Type System - The Rust Reference",
        "uri_uuid": "278cd1450116885cfd94000afc7713009f5bee7b2720760744b2c7163900b5f9",
        "url": "https://doc.rust-lang.org/reference/attributes/type_system.html#the-non_exhaustive-attribute"
    },
    {
        "auto_descr": "github crates-io docs-rs",
        "crea_time": "2024-08-29T17:54:37.544042638+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:37.544042638+02:00",
        "modi_user": "api",
        "path": "/thiserror/latest/thiserror/",
        "scheme": "https",
        "title": "thiserror - Rust",
        "uri_uuid": "c51d1edc28bafddf778853bbcacfbf7844f7540163dff7007d6db11bb89f5a40",
        "url": "https://docs.rs/thiserror/latest/thiserror/"
    },
    {
        "auto_descr": "An efficient, reliable parser for CommonMark, a standard dialect of Markdown - pulldown-cmark/pulldown-cmark",
        "crea_time": "2024-08-29T17:54:37.754431346+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:37.754431346+02:00",
        "modi_user": "api",
        "path": "/raphlinus/pulldown-cmark",
        "scheme": "https",
        "title": "GitHub - pulldown-cmark/pulldown-cmark: An efficient, reliable parser for CommonMark, a standard dialect of Markdown",
        "uri_uuid": "fe05d87c45d5a2bcc5f311e1a4ce0b168ac7c97e5565e1e8894c5442ea9f6b87",
        "url": "https://github.com/raphlinus/pulldown-cmark"
    },
    {
        "auto_descr": "Pull parser for CommonMark. This crate provides a Parser struct which is an iterator over Events. This iterator can be used directly, or to output HTML using the HTML module.",
        "crea_time": "2024-08-29T17:54:38.809660409+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:38.809660409+02:00",
        "modi_user": "api",
        "path": "/pulldown-cmark/latest/pulldown_cmark/",
        "scheme": "https",
        "title": "pulldown_cmark - Rust",
        "uri_uuid": "4f6c0952ffa46f5eb7919628cc6d415cbeba9476a47892a76c368acc08e39feb",
        "url": "https://docs.rs/pulldown-cmark/latest/pulldown_cmark/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:39.031903463+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:39.031903463+02:00",
        "modi_user": "api",
        "path": "/722/",
        "scheme": "https",
        "title": "xkcd: Computer Problems",
        "uri_uuid": "7cf334620162d91e35a1bd3fa4d6c565c43e1a2e6fb6be2c4f8a4ec00d6a85f8",
        "url": "https://xkcd.com/722/"
    },
    {
        "auto_descr": "Rust programming languageFull version on patreonMerch posix.storeInterview with a Rust developer with Jester Hartman - aired on © The Rust.Find more Rust opi...",
        "crea_time": "2024-08-29T17:54:39.432276642+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:39.432276642+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Interview with Senior Rust Developer in 2023 - YouTube",
        "uri_uuid": "3469aeec90393ec3ed3596a536b1acf272c2fb38897c3ccd31230d90141fe1d2",
        "url": "https://www.youtube.com/watch?v=TGfQu0bQTKc"
    },
    {
        "auto_descr": "Teile deine Videos mit Freunden, Verwandten oder der ganzen Welt",
        "crea_time": "2024-08-29T17:54:40.924989929+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:40.924989929+02:00",
        "modi_user": "api",
        "path": "/@programmersarealsohuman5909/videos",
        "scheme": "https",
        "title": "Programmers are also human - YouTube",
        "uri_uuid": "3e9581786cf8a91f97852604dc8330d5e0f9d2fdf0833a6569683c1e59add336",
        "url": "https://www.youtube.com/@programmersarealsohuman5909/videos"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:41.311143995+02:00",
        "crea_user": "api",
        "host": "ankiweb.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:41.311143995+02:00",
        "modi_user": "api",
        "path": "/shared/info/2045782265",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "73a4eb370dfcd219606dbda1f8df6c133b5ccc3bf91825ab5a25c76620fddd50",
        "url": "https://ankiweb.net/shared/info/2045782265"
    },
    {
        "auto_descr": "Standard proposal for maintain.toml file format to document software project maintenance states - jbethune/maintain_toml",
        "crea_time": "2024-08-29T17:54:41.439484655+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:41.439484655+02:00",
        "modi_user": "api",
        "path": "/jbethune/maintain_toml",
        "scheme": "https",
        "title": "GitHub - jbethune/maintain_toml: Standard proposal for maintain.toml file format to document software project maintenance states",
        "uri_uuid": "34f1fce992c1499a70ae44bcf7eb83c8afdfdd708b193c1d053dad217da6612d",
        "url": "https://github.com/jbethune/maintain_toml"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:42.556647603+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:42.556647603+02:00",
        "modi_user": "api",
        "path": "/wiki/GlTF",
        "scheme": "https",
        "title": "glTF - Wikipedia",
        "uri_uuid": "862ffe0fa78798168800fda8432cf1501bbb1490bf7d5217fbfed500562e1f31",
        "url": "https://en.wikipedia.org/wiki/GlTF"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:42.886062421+02:00",
        "crea_user": "api",
        "host": "caballerocoll.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:42.886062421+02:00",
        "modi_user": "api",
        "path": "/blog/bevy-chess-tutorial/",
        "scheme": "https",
        "title": "lmao",
        "uri_uuid": "192c60fd9c915d6b82d9f81418c49d025a21d2fd42cdf22570b55c1efb142bc9",
        "url": "https://caballerocoll.com/blog/bevy-chess-tutorial/"
    },
    {
        "auto_descr": "Server/Client network library for multiplayer games with authentication and connection management made with Rust - lucaspoffo/renet",
        "crea_time": "2024-08-29T17:54:44.159671426+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:44.159671426+02:00",
        "modi_user": "api",
        "path": "/lucaspoffo/renet",
        "scheme": "https",
        "title": "GitHub - lucaspoffo/renet: Server/Client network library for multiplayer games with authentication and connection management made with Rust",
        "uri_uuid": "4ccdb6248bf9a858d6c40ff369f93c6491f6788e4f8402d4d006938db5b4431f",
        "url": "https://github.com/lucaspoffo/renet"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:44.946734463+02:00",
        "crea_user": "api",
        "host": "netding.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:44.946734463+02:00",
        "modi_user": "api",
        "path": "/tale/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ab355efce0875231ccc91486d76edd2b652198a649f2b2f39e8efbe6b80714e3",
        "url": "https://netding.de/tale/"
    },
    {
        "auto_descr": "Adventures In Indie Gaming!",
        "crea_time": "2024-08-29T17:54:45.050606901+02:00",
        "crea_user": "api",
        "host": "web.archive.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:45.050606901+02:00",
        "modi_user": "api",
        "path": "/web/20120121174603/https://rampantgames.com/blog/2004/10/black-triangle.html",
        "scheme": "https",
        "title": "Tales of the Rampant Coyote: The Black Triangle",
        "uri_uuid": "656b6a3488d2254ec13798da1f3f037d6190ee767ddecc61bf382faf237e31ec",
        "url": "https://web.archive.org/web/20120121174603/https://rampantgames.com/blog/2004/10/black-triangle.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:46.567104834+02:00",
        "crea_user": "api",
        "host": "netding.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:46.567104834+02:00",
        "modi_user": "api",
        "path": "/tale/tale_api.mjs",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e48c3fbbf7fd88f8a4a79f3d92a832aab4fe39d62c5e74bce2f58335193ff00d",
        "url": "https://netding.de/tale/tale_api.mjs"
    },
    {
        "auto_descr": "Tilt to Live gets a makeover in this free-to-try adaptation of our iPhone debut. Taking advantage of the iPad's screen real estate, all of our game modes now...",
        "crea_time": "2024-08-29T17:54:46.655065034+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:46.655065034+02:00",
        "modi_user": "api",
        "path": "/97mp_Kg4ZoU",
        "scheme": "https",
        "title": "Tilt to Live HD Launch Trailer - YouTube",
        "uri_uuid": "e19ec0fdec4219d15a528a1918601c7cb4bb0cc19b7faed9c52793c430c43340",
        "url": "https://youtu.be/97mp_Kg4ZoU"
    },
    {
        "auto_descr": "Prometheus fairing and handler for Rocket. Contribute to sd2k/rocket_prometheus development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:47.360095330+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:47.360095330+02:00",
        "modi_user": "api",
        "path": "/sd2k/rocket_prometheus",
        "scheme": "https",
        "title": "GitHub - sd2k/rocket_prometheus: Prometheus fairing and handler for Rocket",
        "uri_uuid": "3af617233db73b8a1bc3a83f0b4cdde6d7b9137f0f02753ef1193bf79cb4595f",
        "url": "https://github.com/sd2k/rocket_prometheus"
    },
    {
        "auto_descr": "I just finished The Sun Walks Down by Fiona McFarlane. So good!\n This was on the Walter Scott Prize short list, which I think I first heard about from Books and Things.\n Warning: spoilers ahead. Turn back now!\n This book is about 19th century Australia, but the title is from Swedish. \"In Sweden, the sun doesn't set, it walks down.\" That was revealed about halfway through the book and it just totally makes sense!",
        "crea_time": "2024-08-29T17:54:48.302462259+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:48.302462259+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20230611/",
        "scheme": "https",
        "title": "\n  The Sun Walks Down · oylenshpeegul\n",
        "uri_uuid": "500991e86ea44df1baae10f6357afa088ad4611d88b3d40a7dfdfcf18dae8fa5",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20230611/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:54:49.236462814+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:49.236462814+02:00",
        "modi_user": "api",
        "path": "/2023/06/20/introducing-leadership-council.html",
        "scheme": "https",
        "title": "Introducing the Rust Leadership Council | Rust Blog",
        "uri_uuid": "5b747dc59c57e50735ebb4f3e4b477c9f9c0d47183b49d5aebcd8869c6685b99",
        "url": "https://blog.rust-lang.org/2023/06/20/introducing-leadership-council.html"
    },
    {
        "auto_descr": "A collection of useful .gitignore templates. Contribute to github/gitignore development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:49.449674082+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:49.449674082+02:00",
        "modi_user": "api",
        "path": "/github/gitignore/blob/4488915eec0b3a45b5c63ead28f286819c0917de/Rust.gitignore",
        "scheme": "https",
        "title": "gitignore/Rust.gitignore at 4488915eec0b3a45b5c63ead28f286819c0917de · github/gitignore · GitHub",
        "uri_uuid": "4261f99caf265ab575170515dee0cc48bcd0c7e3314ab1205a1359773ad34eab",
        "url": "https://github.com/github/gitignore/blob/4488915eec0b3a45b5c63ead28f286819c0917de/Rust.gitignore#L6"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:50.206258575+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:50.206258575+02:00",
        "modi_user": "api",
        "path": "/rustup/overrides.html",
        "scheme": "https",
        "title": "Overrides - The rustup book",
        "uri_uuid": "23c1d5dea2f93e146a68a68f30f70aac35de75862e4fd170fb989fe99845b206",
        "url": "https://rust-lang.github.io/rustup/overrides.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:54:50.432737377+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:50.432737377+02:00",
        "modi_user": "api",
        "path": "/rustup/overrides.html",
        "scheme": "https",
        "title": "Overrides - The rustup book",
        "uri_uuid": "0b71ed61ff843abf3767a42b8093a06afbd1f46eca8f0bc8f11177e8d71986d4",
        "url": "https://rust-lang.github.io/rustup/overrides.html#the-toolchain-file"
    },
    {
        "auto_descr": "Find games tagged bevy like Tunnet, entities' repose, Taipo, Not Snake, Subfuse on itch.io, the indie game hosting marketplace",
        "crea_time": "2024-08-29T17:54:50.560363558+02:00",
        "crea_user": "api",
        "host": "itch.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:50.560363558+02:00",
        "modi_user": "api",
        "path": "/games/tag-bevy",
        "scheme": "https",
        "title": "Top games tagged bevy - itch.io",
        "uri_uuid": "5604b5af1f555ad6b0010f2d76d5256d75e8df61ccaea8e5f4b0af9c3609e32e",
        "url": "https://itch.io/games/tag-bevy"
    },
    {
        "auto_descr": "XEmacs is a highly customizable open source text\n      editor and application development system. It is protected\n      under the GNU Public License and related to other versions\n      of Emacs, in particular GNU Emacs. Its emphasis is on modern\n      graphical user interface support and an open software\n      development model, similar to Linux. XEmacs has an active\n      development community numbering in the hundreds, and runs on\n      Windows 95 and NT, Linux and nearly every other version of\n      Unix in existence. This site provides links to all of the\n      FTP sites mirroring XEmacs, contains the absolute latest\n      version of the XEmacs FAQ, and has pointers to additional\n      Elisp packages which work with XEmacs. This site is provided\n      to help users get the most out of XEmacs.",
        "crea_time": "2024-08-29T17:54:52.021652007+02:00",
        "crea_user": "api",
        "host": "www.xemacs.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:52.021652007+02:00",
        "modi_user": "api",
        "path": "/Releases/21.5.35.html",
        "scheme": "https",
        "title": "XEmacs: XEmacs 21.5.35 \"kohlrabi\" is released",
        "uri_uuid": "5d2a6ee11035e763982d9d2e9fdd5486e1217df80d442ad6b13003e637aad304",
        "url": "https://www.xemacs.org/Releases/21.5.35.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:52.346715093+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:52.346715093+02:00",
        "modi_user": "api",
        "path": "/wiki/Security.txt",
        "scheme": "https",
        "title": "security.txt - Wikipedia",
        "uri_uuid": "aa0413e61671bc5d4bd8ced09c3ff95016825165d88872c69a5ab0f98480f085",
        "url": "https://en.wikipedia.org/wiki/Security.txt"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:54:52.563178040+02:00",
        "crea_user": "api",
        "host": "www.fda.gov",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:52.563178040+02:00",
        "modi_user": "api",
        "path": "/drugs/drug-safety-and-availability/medication-guides",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "aacba69cc835dc67f4d4c568c0a9f0a92798ba933e964a91afe6e622ef981975",
        "url": "https://www.fda.gov/drugs/drug-safety-and-availability/medication-guides"
    },
    {
        "auto_descr": "Contribute to matthias-buttgereit/bevy-3d-game development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:54:52.855501307+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:52.855501307+02:00",
        "modi_user": "api",
        "path": "/matthias-buttgereit/bevy-3d-game",
        "scheme": "https",
        "title": "GitHub - matthias-buttgereit/bevy-3d-game",
        "uri_uuid": "d0ce2c41a3d3fd1550ffa5ca4426088eafbf9cdfb4bb669a193cf25d39e8651b",
        "url": "https://github.com/matthias-buttgereit/bevy-3d-game"
    },
    {
        "auto_descr": "In this series, we look at how various bits of rust-analyzer (https://rust-analyzer.github.io) work. The primary audience are the people who would like to ha...",
        "crea_time": "2024-08-29T17:54:53.802818451+02:00",
        "crea_user": "api",
        "host": "youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:53.802818451+02:00",
        "modi_user": "api",
        "path": "/playlist",
        "scheme": "https",
        "title": "Explaining rust-analyzer - YouTube",
        "uri_uuid": "fe16147fb9de40dc95852f34da67775ddabf7af4a1501348963045fd592a766a",
        "url": "https://youtube.com/playlist?list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y"
    },
    {
        "auto_descr": "Generic and extensible egui widgets to create analog synthesizer-like UI with data-oriented API - ryo33/egui_cable",
        "crea_time": "2024-08-29T17:54:54.225183574+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:54.225183574+02:00",
        "modi_user": "api",
        "path": "/ryo33/egui_cable",
        "scheme": "https",
        "title": "GitHub - ryo33/egui_cable: Generic and extensible egui widgets to create analog synthesizer-like UI with data-oriented API",
        "uri_uuid": "ffc3d027ba2faebf5b973baf71b553820e49e109b7498a1a1dcf40a2965f4f48",
        "url": "https://github.com/ryo33/egui_cable"
    },
    {
        "auto_descr": "While Rust has earned a dedicated following, it's not without its fair share of controversies and problems. In this video I'll talk about the negative respon...",
        "crea_time": "2024-08-29T17:54:54.998908007+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:54.998908007+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust is being destroyed from the inside - YouTube",
        "uri_uuid": "3889df205a2e99af2a00e7a931534ec10ad7f67d7f9e57c2590bbd4c8d6c88ed",
        "url": "https://www.youtube.com/watch?v=QEnuzwCWpgQ"
    },
    {
        "auto_descr": "A cell which can nominally be written to only once.",
        "crea_time": "2024-08-29T17:54:55.682178056+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:55.682178056+02:00",
        "modi_user": "api",
        "path": "/std/cell/struct.OnceCell.html",
        "scheme": "https",
        "title": "OnceCell in std::cell - Rust",
        "uri_uuid": "9395d48cb6741a7ba8cc71918517d970da35d7ac152527532510f47a3dd00051",
        "url": "https://doc.rust-lang.org/std/cell/struct.OnceCell.html"
    },
    {
        "auto_descr": "This library contains collection of all sorts of useful information for every country. - pouriya/keshvar",
        "crea_time": "2024-08-29T17:54:56.513829336+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:56.513829336+02:00",
        "modi_user": "api",
        "path": "/pouriya/keshvar",
        "scheme": "https",
        "title": "GitHub - pouriya/keshvar: This library contains collection of all sorts of useful information for every country.",
        "uri_uuid": "906bf4491fb70e50f67d5680a018bd92c9c0a72947136334b0695096cd584840",
        "url": "https://github.com/pouriya/keshvar"
    },
    {
        "auto_descr": "All sorts of useful information about every country packaged as convenient little country objects. It includes data from ISO 3166 (countries and states/subdivisions ), ISO 4217 (currency), and E.164 (phone numbers). - countries/lib/countries/data/countries/HK.yaml at 02981cb75e69afec0d23dbe6603cb928c2c44da1 · countries/countries",
        "crea_time": "2024-08-29T17:54:57.422833651+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:57.422833651+02:00",
        "modi_user": "api",
        "path": "/countries/countries/blob/02981cb75e69afec0d23dbe6603cb928c2c44da1/lib/countries/data/countries/HK.yaml",
        "scheme": "https",
        "title": "countries/lib/countries/data/countries/HK.yaml at 02981cb75e69afec0d23dbe6603cb928c2c44da1 · countries/countries · GitHub",
        "uri_uuid": "09409862beb26197d1ebb8096de1b11729fa2f73a77a823725ffec9810ae0bab",
        "url": "https://github.com/countries/countries/blob/02981cb75e69afec0d23dbe6603cb928c2c44da1/lib/countries/data/countries/HK.yaml"
    },
    {
        "auto_descr": "Not sure why you are missing Kosovo: From https://countrycode.org/kosovo Kosovo | 383 | XK / XKX | 1,800,000 | 10,887 | 7.15 Billion I use this library to rate limit requests from countries and essentially got DDOSed by Kosovo since it w...",
        "crea_time": "2024-08-29T17:54:58.155517223+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:58.155517223+02:00",
        "modi_user": "api",
        "path": "/countries/countries/issues/793",
        "scheme": "https",
        "title": "Missing Kosovo · Issue #793 · countries/countries · GitHub",
        "uri_uuid": "e3b98a583f0d6715da6bf870905e285e80997d9bb50095f9bb06ecc3bca44a3e",
        "url": "https://github.com/countries/countries/issues/793"
    },
    {
        "auto_descr": "The live stream of the RustNL 2023 Conference held on May 10 2023 in the OBA Theater in Amsterdam, the Netherlands. For details and the schedule, please visi...",
        "crea_time": "2024-08-29T17:54:59.777396173+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:54:59.777396173+02:00",
        "modi_user": "api",
        "path": "/live/9Q4yNlbfiYk",
        "scheme": "https",
        "title": "RustNL 2023 Conference - YouTube",
        "uri_uuid": "988e26a1f4526d9ce048a38492c7a905d036c12dba5dd6cd3c2e26948508f649",
        "url": "https://www.youtube.com/live/9Q4yNlbfiYk?t=591"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:00.573987354+02:00",
        "crea_user": "api",
        "host": "google.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:00.573987354+02:00",
        "modi_user": "api",
        "path": "/comprehensive-rust/running-the-course.html",
        "scheme": "https",
        "title": "Running the Course - Comprehensive Rust 🦀",
        "uri_uuid": "462c86ded8bc02682f783a8eddb76b71eb4ee0f9ae86274546a90be518b02dea",
        "url": "https://google.github.io/comprehensive-rust/running-the-course.html"
    },
    {
        "auto_descr": "Embeddings dienen dazu, die Essenz von Inhalten als Vektoren darzustellen. Vektordatenbanken helfen unter anderem dabei, ähnliche Inhalte effizient zu finden.",
        "crea_time": "2024-08-29T17:55:00.896395713+02:00",
        "crea_user": "api",
        "host": "www.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:00.896395713+02:00",
        "modi_user": "api",
        "path": "/hintergrund/Sorgfaeltiger-als-ChatGPT-Embeddings-mit-Azure-OpenAI-Qdrant-und-Rust-9066795.html",
        "scheme": "https",
        "title": "\n    Sorgfältiger als ChatGPT: Embeddings mit Azure OpenAI, Qdrant und Rust | heise online\n",
        "uri_uuid": "2908a8afd5088ff624a71aacd2d769420ab0824062256062200e9123a40acfbf",
        "url": "https://www.heise.de/hintergrund/Sorgfaeltiger-als-ChatGPT-Embeddings-mit-Azure-OpenAI-Qdrant-und-Rust-9066795.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:55:01.169958622+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:01.169958622+02:00",
        "modi_user": "api",
        "path": "/2023/06/01/Rust-1.70.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.70.0 | Rust Blog",
        "uri_uuid": "c093ab3ca6310b535cf60b9325a4d8e96851458865ca4cd483b83368581fd43b",
        "url": "https://blog.rust-lang.org/2023/06/01/Rust-1.70.0.html"
    },
    {
        "auto_descr": "Through a series of recent breakthroughs, deep learning has boosted the entire field of machine learning. Now, even programmers who know close to nothing about this technology can use simple, …  - Selection from Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition [Book]",
        "crea_time": "2024-08-29T17:55:01.397267541+02:00",
        "crea_user": "api",
        "host": "www.oreilly.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:01.397267541+02:00",
        "modi_user": "api",
        "path": "/library/view/hands-on-machine-learning/9781492032632/",
        "scheme": "https",
        "title": "Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition[Book]",
        "uri_uuid": "804feccd58fb2490ac7d6f84540081d35f99ba93f2b4557b8c7fcbf301a01630",
        "url": "https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:02.046615169+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:02.046615169+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/13zxww8/is_rustfmt_abandoned_will_it_ever_format_let_else/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "7d98dfafc7f47aceec9dd4031ac85550e722f4d5c11d30f84c401e21bcf8eb35",
        "url": "https://www.reddit.com/r/rust/comments/13zxww8/is_rustfmt_abandoned_will_it_ever_format_let_else/"
    },
    {
        "auto_descr": "A bunch of lints to catch common mistakes and improve your Rust code. Book: https://doc.rust-lang.org/clippy/ - rust-clippy/CHANGELOG.md at master · rust-lang/rust-clippy",
        "crea_time": "2024-08-29T17:55:02.176228011+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:02.176228011+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-clippy/blob/master/CHANGELOG.md",
        "scheme": "https",
        "title": "rust-clippy/CHANGELOG.md at master · rust-lang/rust-clippy · GitHub",
        "uri_uuid": "a05291bfab00efec83e122f37cf12e36d4ecd68324567b4f91abb9a9224d74cf",
        "url": "https://github.com/rust-lang/rust-clippy/blob/master/CHANGELOG.md#rust-170"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:55:03.550995804+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:03.550995804+02:00",
        "modi_user": "api",
        "path": "/episode/orson-peters/",
        "scheme": "https",
        "title": "Glidesort with Orson Peters :: Rustacean Station",
        "uri_uuid": "a0475bc7bd7a3de9962cc00001b75f7b757b53c84d54479003379cb68e82fec2",
        "url": "https://rustacean-station.org/episode/orson-peters/"
    },
    {
        "auto_descr": "Documentation for the npm registry, website, and command-line interface",
        "crea_time": "2024-08-29T17:55:03.703208818+02:00",
        "crea_user": "api",
        "host": "docs.npmjs.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:03.703208818+02:00",
        "modi_user": "api",
        "path": "/about-scopes",
        "scheme": "https",
        "title": "About scopes | npm Docs",
        "uri_uuid": "a3a99c70610cb897d90c4ebc62d9b647dd7c6de20bde3129f15c49e091ec51bf",
        "url": "https://docs.npmjs.com/about-scopes"
    },
    {
        "auto_descr": "OSS-Fuzz - continuous fuzzing for open source software. - oss-fuzz/projects at master · google/oss-fuzz",
        "crea_time": "2024-08-29T17:55:04.180435211+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:04.180435211+02:00",
        "modi_user": "api",
        "path": "/google/oss-fuzz/tree/master/projects",
        "scheme": "https",
        "title": "oss-fuzz/projects at master · google/oss-fuzz · GitHub",
        "uri_uuid": "c49adbce59304cbb39f27e133230ebe59f4cc099c9c3453853c919da96733850",
        "url": "https://github.com/google/oss-fuzz/tree/master/projects"
    },
    {
        "auto_descr": "Security advisory database for Rust crates published through https://crates.io",
        "crea_time": "2024-08-29T17:55:05.255924282+02:00",
        "crea_user": "api",
        "host": "rustsec.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:05.255924282+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "About RustSec › RustSec Advisory Database",
        "uri_uuid": "ac1285a5ef52396ac348bac5e10dda2e94b089042f73db12fd2d9a9f003a0e86",
        "url": "https://rustsec.org/"
    },
    {
        "auto_descr": "Background As part of the Rust Foundation's security initiative, we'd like to surface information related to crate security more prominently within crates.io. Our initial focus is on supply chain security, so surfacing information releva...",
        "crea_time": "2024-08-29T17:55:05.510670766+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:05.510670766+02:00",
        "modi_user": "api",
        "path": "/rust-lang/crates.io/issues/6397",
        "scheme": "https",
        "title": "Surface crate security information in the UI · Issue #6397 · rust-lang/crates.io · GitHub",
        "uri_uuid": "ae324e288ed89bed7eac22f61f91979d212b0508cd3cc96bbdb0745846216de7",
        "url": "https://github.com/rust-lang/crates.io/issues/6397"
    },
    {
        "auto_descr": "RustSec: `rustsec` crate",
        "crea_time": "2024-08-29T17:55:06.752829112+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:06.752829112+02:00",
        "modi_user": "api",
        "path": "/rustsec/latest/rustsec/",
        "scheme": "https",
        "title": "rustsec - Rust",
        "uri_uuid": "58fba3248439afcb2c9073eeec67ecabb2f5b0f4cdb3ee65fa26ef0f459b6c85",
        "url": "https://docs.rs/rustsec/latest/rustsec/"
    },
    {
        "auto_descr": "Edit distance of some small amount away from an existing crate, when detected send an email to help@crates.io with a link to the crate and a link to the crate that its name is close to?",
        "crea_time": "2024-08-29T17:55:06.971172127+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:06.971172127+02:00",
        "modi_user": "api",
        "path": "/rust-lang/crates.io/issues/1074",
        "scheme": "https",
        "title": "Detect typo-squatting · Issue #1074 · rust-lang/crates.io · GitHub",
        "uri_uuid": "0634c4b6ce5afc0346ec1e4fb426829adb7e2823d56d289244a2baa266ca685b",
        "url": "https://github.com/rust-lang/crates.io/issues/1074"
    },
    {
        "auto_descr": "Edit distance of some small amount away from an existing crate, when detected send an email to help@crates.io with a link to the crate and a link to the crate that its name is close to?",
        "crea_time": "2024-08-29T17:55:08.224970530+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:08.224970530+02:00",
        "modi_user": "api",
        "path": "/rust-lang/crates.io/issues/1074",
        "scheme": "https",
        "title": "Detect typo-squatting · Issue #1074 · rust-lang/crates.io · GitHub",
        "uri_uuid": "44fe80f17081566e662d1b51f55b47dbb414453360f9852c5e5703ede6686926",
        "url": "https://github.com/rust-lang/crates.io/issues/1074#issuecomment-1129024181https://github.blog/2022-02-01-top-100-npm-package-maintainers-require-2fa-additional-security/"
    },
    {
        "auto_descr": "&nbsp;  and  talk about the latest NPM backdoored package. It feels like this keeps happening. We talk about why this is and why it's probably OK. Kurt fixes Linus' Law, in open source the superpower isn't bugs are shallow (they're not), the superpower is security bugs in open source can't be ignored. Show Notes    ",
        "crea_time": "2024-08-29T17:55:08.712830489+02:00",
        "crea_user": "api",
        "host": "opensourcesecuritypodcast.libsyn.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:08.712830489+02:00",
        "modi_user": "api",
        "path": "/episode-316-you-have-to-use-open-source",
        "scheme": "https",
        "title": "Open Source Security Podcast: Episode 316 - You have to use open source",
        "uri_uuid": "b7c77062cfa7e6870757ff9d7f1f4ae3b95aad19776c116a1b8c120322b68627",
        "url": "https://opensourcesecuritypodcast.libsyn.com/episode-316-you-have-to-use-open-source"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:09.476458783+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:09.476458783+02:00",
        "modi_user": "api",
        "path": "/cargo/reference/future-incompat-report.html",
        "scheme": "https",
        "title": "Future incompat report - The Cargo Book",
        "uri_uuid": "d06b9769c95fe197f0cef240b4702da4c67918b74d457231d9aa7116cfca1dad",
        "url": "https://doc.rust-lang.org/cargo/reference/future-incompat-report.html"
    },
    {
        "auto_descr": "There are still many widely used crates that haven&#39;t made it to version 1.x.x yet. This creates collateral damage in a way that hasn&#39;t been widely realized. \nIn the graphics/game dev community, everybody needs a 2D/3D ve&hellip;",
        "crea_time": "2024-08-29T17:55:09.674043635+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:09.674043635+02:00",
        "modi_user": "api",
        "path": "/t/getting-important-crates-to-version-1-0/91097/6",
        "scheme": "https",
        "title": "Getting important crates to version 1.0 - #6 by BurntSushi - community - The Rust Programming Language Forum",
        "uri_uuid": "19be54d5af1b24cf49cfa19cbf9ecd975b5f4b1314282c29c958b22b199181b1",
        "url": "https://users.rust-lang.org/t/getting-important-crates-to-version-1-0/91097/6"
    },
    {
        "auto_descr": "New Product Liability Directive",
        "crea_time": "2024-08-29T17:55:11.181984259+02:00",
        "crea_user": "api",
        "host": "www.europarl.europa.eu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:11.181984259+02:00",
        "modi_user": "api",
        "path": "/thinktank/en/document/EPRS_BRI(2023)739341",
        "scheme": "https",
        "title": "New Product Liability Directive | Think Tank | European Parliament",
        "uri_uuid": "0d8d0a481e81f4cd5a46965b646afa980c8ba67f4ffa951dd24eb55af3db64cb",
        "url": "https://www.europarl.europa.eu/thinktank/en/document/EPRS_BRI(2023)739341"
    },
    {
        "auto_descr": "The EU is currently debating the introduction of liability rules for software, including Free Software. The relevant proposals are the AI Act, Product Liab...",
        "crea_time": "2024-08-29T17:55:11.573024474+02:00",
        "crea_user": "api",
        "host": "fsfe.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:11.573024474+02:00",
        "modi_user": "api",
        "path": "/news/2023/news-20230323-01.en.html",
        "scheme": "https",
        "title": "EU: Proposed liability rules will harm Free Software - FSFE",
        "uri_uuid": "30dd47a8f22134a01e94a5741b3179c041ecb79c5adf825c27ee333c9928dad8",
        "url": "https://fsfe.org/news/2023/news-20230323-01.en.html"
    },
    {
        "auto_descr": "Berlin based technology consultancy specialising in the Rust programming language. We offer development, implementation, training and long-term support.",
        "crea_time": "2024-08-29T17:55:11.753038448+02:00",
        "crea_user": "api",
        "host": "ferrous-systems.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:11.753038448+02:00",
        "modi_user": "api",
        "path": "/blog/ferrous-systems-adacore-joining-forces/",
        "scheme": "https",
        "title": "\n        Ferrous Systems and AdaCore to join forces on Ferrocene  - Ferrous Systems\n    ",
        "uri_uuid": "9c0e0551a1ef6fef8329c54900ea4d35f81796a25c9989b6b1ea3d94ff444148",
        "url": "https://ferrous-systems.com/blog/ferrous-systems-adacore-joining-forces/"
    },
    {
        "auto_descr": "Broadcast chords among peers and make them sing. Contribute to barafael/humanophone development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:55:12.399427399+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:12.399427399+02:00",
        "modi_user": "api",
        "path": "/barafael/humanophone",
        "scheme": "https",
        "title": "GitHub - barafael/humanophone: Broadcast chords among peers and make them sing",
        "uri_uuid": "8178fd9d1d94369a5c4c1f743e5eed1316c173ccbbf12e296c433a85cc68c8a3",
        "url": "https://github.com/barafael/humanophone"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:13.454770939+02:00",
        "crea_user": "api",
        "host": "tickets.events.ccc.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:13.454770939+02:00",
        "modi_user": "api",
        "path": "/camp2023/",
        "scheme": "https",
        "title": "\n    \n    \n    \nChaos Communication Camp 2023\n",
        "uri_uuid": "22cacb344707233900f9976c700aff794c041c67f39efa0e1a0ca48cf9ac4669",
        "url": "https://tickets.events.ccc.de/camp2023/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:13.822085943+02:00",
        "crea_user": "api",
        "host": "bornhack.dk",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:13.822085943+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "\n  BornHack 2024\n",
        "uri_uuid": "b129bf61ea83cae235cf1119846aa564ef39580599dcbde23926c75880882ccb",
        "url": "https://bornhack.dk/"
    },
    {
        "auto_descr": "Asteroids clone as a learning project. Contribute to taurr/bevoids development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:55:14.267258207+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:14.267258207+02:00",
        "modi_user": "api",
        "path": "/taurr/bevoids",
        "scheme": "https",
        "title": "GitHub - taurr/bevoids: Asteroids clone as a learning project",
        "uri_uuid": "b1d198209aff53a1c0d246a78d3415c9a8a5b64683a6442500fb5aa030557666",
        "url": "https://github.com/taurr/bevoids"
    },
    {
        "auto_descr": "A refreshingly simple data-driven game engine built in Rust. Free and Open Source Forever!",
        "crea_time": "2024-08-29T17:55:15.077230615+02:00",
        "crea_user": "api",
        "host": "bevyengine.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:15.077230615+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Bevy Engine",
        "uri_uuid": "164d02a8188ccbc284261971cacbe258cd2a198d8aa06cb253bfc39230d2051a",
        "url": "https://bevyengine.org/"
    },
    {
        "auto_descr": "In this article, we will use Bevy game engine in our React application from our Rust WASM library to build the popular breakout game from scratch. Now, let’s create a run_bevy_app function in our…",
        "crea_time": "2024-08-29T17:55:15.805246850+02:00",
        "crea_user": "api",
        "host": "guptanikhil.medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:15.805246850+02:00",
        "modi_user": "api",
        "path": "/rust-wasm-breakout-game-i-1b474e41a132",
        "scheme": "https",
        "title": "Rust & Wasm: Build Your Own Breakout Game I | by Nikhil Gupta | Medium",
        "uri_uuid": "7d163898fd242caa2733da4b0356311153e48f1e62145b91a4e686e253723509",
        "url": "https://guptanikhil.medium.com/rust-wasm-breakout-game-i-1b474e41a132"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:17.619693123+02:00",
        "crea_user": "api",
        "host": "wiki.debian.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:17.619693123+02:00",
        "modi_user": "api",
        "path": "/Multiarch/Tuples",
        "scheme": "https",
        "title": "Multiarch/Tuples - Debian Wiki",
        "uri_uuid": "7e7f0cd29f9c964bd2e46aa7f5bdf54b51cfb30f0b4351540597d8df18fb3672",
        "url": "https://wiki.debian.org/Multiarch/Tuples"
    },
    {
        "auto_descr": "A podcast where two Rustaceans set out to make a game. In each episode, we talk about what we've been working on using the Rust programming language as well as other topics that have been on our mind or our listeners have asked about.",
        "crea_time": "2024-08-29T17:55:18.467509404+02:00",
        "crea_user": "api",
        "host": "wayofthecrab.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:18.467509404+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "The Way of the Crab",
        "uri_uuid": "16a03d831d5afb03d957cf44f2121546935f34d4d523784bf827e9fac3436d9c",
        "url": "https://wayofthecrab.com/"
    },
    {
        "auto_descr": "A UTF-8–encoded, growable string.",
        "crea_time": "2024-08-29T17:55:19.129651995+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:19.129651995+02:00",
        "modi_user": "api",
        "path": "/std/string/struct.String.html",
        "scheme": "https",
        "title": "String in std::string - Rust",
        "uri_uuid": "ce2b982d3a50836d7080a7f92fb75720f148cf254ff1cf5ecca0a7ec13d0b98d",
        "url": "https://doc.rust-lang.org/std/string/struct.String.html#method.into_bytes"
    },
    {
        "auto_descr": "Rust library that's all about cooking up terminal user interfaces (TUIs) 👨‍🍳🐀 - ratatui/ratatui",
        "crea_time": "2024-08-29T17:55:19.884980806+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:19.884980806+02:00",
        "modi_user": "api",
        "path": "/tui-rs-revival/ratatui",
        "scheme": "https",
        "title": "GitHub - ratatui/ratatui: Rust library that's all about cooking up terminal user interfaces (TUIs) 👨‍🍳🐀",
        "uri_uuid": "41aac9e5310d8df92907eecd2561560efe8d1a898081ee41f4118ba0a9ae062f",
        "url": "https://github.com/tui-rs-revival/ratatui"
    },
    {
        "auto_descr": "Easily add emojis to your git commit messages 😎. Contribute to zeenix/gimoji development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:55:20.935655145+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:20.935655145+02:00",
        "modi_user": "api",
        "path": "/zeenix/gimoji",
        "scheme": "https",
        "title": "GitHub - zeenix/gimoji: Easily add emojis to your git commit messages 😎",
        "uri_uuid": "d4b8f71e49e3ee29a90940898bdc59d7dbf7db03fbffedd4abee6370466d9305",
        "url": "https://github.com/zeenix/gimoji"
    },
    {
        "auto_descr": "Base widget to be used with all upper level ones. It may be used to display a box border around the widget and/or add a title.",
        "crea_time": "2024-08-29T17:55:21.723192744+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:21.723192744+02:00",
        "modi_user": "api",
        "path": "/tui/latest/tui/widgets/struct.Block.html",
        "scheme": "https",
        "title": "Block in tui::widgets - Rust",
        "uri_uuid": "46ca927f4a7bcd4adb93225ee63308a945e10573309a6db9a1f9e07a83ec9d7b",
        "url": "https://docs.rs/tui/latest/tui/widgets/struct.Block.html"
    },
    {
        "auto_descr": "create .desktop files for rust projects. Contribute to Seebass22/cargo-desktop development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:55:21.946117891+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:21.946117891+02:00",
        "modi_user": "api",
        "path": "/Seebass22/cargo-desktop",
        "scheme": "https",
        "title": "GitHub - Seebass22/cargo-desktop: create .desktop files for rust projects",
        "uri_uuid": "0f1dd3e3d7e32d4f6f175b111088bfd60fe2e24713403cf71f1ae0bcd0b39c34",
        "url": "https://github.com/Seebass22/cargo-desktop"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:22.791238867+02:00",
        "crea_user": "api",
        "host": "jonas.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:22.791238867+02:00",
        "modi_user": "api",
        "path": "/tig/",
        "scheme": "https",
        "title": "Introduction · Tig - Text-mode interface for Git",
        "uri_uuid": "deee576f2444dcdd9b7fa289c5a43aada6c3511222927e049d40a6143c4603cd",
        "url": "https://jonas.github.io/tig/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:23.759741324+02:00",
        "crea_user": "api",
        "host": "www.lotgd.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:23.759741324+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "http",
        "title": "Legend of the Green Dragon",
        "uri_uuid": "34513130bba33e72eb20a8bc4a2dcd29ad787bbb5b99dec849141f81eca2d09f",
        "url": "http://www.lotgd.net/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:55:24.393446946+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:24.393446946+02:00",
        "modi_user": "api",
        "path": "/episode/lukas-wirth/",
        "scheme": "https",
        "title": "Rust Analyzer with Lukas Wirth :: Rustacean Station",
        "uri_uuid": "311e893fe81bcf63ede5698fd81420149dc00f5e1a2f9534874677d97c122405",
        "url": "https://rustacean-station.org/episode/lukas-wirth/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:24.525715140+02:00",
        "crea_user": "api",
        "host": "www.hl7.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:24.525715140+02:00",
        "modi_user": "api",
        "path": "/implement/standards/product_brief.cfm",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "95e3d444ec44d4f11b09f3a2696504e74b0a706530f4a44619258973fa19a21f",
        "url": "https://www.hl7.org/implement/standards/product_brief.cfm?product_id=491"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:25.044325935+02:00",
        "crea_user": "api",
        "host": "hl7.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:25.044325935+02:00",
        "modi_user": "api",
        "path": "/fhir/",
        "scheme": "http",
        "title": "-",
        "uri_uuid": "2f9f714474b8abd6816d222388c7deac2dce3bb1062e45711d24c43f9ff934bd",
        "url": "http://hl7.org/fhir/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:26.007187151+02:00",
        "crea_user": "api",
        "host": "hapifhir.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:26.007187151+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "HAPI FHIR - The Open Source FHIR API for Java",
        "uri_uuid": "6c2d0a2af57959d00e824aa84a99715c1da75f37f98f180031e20e4988a08eb6",
        "url": "https://hapifhir.io/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:55:27.036117312+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:27.036117312+02:00",
        "modi_user": "api",
        "path": "/inside-rust/2023/05/03/stabilizing-async-fn-in-trait.html",
        "scheme": "https",
        "title": "Stabilizing async fn in traits in 2023 | Inside Rust Blog",
        "uri_uuid": "44d345546f2cbe7627fca43e485dfd3796fb33025f331c4ae75ef34377c601d7",
        "url": "https://blog.rust-lang.org/inside-rust/2023/05/03/stabilizing-async-fn-in-trait.html"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T17:55:27.294523768+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:27.294523768+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-noris/events/289732648/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "f018b53044a1d27ed8e57fb3e025394e754234781d0b0f8882bbe731e055f5da",
        "url": "https://www.meetup.com/de-DE/rust-noris/events/289732648/"
    },
    {
        "auto_descr": "GitHub is where people build software. More than 100 million people use GitHub to discover, fork, and contribute to over 420 million projects.",
        "crea_time": "2024-08-29T17:55:28.105922623+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:28.105922623+02:00",
        "modi_user": "api",
        "path": "/orgs/rust-lang/projects/28/views/2",
        "scheme": "https",
        "title": "wg-async roadmap · GitHub",
        "uri_uuid": "baba513907e3c196bb99ddd25f9fb3a418c719fdb1183b23f004bd8f7221583e",
        "url": "https://github.com/orgs/rust-lang/projects/28/views/2"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:29.288453880+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:29.288453880+02:00",
        "modi_user": "api",
        "path": "/keyword-generics-initiative/",
        "scheme": "https",
        "title": "👋 Welcome - keyword generics initiative",
        "uri_uuid": "f125abdd3d70f6b1879581d8eef7e9fbe6663670588fb331ef5a51bafbb11c71",
        "url": "https://rust-lang.github.io/keyword-generics-initiative/"
    },
    {
        "auto_descr": "Beul - It executes futures.",
        "crea_time": "2024-08-29T17:55:29.537071119+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:29.537071119+02:00",
        "modi_user": "api",
        "path": "/beul/latest/beul/",
        "scheme": "https",
        "title": "beul - Rust",
        "uri_uuid": "e0c5aaf53d60f58ca2f63a020ed7ad7159c5c4642ca906a2a3924d153dced1bd",
        "url": "https://docs.rs/beul/latest/beul/"
    },
    {
        "auto_descr": "In this video we go over the various collection types in the Ruststandard library (effectively `std::collections`), and discuss a bitabout how they work, whe...",
        "crea_time": "2024-08-29T17:55:29.660130159+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:29.660130159+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Crust of Rust: std::collections - YouTube",
        "uri_uuid": "b9f6ba531304d18a4ac6746e11ba2ddf2e78fe3e9a8cb57dc6dee243245af772",
        "url": "https://www.youtube.com/watch?v=EF3Z4jdD1EQ"
    },
    {
        "auto_descr": "A contiguous growable array type, written as `Vec<T>`, short for ‘vector’.",
        "crea_time": "2024-08-29T17:55:30.272230141+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:30.272230141+02:00",
        "modi_user": "api",
        "path": "/std/vec/struct.Vec.html",
        "scheme": "https",
        "title": "Vec in std::vec - Rust",
        "uri_uuid": "80bf969ecefd7f660c2ec551089f14e9eef636b81f1f63f8f582fbb3f2f8c590",
        "url": "https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:31.293054829+02:00",
        "crea_user": "api",
        "host": "forgefed.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:31.293054829+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "ForgeFed",
        "uri_uuid": "f8a977185cbb05bfd3c54378c4b055c91938ebe54f6846300d674f7f8116b570",
        "url": "https://forgefed.org/"
    },
    {
        "auto_descr": "We are interested in the emerging systems language Rust, from Mozilla. Rusties of all skill levels are welcome, or even if you are just interested in the language. We want to get together to learn Rust and work on Rust projects of all kinds.We have a code of conduct, requiring you to be awesome to e",
        "crea_time": "2024-08-29T17:55:31.518805713+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:31.518805713+02:00",
        "modi_user": "api",
        "path": "/rust-berlin/",
        "scheme": "https",
        "title": "Rust Berlin | Meetup",
        "uri_uuid": "5f36132176e6d3f8fb03b62868c965f30026599e4e405ad84994e5b66e15ece0",
        "url": "https://www.meetup.com/rust-berlin/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:38.190469958+02:00",
        "crea_user": "api",
        "host": "berlinhackandtell.rocks",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:38.190469958+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Redirecting to https://bhnt.c-base.org",
        "uri_uuid": "061d03e7a8baeb5d059cac765ab3da197ba04e532a0900fc2ab2829f51657c5d",
        "url": "https://berlinhackandtell.rocks/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:38.446893054+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:38.446893054+02:00",
        "modi_user": "api",
        "path": "/nightly/rustc/platform-support.html",
        "scheme": "https",
        "title": "Platform Support - The rustc book",
        "uri_uuid": "0874406efbc146123f5a52c2b43ffc0f1e3cd2aa83a82e32f4502b2fd148c14c",
        "url": "https://doc.rust-lang.org/nightly/rustc/platform-support.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:38.655811432+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:38.655811432+02:00",
        "modi_user": "api",
        "path": "/stable/rustc/platform-support.html",
        "scheme": "https",
        "title": "Platform Support - The rustc book",
        "uri_uuid": "1ccd8265abbba55f7b42e7cc93ede4786f5b2f13f1328622fd8866b1fb466bc5",
        "url": "https://doc.rust-lang.org/stable/rustc/platform-support.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - History for src/doc/rustc/src/platform-support.md - rust-lang/rust",
        "crea_time": "2024-08-29T17:55:38.866369706+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:38.866369706+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/commits/master/src/doc/rustc/src/platform-support.md",
        "scheme": "https",
        "title": "History for src/doc/rustc/src/platform-support.md - rust-lang/rust · GitHub",
        "uri_uuid": "0625a84656c4bc05e3fdfef9d7bbfa32e49e991ca729aa1d05a39a3ceb238344",
        "url": "https://github.com/rust-lang/rust/commits/master/src/doc/rustc/src/platform-support.md"
    },
    {
        "auto_descr": "Last year, I set out to learn Rust mainly for applying it to embedded systems. Back then I also shared an aggregation of all that learning material I came across in the post \"35 Rust Learning Resources Every Beginner Should Know in 2022\". Ever since ...",
        "crea_time": "2024-08-29T17:55:40.325217562+02:00",
        "crea_user": "api",
        "host": "apollolabsblog.hashnode.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:40.325217562+02:00",
        "modi_user": "api",
        "path": "/58-rust-resources-every-learner-should-know-in-2023",
        "scheme": "https",
        "title": "58 Rust Resources Every Learner Should Know in 2023",
        "uri_uuid": "e2e2fa074fbb050e3f791481a103145b1d212b4721d904bca28dee48bf293731",
        "url": "https://apollolabsblog.hashnode.dev/58-rust-resources-every-learner-should-know-in-2023"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:42.792011313+02:00",
        "crea_user": "api",
        "host": "rust-lang.guide",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:42.792011313+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Introduction - Rust 101",
        "uri_uuid": "7db7cdf175f17f4c858a6925b73889054fdfc67970e3a98e820016c0e2ba3509",
        "url": "https://rust-lang.guide/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:43.064152568+02:00",
        "crea_user": "api",
        "host": "nativebyx.dev",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:43.064152568+02:00",
        "modi_user": "api",
        "path": "/rust/becoming-rustacean/rust-learning-path-from-novice-to-mastery.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "91b087365757766fb097c5ff222719c2f84da0a37b5a12e33c22c15012f98ce4",
        "url": "https://nativebyx.dev/rust/becoming-rustacean/rust-learning-path-from-novice-to-mastery.html"
    },
    {
        "auto_descr": "A list of rust lang mentors tagged by topics of interest",
        "crea_time": "2024-08-29T17:55:43.201993490+02:00",
        "crea_user": "api",
        "host": "rustbeginners.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:43.201993490+02:00",
        "modi_user": "api",
        "path": "/awesome-rust-mentors/",
        "scheme": "https",
        "title": "Awesome Rust Mentors - github | awesome-rust-mentors",
        "uri_uuid": "6a4ab7c4e78b244132ecc113854310bed70f1c05d96ec0e4c96b70d5ac0c59cf",
        "url": "https://rustbeginners.github.io/awesome-rust-mentors/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:43.494738503+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:43.494738503+02:00",
        "modi_user": "api",
        "path": "/r/golang/comments/8m4xrh/do_linux_golang_binaries_depend_on_libc/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "19c54ae62d3e64652f69b9aadbddd5fd52d3dff8c76246f7b3fc9f2c2fb479ff",
        "url": "https://www.reddit.com/r/golang/comments/8m4xrh/do_linux_golang_binaries_depend_on_libc/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:45.021164648+02:00",
        "crea_user": "api",
        "host": "llogiq.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:45.021164648+02:00",
        "modi_user": "api",
        "path": "/2020/03/07/learning.html",
        "scheme": "https",
        "title": "Yes, I am still learning Rust — Llogiq on stuff",
        "uri_uuid": "62a0b7b6fc61c73fa77ad805e4062f1368a4afe98a362a8bc68a2e34d88a8744",
        "url": "https://llogiq.github.io/2020/03/07/learning.html"
    },
    {
        "auto_descr": "`?` formatting.",
        "crea_time": "2024-08-29T17:55:45.249625299+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:45.249625299+02:00",
        "modi_user": "api",
        "path": "/std/fmt/trait.Debug.html",
        "scheme": "https",
        "title": "Debug in std::fmt - Rust",
        "uri_uuid": "e54ed0caee852adef3bd77a6c6ad509d1c041fbf62cbf2c752b5c85d32bd50f9",
        "url": "https://doc.rust-lang.org/std/fmt/trait.Debug.html"
    },
    {
        "auto_descr": "An extension trait for `Stream`s that provides a variety of convenient combinator functions.",
        "crea_time": "2024-08-29T17:55:45.767658862+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:45.767658862+02:00",
        "modi_user": "api",
        "path": "/futures/latest/futures/stream/trait.StreamExt.html",
        "scheme": "https",
        "title": "StreamExt in futures::stream - Rust",
        "uri_uuid": "a683c02a946deff3d4045bd97637962a3447f099cf1dc030da27697d03e50f16",
        "url": "https://docs.rs/futures/latest/futures/stream/trait.StreamExt.html#method.buffered"
    },
    {
        "auto_descr": "Help support this channel: https://patreon.com/jeremychone Channel focused on Rust Programming Language and Scaling Code for Cloud Application Development.- ...",
        "crea_time": "2024-08-29T17:55:46.075699307+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:46.075699307+02:00",
        "modi_user": "api",
        "path": "/@JeremyChone",
        "scheme": "https",
        "title": "Jeremy Chone - YouTube",
        "uri_uuid": "f8bab24ae38d53b4cd80e8547625a75262084530c8ea703c53534e1ca28774fb",
        "url": "https://www.youtube.com/@JeremyChone"
    },
    {
        "auto_descr": "'Zero To Production In Rust' is a hands-on introduction to backend development in Rust.",
        "crea_time": "2024-08-29T17:55:46.809885507+02:00",
        "crea_user": "api",
        "host": "www.zero2prod.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:46.809885507+02:00",
        "modi_user": "api",
        "path": "/index.html",
        "scheme": "https",
        "title": "Zero To Production In Rust - An Introduction To Backend Development",
        "uri_uuid": "4766256fd5073bbd28cc9941420c5258ea181263883030c1f0ea93005e648317",
        "url": "https://www.zero2prod.com/index.html?country=Germany&discount_code=VAT20&country_code=DE"
    },
    {
        "auto_descr": "'Zero To Production In Rust' is a hands-on introduction to backend development in Rust.",
        "crea_time": "2024-08-29T17:55:47.131241170+02:00",
        "crea_user": "api",
        "host": "www.zero2prod.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:47.131241170+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Zero To Production In Rust - An Introduction To Backend Development",
        "uri_uuid": "ac1d786e556ad64473632394165e5761c31cf2069db35370a9bbe1849c74e880",
        "url": "https://www.zero2prod.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:47.320921733+02:00",
        "crea_user": "api",
        "host": "www.manning.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:47.320921733+02:00",
        "modi_user": "api",
        "path": "/books/rust-in-action",
        "scheme": "https",
        "title": "Rust in Action",
        "uri_uuid": "a26039b39844c424ddf7ac80a3786bf7affa3261995a8444d37ad4f0240499c8",
        "url": "https://www.manning.com/books/rust-in-action"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - rust/tests/ui/weird-exprs.rs at master · rust-lang/rust",
        "crea_time": "2024-08-29T17:55:48.998491304+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:48.998491304+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/blob/master/tests/ui/weird-exprs.rs",
        "scheme": "https",
        "title": "rust/tests/ui/weird-exprs.rs at master · rust-lang/rust · GitHub",
        "uri_uuid": "92ef96296b807415a654953d67872dbbb07691865822b37ff03fbb05e768d1dc",
        "url": "https://github.com/rust-lang/rust/blob/master/tests/ui/weird-exprs.rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:50.113286890+02:00",
        "crea_user": "api",
        "host": "dtolnay.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:50.113286890+02:00",
        "modi_user": "api",
        "path": "/rust-quiz/1",
        "scheme": "https",
        "title": "Rust Quiz",
        "uri_uuid": "addb81b1abf456b327b891ebb2f047ebe939749e1c1d77a1faaba3c57805e623",
        "url": "https://dtolnay.github.io/rust-quiz/1"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:50.478914923+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:50.478914923+02:00",
        "modi_user": "api",
        "path": "/search",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "6fa322ea141dd82e0a9af1bb8b2a2e426793836e40cd3a6607e92bab7e3cb414",
        "url": "https://crates.io/search?q=daps"
    },
    {
        "auto_descr": "🦀 A peer-reviewed collection of articles/talks/repos which teach concise, idiomatic Rust. - mre/idiomatic-rust",
        "crea_time": "2024-08-29T17:55:50.739945651+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:50.739945651+02:00",
        "modi_user": "api",
        "path": "/mre/idiomatic-rust",
        "scheme": "https",
        "title": "GitHub - mre/idiomatic-rust: 🦀 A peer-reviewed collection of articles/talks/repos which teach concise, idiomatic Rust.",
        "uri_uuid": "de6d9014c4196470bd1adf29c5aca7106eea100464cf9f07ab76654c3b79eb72",
        "url": "https://github.com/mre/idiomatic-rust"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:51.472483369+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:51.472483369+02:00",
        "modi_user": "api",
        "path": "/book/",
        "scheme": "https",
        "title": "The Rust Programming Language - The Rust Programming Language",
        "uri_uuid": "e8c6879a3d069a4d2b83e80c62afb867a40f6f0834420fc29daa84b3e84cd4cd",
        "url": "https://doc.rust-lang.org/book/"
    },
    {
        "auto_descr": "List of Rust books. Contribute to sger/RustBooks development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:55:51.611089434+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:51.611089434+02:00",
        "modi_user": "api",
        "path": "/sger/RustBooks",
        "scheme": "https",
        "title": "GitHub - sger/RustBooks: List of Rust books",
        "uri_uuid": "c471174def9ffa3c6697c9c9e8505111b2defafed69d2b4fae039e03cae1200d",
        "url": "https://github.com/sger/RustBooks"
    },
    {
        "auto_descr": "Rust by Example (RBE) is a collection of runnable examples that illustrate various Rust concepts and standard libraries.",
        "crea_time": "2024-08-29T17:55:52.394102474+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:52.394102474+02:00",
        "modi_user": "api",
        "path": "/rust-by-example/",
        "scheme": "https",
        "title": "Introduction - Rust By Example",
        "uri_uuid": "50825128da1769d03e4c42d1ee6039c131e054d2d8b626f1ef01671d261fcc34",
        "url": "https://doc.rust-lang.org/rust-by-example/"
    },
    {
        "auto_descr": "Jim's solutions and tests to the rust-cli-exercises: https://github.com/JimLynchCodes/rust-cli-exercises - JimLynchCodes/rust-cli-examples",
        "crea_time": "2024-08-29T17:55:52.547600845+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:52.547600845+02:00",
        "modi_user": "api",
        "path": "/JimLynchCodes/rust-cli-examples",
        "scheme": "https",
        "title": "GitHub - JimLynchCodes/rust-cli-examples: Jim's solutions and tests to the rust-cli-exercises: https://github.com/JimLynchCodes/rust-cli-exercises",
        "uri_uuid": "a4511e6e5dc3cd10b06db78a0e3de58ad3710eb07cf85ac997ea057f78ae4d85",
        "url": "https://github.com/JimLynchCodes/rust-cli-examples"
    },
    {
        "auto_descr": "Tokio is a runtime for writing reliable asynchronous applications with Rust. It provides async I/O, networking, scheduling, timers, and more.",
        "crea_time": "2024-08-29T17:55:53.544895263+02:00",
        "crea_user": "api",
        "host": "tokio.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:53.544895263+02:00",
        "modi_user": "api",
        "path": "/tokio/tutorial/setup",
        "scheme": "https",
        "title": "Setup | Tokio - An asynchronous Rust runtime",
        "uri_uuid": "91208e328bb31332249af5dd89f709ca377cddeccfa84482369a1737fba5027e",
        "url": "https://tokio.rs/tokio/tutorial/setup"
    },
    {
        "auto_descr": "A modular, reusable university course for Rust. Contribute to trifectatechfoundation/teach-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:55:54.232101616+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:54.232101616+02:00",
        "modi_user": "api",
        "path": "/tweedegolf/101-rs",
        "scheme": "https",
        "title": "GitHub - trifectatechfoundation/teach-rs: A modular, reusable university course for Rust",
        "uri_uuid": "ac3541f59c54970a2ed729643ef808722a8ab7ae647e8d210bcfdeff32238f86",
        "url": "https://github.com/tweedegolf/101-rs"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:55:55.299117342+02:00",
        "crea_user": "api",
        "host": "google.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:55.299117342+02:00",
        "modi_user": "api",
        "path": "/comprehensive-rust/",
        "scheme": "https",
        "title": "Welcome to Comprehensive Rust 🦀 - Comprehensive Rust 🦀",
        "uri_uuid": "922d2a08a2dbcd8f45139f825529f333030e86d0ed378448174095cde5b1b6a2",
        "url": "https://google.github.io/comprehensive-rust/"
    },
    {
        "auto_descr": "A catalogue of Rust design patterns, anti-patterns and idioms",
        "crea_time": "2024-08-29T17:55:55.641566170+02:00",
        "crea_user": "api",
        "host": "rust-unofficial.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:55.641566170+02:00",
        "modi_user": "api",
        "path": "/patterns/",
        "scheme": "https",
        "title": "Introduction - Rust Design Patterns",
        "uri_uuid": "0bf37ac0893b1d304ce84f41b559d749410eda3281b0fde2b3c0dc4199b5655a",
        "url": "https://rust-unofficial.github.io/patterns/"
    },
    {
        "auto_descr": "Interested in learning a new programming language that's growing in use and popularity? Start here! Lay the foundation of knowledge you need to build fast and effective programs in Rust.",
        "crea_time": "2024-08-29T17:55:55.922576374+02:00",
        "crea_user": "api",
        "host": "learn.microsoft.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:55.922576374+02:00",
        "modi_user": "api",
        "path": "/en-us/training/paths/rust-first-steps/",
        "scheme": "https",
        "title": "Take your first steps with Rust - Training | Microsoft Learn",
        "uri_uuid": "5d80a709d59d8cb982249886e7da04442f18b9052db9602f744365772349e91b",
        "url": "https://learn.microsoft.com/en-us/training/paths/rust-first-steps/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:55:56.536879711+02:00",
        "crea_user": "api",
        "host": "newrustacean.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:56.536879711+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "New Rustacean: A Podcast About Learning Rust",
        "uri_uuid": "46f0e7e87754e3472c9ccd647a61c8b2266c9b87a711a2f713d6bd6d21d92826",
        "url": "https://newrustacean.com/"
    },
    {
        "auto_descr": "Play AreWePodcastYet and discover followers on SoundCloud | Stream tracks, albums, playlists on desktop and mobile.",
        "crea_time": "2024-08-29T17:55:57.017010782+02:00",
        "crea_user": "api",
        "host": "soundcloud.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:57.017010782+02:00",
        "modi_user": "api",
        "path": "/arewepodcastyet",
        "scheme": "https",
        "title": "Stream AreWePodcastYet | Listen to podcast episodes online for free on SoundCloud",
        "uri_uuid": "d3887b6fccc650714664f2e51261935e575670571a25d6123e409b34226876cf",
        "url": "https://soundcloud.com/arewepodcastyet"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T17:55:57.924267040+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:57.924267040+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-noris/events/292149688/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "213be627334edfca9c31510cfb9250bce61cee3ad880f39b3b0c36d204c3fa40",
        "url": "https://www.meetup.com/de-DE/rust-noris/events/292149688/"
    },
    {
        "auto_descr": "A guide to developing the Rust compiler (rustc)",
        "crea_time": "2024-08-29T17:55:59.239902755+02:00",
        "crea_user": "api",
        "host": "rustc-dev-guide.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:59.239902755+02:00",
        "modi_user": "api",
        "path": "/query.html",
        "scheme": "https",
        "title": "Queries: demand-driven compilation - Rust Compiler Development Guide",
        "uri_uuid": "70d2ef835b5e8963fa69a4c070c170d45a99b88374bdbf2e1eed62c455631583",
        "url": "https://rustc-dev-guide.rust-lang.org/query.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - Issues · rust-lang/rust",
        "crea_time": "2024-08-29T17:55:59.557118947+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:55:59.557118947+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/issues",
        "scheme": "https",
        "title": "Issues · rust-lang/rust · GitHub",
        "uri_uuid": "9ed6f61758dc93460467dc0b1601d233d5ac5d32b0f65ee73505e02184de1615",
        "url": "https://github.com/rust-lang/rust/issues?q=is%3Aissue+label%3Arust-2-breakage-wishlist+is%3Aclosed"
    },
    {
        "auto_descr": "Used to do value-to-value conversions while consuming the input value. It is the reciprocal of `Into`.",
        "crea_time": "2024-08-29T17:56:00.244328578+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:00.244328578+02:00",
        "modi_user": "api",
        "path": "/std/convert/trait.From.html",
        "scheme": "https",
        "title": "From in std::convert - Rust",
        "uri_uuid": "26644d1fc7145e5972ba21d06f20a0684e2d4ae1ff55c4c989c88cac9e2c390a",
        "url": "https://doc.rust-lang.org/std/convert/trait.From.html#impl-From%3C!%3E-for-T"
    },
    {
        "auto_descr": "For developers who’ve mastered the basics, this book is the next step on your way to professional-level programming in Rust. It covers everything you need to build and maintain larger code bases, write powerful and flexible applications and libraries, and confidently expand the scope and complexity",
        "crea_time": "2024-08-29T17:56:00.684402852+02:00",
        "crea_user": "api",
        "host": "rust-for-rustaceans.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:00.684402852+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust for Rustaceans by Jon Gjengset",
        "uri_uuid": "a278bf738f885650edc4151ff994d65098b30980b26a4e3233e644d68b6874e7",
        "url": "https://rust-for-rustaceans.com/#errata-print01-ch03-deref-inheritance"
    },
    {
        "auto_descr": "C-DEREF unambiguously says that Deref is only for smart pointers. However I've noticed (via this tweet) that there's another case where I reach out for Deref. It's not immediately clear to me who is wrong, the API guidelines or my code, ...",
        "crea_time": "2024-08-29T17:56:01.001738892+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:01.001738892+02:00",
        "modi_user": "api",
        "path": "/rust-lang/api-guidelines/issues/249",
        "scheme": "https",
        "title": "C-DEREF contradicts idiomatic API in the standard library · Issue #249 · rust-lang/api-guidelines · GitHub",
        "uri_uuid": "51817645e0f0bec1e8f96d54c31aef40e6452b5c454313be1ea8891b6707b3f7",
        "url": "https://github.com/rust-lang/api-guidelines/issues/249"
    },
    {
        "auto_descr": "A catalogue of Rust design patterns, anti-patterns and idioms",
        "crea_time": "2024-08-29T17:56:01.960992064+02:00",
        "crea_user": "api",
        "host": "rust-unofficial.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:01.960992064+02:00",
        "modi_user": "api",
        "path": "/patterns/anti_patterns/deref.html",
        "scheme": "https",
        "title": "Deref Polymorphism - Rust Design Patterns",
        "uri_uuid": "045eaae06309bb89e04b0a6d6600d674a4502785dc4f114e577653b4069b68a6",
        "url": "https://rust-unofficial.github.io/patterns/anti_patterns/deref.html#disadvantages"
    },
    {
        "auto_descr": "C-DEREF unambiguously says that Deref is only for smart pointers. However I've noticed (via this tweet) that there's another case where I reach out for Deref. It's not immediately clear to me who is wrong, the API guidelines or my code, ...",
        "crea_time": "2024-08-29T17:56:02.205673457+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:02.205673457+02:00",
        "modi_user": "api",
        "path": "/rust-lang/api-guidelines/issues/249",
        "scheme": "https",
        "title": "C-DEREF contradicts idiomatic API in the standard library · Issue #249 · rust-lang/api-guidelines · GitHub",
        "uri_uuid": "b9da5d3ba00a2ee74b04d803cd1ba527082be51027d36fba39ca2194e47f5621",
        "url": "https://github.com/rust-lang/api-guidelines/issues/249#issuecomment-904446836"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:02.657639838+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:02.657639838+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2018/08/13/never-patterns-exhaustive-matching-and-uninhabited-types-oh-my/",
        "scheme": "https",
        "title": "Never patterns, exhaustive matching, and uninhabited types (oh my!) · baby steps",
        "uri_uuid": "ebd6bef7f714a9822d810b994dbaa46b2759168b150162782a7129b34623e4c6",
        "url": "https://smallcultfollowing.com/babysteps/blog/2018/08/13/never-patterns-exhaustive-matching-and-uninhabited-types-oh-my/"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:56:03.674249407+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:03.674249407+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "2c3f70ac4659d8172e6dd3589853ecd7b4effc92799525d800c41f563077db4f",
        "url": "https://play.rust-lang.org/?version=nightly&mode=release&edition=2021&gist=bf2a0d66610e00adbae8050fabade433"
    },
    {
        "auto_descr": "What it does Warns on a |x| x pattern, which looks like a closure. Lint Name pattern_leading_pipe Category suspicious Advantage Avoids confusion of \"or\" pattern having a leading pipe (which is discarded), with a closure, enclosing argume...",
        "crea_time": "2024-08-29T17:56:03.807944742+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:03.807944742+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-clippy/issues/10717",
        "scheme": "https",
        "title": "Warn on leading pipes in patterns · Issue #10717 · rust-lang/rust-clippy · GitHub",
        "uri_uuid": "5cc2b2f2ad0993719c934c04130b28d641d2342b888c4f0ab113b0c29c2f9ecf",
        "url": "https://github.com/rust-lang/rust-clippy/issues/10717"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:56:06.129197352+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:06.129197352+02:00",
        "modi_user": "api",
        "path": "/2016/04/19/MIR.html",
        "scheme": "https",
        "title": "Introducing MIR | Rust Blog",
        "uri_uuid": "3424f89664324be4d77fa73e28d72fe75124f015988f40d97aff1aebc265bde6",
        "url": "https://blog.rust-lang.org/2016/04/19/MIR.html"
    },
    {
        "auto_descr": "A compressed span.",
        "crea_time": "2024-08-29T17:56:06.374880054+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:06.374880054+02:00",
        "modi_user": "api",
        "path": "/nightly/nightly-rustc/rustc_span/span_encoding/struct.Span.html",
        "scheme": "https",
        "title": "Span in rustc_span::span_encoding - Rust",
        "uri_uuid": "2405bf55352e698632c437712071c7916e3f89320c5c8bad0e4270cdc960a8b5",
        "url": "https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/span_encoding/struct.Span.html"
    },
    {
        "auto_descr": "AG-LCD",
        "crea_time": "2024-08-29T17:56:06.617837940+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:06.617837940+02:00",
        "modi_user": "api",
        "path": "/ag-lcd/0.1.2/ag_lcd/",
        "scheme": "https",
        "title": "ag_lcd - Rust",
        "uri_uuid": "b438c4a978fdad7e3adcf4e1c22f99802a0011b228cf7e8fd177ce5cc89aad11",
        "url": "https://docs.rs/ag-lcd/0.1.2/ag_lcd/"
    },
    {
        "auto_descr": "Instruments a function to create and enter a `tracing` span every time the function is called.",
        "crea_time": "2024-08-29T17:56:06.771557786+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:06.771557786+02:00",
        "modi_user": "api",
        "path": "/tracing/latest/tracing/attr.instrument.html",
        "scheme": "https",
        "title": "instrument in tracing - Rust",
        "uri_uuid": "6422efc5808b2e77e54464ecaee61b5750bc0e0f67fa9632c0c2281c97f7272b",
        "url": "https://docs.rs/tracing/latest/tracing/attr.instrument.html"
    },
    {
        "auto_descr": "Easily add metrics to your code that actually help you spot and debug issues in production. Built on Prometheus and OpenTelemetry. - autometrics-dev/autometrics-rs",
        "crea_time": "2024-08-29T17:56:06.936790434+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:06.936790434+02:00",
        "modi_user": "api",
        "path": "/autometrics-dev/autometrics-rs",
        "scheme": "https",
        "title": "GitHub - autometrics-dev/autometrics-rs: Easily add metrics to your code that actually help you spot and debug issues in production. Built on Prometheus and OpenTelemetry.",
        "uri_uuid": "612e23d05106ad1abc625c5bf505c7906e4c90dfc983a1c7e9fa366e2ad7f9ba",
        "url": "https://github.com/autometrics-dev/autometrics-rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:07.699490077+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:07.699490077+02:00",
        "modi_user": "api",
        "path": "/good-praxis/server-cruncher",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "7709e2c2fbff6b6d77ed88af184ebf3bde33fe08eca354a7d14e36ca925e5d39",
        "url": "https://github.com/good-praxis/server-cruncher"
    },
    {
        "auto_descr": "submissions for the protohackers challenge. Contribute to ivomurrell/protohackers development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:07.973929249+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:07.973929249+02:00",
        "modi_user": "api",
        "path": "/ivomurrell/protohackers/blob/main/src/problems/p05.rs",
        "scheme": "https",
        "title": "protohackers/src/problems/p05.rs at main · ivomurrell/protohackers · GitHub",
        "uri_uuid": "2adb3efc4e67da0ff18741c160f9e4dcdcc772581aa3aaafcf57497a9b8a1d1f",
        "url": "https://github.com/ivomurrell/protohackers/blob/main/src/problems/p05.rs#L94"
    },
    {
        "auto_descr": "A bunch of lints to catch common mistakes and improve your Rust code. Book: https://doc.rust-lang.org/clippy/ - Issues · rust-lang/rust-clippy",
        "crea_time": "2024-08-29T17:56:08.897637527+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:08.897637527+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-clippy/issues",
        "scheme": "https",
        "title": "Issues · rust-lang/rust-clippy · GitHub",
        "uri_uuid": "36f0bd6ec0d2ee384f8cc1ac109e5e092dd78ef63a2c27911f90a39341f83625",
        "url": "https://github.com/rust-lang/rust-clippy/issues?q=is%3Aopen+is%3Aissue+label%3Agood-first-issue+no%3Aassignee"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - rust/CONTRIBUTING.md at master · rust-lang/rust",
        "crea_time": "2024-08-29T17:56:09.724384904+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:09.724384904+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/blob/master/CONTRIBUTING.md",
        "scheme": "https",
        "title": "rust/CONTRIBUTING.md at master · rust-lang/rust · GitHub",
        "uri_uuid": "a99bda1d686392e39f60c732b50ba16732ef9149d54a340c320f031da4eb5f0d",
        "url": "https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md"
    },
    {
        "auto_descr": "@rustbot label +A-docs\nr? docs",
        "crea_time": "2024-08-29T17:56:10.434859897+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:10.434859897+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/110065",
        "scheme": "https",
        "title": "Fix wrong type in docs: i16 -> u16 by jbethune · Pull Request #110065 · rust-lang/rust · GitHub",
        "uri_uuid": "b2b1c9e00a21e7d2e15dd5758c159d780969aacb201b0c1953ef50e7879112f3",
        "url": "https://github.com/rust-lang/rust/pull/110065#event-8957531335"
    },
    {
        "auto_descr": "convert harmonica tabs to kalimba tabs. Contribute to Seebass22/harmonica-to-kalimba-tab development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:11.513730545+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:11.513730545+02:00",
        "modi_user": "api",
        "path": "/Seebass22/harmonica-to-kalimba-tab",
        "scheme": "https",
        "title": "GitHub - Seebass22/harmonica-to-kalimba-tab: convert harmonica tabs to kalimba tabs",
        "uri_uuid": "3ee7a1d17435f52063ed9af8b98f5f71d93498e03e8dfc13863c3d4d5ee50cd8",
        "url": "https://github.com/Seebass22/harmonica-to-kalimba-tab"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:56:12.705220600+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:12.705220600+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "0d3add423d4f879b0d2da7820293194077f67e9a476f3e3e01ebb6c3617bab5f",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a37d7014d6f9c7cf2f2f0a090b4b748f"
    },
    {
        "auto_descr": "It is thankfully common wisdom nowadays that documentation must be placed as near as possible to the code it documents, and should be fine-grained to a minimal unit of describability (the thing being documented). The practice provides numerous benefits to the codebase and project as a whole:",
        "crea_time": "2024-08-29T17:56:12.803358243+02:00",
        "crea_user": "api",
        "host": "sabrinajewson.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:12.803358243+02:00",
        "modi_user": "api",
        "path": "/blog/errors",
        "scheme": "https",
        "title": "Modular Errors in Rust - Sabrina Jewson",
        "uri_uuid": "0facf45de8e1e9503e2299e9fb486efb3fa846772dad5c29c2e140e26d38ee97",
        "url": "https://sabrinajewson.org/blog/errors"
    },
    {
        "auto_descr": "It is thankfully common wisdom nowadays that documentation must be placed as near as possible to the code it documents, and should be fine-grained to a minimal unit of describability (the thing being documented). The practice provides numerous benefits to the codebase and project as a whole:",
        "crea_time": "2024-08-29T17:56:13.312901698+02:00",
        "crea_user": "api",
        "host": "sabrinajewson.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:13.312901698+02:00",
        "modi_user": "api",
        "path": "/blog/errors",
        "scheme": "https",
        "title": "Modular Errors in Rust - Sabrina Jewson",
        "uri_uuid": "b6a27d249e2e79ec70401f391040a3bb7f4ee36e34d5767e5997071332dd24c9",
        "url": "https://sabrinajewson.org/blog/errors#blocks-txt"
    },
    {
        "auto_descr": "Tokio is a runtime for writing reliable asynchronous applications with Rust. It provides async I/O, networking, scheduling, timers, and more.",
        "crea_time": "2024-08-29T17:56:13.700110967+02:00",
        "crea_user": "api",
        "host": "tokio.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:13.700110967+02:00",
        "modi_user": "api",
        "path": "/blog/2019-08-tracing",
        "scheme": "https",
        "title": "Diagnostics with Tracing | Tokio - An asynchronous Rust runtime",
        "uri_uuid": "e9e2261a257c27556ef26e891568ead8bb4bed076a5b2fabd8bda627f8909f12",
        "url": "https://tokio.rs/blog/2019-08-tracing"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T17:56:14.344101688+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:14.344101688+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-and-c-plus-plus-in-cardiff/events/292410256/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "865aaf02f1013733862c506dff7509accf0a1628878bfd0813720b82903574bb",
        "url": "https://www.meetup.com/de-DE/rust-and-c-plus-plus-in-cardiff/events/292410256/"
    },
    {
        "auto_descr": "Rust is a new exciting programming language with many innovative ideas and features. This group is for all people interesting in Rust in Munich (or outside).",
        "crea_time": "2024-08-29T17:56:14.790978521+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:14.790978521+02:00",
        "modi_user": "api",
        "path": "/rust-munich/",
        "scheme": "https",
        "title": "Rust Munich | Meetup",
        "uri_uuid": "3a40bfd0e256e6abf91136513cd5b80a539d4122c6d560f765ca6a6e5192a8ff",
        "url": "https://www.meetup.com/rust-munich/"
    },
    {
        "auto_descr": "Let's talk Rust!What's new in the Rust world? What ideas and projects have you been working on? Join, meet new people and discuss :)Rust brings a breath of fresh air to the world of systems programming to make it enjoyable, fearless, and fun - yet also robust, rigorous, and safe! As Rust aims to emp",
        "crea_time": "2024-08-29T17:56:14.950893332+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:14.950893332+02:00",
        "modi_user": "api",
        "path": "/rust-noris/",
        "scheme": "https",
        "title": "Rust Nuremberg | Meetup",
        "uri_uuid": "c0c2978b1253192be1448d00864b42f92a79a3f14e59b081de5950aeeb6d362e",
        "url": "https://www.meetup.com/rust-noris/"
    },
    {
        "auto_descr": "PX16C an HP16C Programmers Calculator Emulator from HobbyStone on Tindie",
        "crea_time": "2024-08-29T17:56:15.149536635+02:00",
        "crea_user": "api",
        "host": "www.tindie.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:15.149536635+02:00",
        "modi_user": "api",
        "path": "/products/hobbystone/px16c-an-hp16c-programmers-calculator-emulator/",
        "scheme": "https",
        "title": "PX16C an HP16C Programmers Calculator Emulator from HobbyStone on Tindie",
        "uri_uuid": "8a975af19f54eef83a803e7eb4baec46d27310e60e123bd671c2c0b56424998b",
        "url": "https://www.tindie.com/products/hobbystone/px16c-an-hp16c-programmers-calculator-emulator/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:17.290667926+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:17.290667926+02:00",
        "modi_user": "api",
        "path": "/378/",
        "scheme": "https",
        "title": "xkcd: Real Programmers",
        "uri_uuid": "7c3fd8f26fc86d6cb63b47cdc3e913664109dfe7d978817c9d2f0264a18b1f65",
        "url": "https://xkcd.com/378/"
    },
    {
        "auto_descr": "An introduction to the axum + Yew stack. Contribute to iodapson/axum-Yew development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:17.712178150+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:17.712178150+02:00",
        "modi_user": "api",
        "path": "/iodapson/axum-Yew/blob/main/slide/axum-slide.md",
        "scheme": "https",
        "title": "axum-Yew/slide/axum-slide.md at main · iodapson/axum-Yew · GitHub",
        "uri_uuid": "ce307b7e75de2ec14bd277f017f870aa4681117c57f5c0e24e9bca0665f94269",
        "url": "https://github.com/iodapson/axum-Yew/blob/main/slide/axum-slide.md"
    },
    {
        "auto_descr": "Build, bundle & ship your Rust WASM application to the web. - trunk-rs/trunk",
        "crea_time": "2024-08-29T17:56:18.611555658+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:18.611555658+02:00",
        "modi_user": "api",
        "path": "/thedodd/trunk",
        "scheme": "https",
        "title": "GitHub - trunk-rs/trunk: Build, bundle & ship your Rust WASM application to the web.",
        "uri_uuid": "6be4c00accfbb5ab587af4115449018ede7b9c471ccb70688d7873c7946fe753",
        "url": "https://github.com/thedodd/trunk#readme"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:19.466521896+02:00",
        "crea_user": "api",
        "host": "trunkrs.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:19.466521896+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Trunk | Build, bundle & ship your Rust WASM application to the web",
        "uri_uuid": "84dc003ca1a237043401c58bdfd69315f36534c8e09fe3f7094d455efdc12114",
        "url": "https://trunkrs.dev/"
    },
    {
        "auto_descr": "Function components are a simplified version of normal components. They consist of a single function annotated with the attribute `#[function_component]` that receives props and determines what should be rendered by returning `Html`.",
        "crea_time": "2024-08-29T17:56:19.715727672+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:19.715727672+02:00",
        "modi_user": "api",
        "path": "/yew/latest/yew/functional/index.html",
        "scheme": "https",
        "title": "yew::functional - Rust",
        "uri_uuid": "491e3f27161dbdf9d1d9adedcbcbe0762e4749abe7c143f46c291a86bd600909",
        "url": "https://docs.rs/yew/latest/yew/functional/index.html"
    },
    {
        "auto_descr": "Describe the bug I'm trying to add a custom highlighting color to JSX elements, but am failing to do so. I have the following query in after/queries/javascript/highlights.scm: (jsx_text) @function But when I open Neovim, then I get this ...",
        "crea_time": "2024-08-29T17:56:19.863496488+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:19.863496488+02:00",
        "modi_user": "api",
        "path": "/nvim-treesitter/nvim-treesitter/issues/94",
        "scheme": "https",
        "title": "How to highlight JSX elements? · Issue #94 · nvim-treesitter/nvim-treesitter · GitHub",
        "uri_uuid": "647acc574b0207ea83c9d4d5a7204557f73bf43455465f429d4705415df4f233",
        "url": "https://github.com/nvim-treesitter/nvim-treesitter/issues/94#issuecomment-808945946"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:56:21.146263222+02:00",
        "crea_user": "api",
        "host": "guide.elm-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:21.146263222+02:00",
        "modi_user": "api",
        "path": "/architecture/",
        "scheme": "https",
        "title": "The Elm Architecture · An Introduction to Elm",
        "uri_uuid": "c8a9b24eeda50edac380d575f8ab5b9135ac0fbae9e9d371cdbe28716f973806",
        "url": "https://guide.elm-lang.org/architecture/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:56:21.733669530+02:00",
        "crea_user": "api",
        "host": "iodapson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:21.733669530+02:00",
        "modi_user": "api",
        "path": "/yew-reference/chapter_20.html",
        "scheme": "https",
        "title": "Using Callback for handling (sending-recieving) text input data - Yew Reference",
        "uri_uuid": "673f91ea3d9791278639381e28ad1189ce3451addb93530f53bc814a1062d9ba",
        "url": "https://iodapson.github.io/yew-reference/chapter_20.html"
    },
    {
        "auto_descr": "Style web components written in Rust with ease. Contribute to lukidoescode/css-in-rust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:22.012668359+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:22.012668359+02:00",
        "modi_user": "api",
        "path": "/lukidoescode/css-in-rust",
        "scheme": "https",
        "title": "GitHub - lukidoescode/css-in-rust: Style web components written in Rust with ease.",
        "uri_uuid": "daccb2afd360295464f4b85039c32ff0377156457ac33fb97be70e3c6e600f7f",
        "url": "https://github.com/lukidoescode/css-in-rust"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:56:23.092971056+02:00",
        "crea_user": "api",
        "host": "iodapson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:23.092971056+02:00",
        "modi_user": "api",
        "path": "/yew-reference/chapter_11.html",
        "scheme": "https",
        "title": "External .css stylesheet with Yew - Yew Reference",
        "uri_uuid": "6e1735ef1e556783157596f5af03ff09f25afad8ff94db960f341a8e05f09927",
        "url": "https://iodapson.github.io/yew-reference/chapter_11.html"
    },
    {
        "auto_descr": "Over the last six months, frontend frameworks written in Rust and WebAssembly have begun overturning the old narrative that WASM is too slow for DOM renderin...",
        "crea_time": "2024-08-29T17:56:23.378554308+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:23.378554308+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "The Truth about Rust/WebAssembly Performance - YouTube",
        "uri_uuid": "cc95dfc2cfa00e8dc0672458bf3cf3cfd97936b98c37b83edd901d38fa871829",
        "url": "https://www.youtube.com/watch?v=4KtotxNAwME"
    },
    {
        "auto_descr": "When we have DOM access inside wasm Features!?",
        "crea_time": "2024-08-29T17:56:23.959429294+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:23.959429294+02:00",
        "modi_user": "api",
        "path": "/WebAssembly/component-model/issues/31",
        "scheme": "https",
        "title": "DOM · Issue #31 · WebAssembly/component-model · GitHub",
        "uri_uuid": "2ae769becfcfa02c7993d29abee6030593dafba9064eef385fecb4341285d521",
        "url": "https://github.com/WebAssembly/component-model/issues/31"
    },
    {
        "auto_descr": "This issue tracks discussion of the memory.discard sub-proposal. This proposal is one possible component of the eventual Memory Control MVP. Please make sure to read the full sub-proposal document. This issue previously tracked discussio...",
        "crea_time": "2024-08-29T17:56:25.009194478+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:25.009194478+02:00",
        "modi_user": "api",
        "path": "/WebAssembly/memory-control/issues/6",
        "scheme": "https",
        "title": "Sub-proposal: `memory.discard` · Issue #6 · WebAssembly/memory-control · GitHub",
        "uri_uuid": "1ceddee71cc787fba335dd1da4300c7863dcd7cd2dc7192b405f4090b67a542c",
        "url": "https://github.com/WebAssembly/memory-control/issues/6"
    },
    {
        "auto_descr": "Make your app faster",
        "crea_time": "2024-08-29T17:56:26.124337732+02:00",
        "crea_user": "api",
        "host": "yew.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:26.124337732+02:00",
        "modi_user": "api",
        "path": "/docs/next/advanced-topics/optimizations",
        "scheme": "https",
        "title": "Optimizations & Best Practices | Yew",
        "uri_uuid": "30e42d00ab6a520d92f5488ff4e0cb988a41d7b21e9643c88948750edf903cc7",
        "url": "https://yew.rs/docs/next/advanced-topics/optimizations#build-size-of-minimal-example-in-yewexamples"
    },
    {
        "auto_descr": "The router type for composing handlers and services.",
        "crea_time": "2024-08-29T17:56:26.647013295+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:26.647013295+02:00",
        "modi_user": "api",
        "path": "/axum/latest/axum/struct.Router.html",
        "scheme": "https",
        "title": "Router in axum - Rust",
        "uri_uuid": "70eb66ff9d925320eb5adff8b14d509e9a96654f010a99395f75552c8bfb796c",
        "url": "https://docs.rs/axum/latest/axum/struct.Router.html#method.into_make_service"
    },
    {
        "auto_descr": "🦀 How to minimize Rust binary size 📦. Contribute to johnthagen/min-sized-rust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:27.070595453+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:27.070595453+02:00",
        "modi_user": "api",
        "path": "/johnthagen/min-sized-rust",
        "scheme": "https",
        "title": "GitHub - johnthagen/min-sized-rust: 🦀 How to minimize Rust binary size 📦",
        "uri_uuid": "6239964e57022f607f961b530b039d7a766152db5a5f1ad2f8939642a099ffa7",
        "url": "https://github.com/johnthagen/min-sized-rust"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:56:27.899219353+02:00",
        "crea_user": "api",
        "host": "rustwasm.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:27.899219353+02:00",
        "modi_user": "api",
        "path": "/docs/book/reference/code-size.html",
        "scheme": "https",
        "title": "Shrinking .wasm Size - Rust and WebAssembly",
        "uri_uuid": "e3ab713d9c34104b18b8990120275ab0aac736fd4542dd045a2b09fd94f212f5",
        "url": "https://rustwasm.github.io/docs/book/reference/code-size.html"
    },
    {
        "auto_descr": "axum is a web application framework that focuses on ergonomics and modularity.",
        "crea_time": "2024-08-29T17:56:28.926903135+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:28.926903135+02:00",
        "modi_user": "api",
        "path": "/axum/latest/axum/",
        "scheme": "https",
        "title": "axum - Rust",
        "uri_uuid": "a0154c9363238a0203376137025edda091e19a571dc9660c88867f26d93e0101",
        "url": "https://docs.rs/axum/latest/axum/#reexports"
    },
    {
        "auto_descr": "🐚 An async & dynamic ORM for Rust. Contribute to SeaQL/sea-orm development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:29.192089882+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:29.192089882+02:00",
        "modi_user": "api",
        "path": "/SeaQL/sea-orm",
        "scheme": "https",
        "title": "GitHub - SeaQL/sea-orm: 🐚 An async & dynamic ORM for Rust",
        "uri_uuid": "0beba57c02b2f6cb7f5b69bb4f481bf45e7585de1cfb982279a90232829c8551",
        "url": "https://github.com/SeaQL/sea-orm#features"
    },
    {
        "auto_descr": "Let's look at a simple Cake entity.",
        "crea_time": "2024-08-29T17:56:29.980617864+02:00",
        "crea_user": "api",
        "host": "www.sea-ql.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:29.980617864+02:00",
        "modi_user": "api",
        "path": "/SeaORM/docs/generate-entity/entity-structure/",
        "scheme": "https",
        "title": "Entity Structure | SeaORM 🐚 An async & dynamic ORM for Rust",
        "uri_uuid": "73e80cf41c556492c825ee24bb9ebc97231b2c9e1adeb3b381e341b40a37afb9",
        "url": "https://www.sea-ql.org/SeaORM/docs/generate-entity/entity-structure/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:30.311877673+02:00",
        "crea_user": "api",
        "host": "git-scm.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:30.311877673+02:00",
        "modi_user": "api",
        "path": "/book/en/v2/Git-Tools-Rewriting-History",
        "scheme": "https",
        "title": "Git - Rewriting History",
        "uri_uuid": "dfc357f9eaa0eb112befcc5abb7e0de3c673b4f407011c6eb286b5a3351f21f1",
        "url": "https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_removing_file_every_commit"
    },
    {
        "auto_descr": "Josh Choo's blog",
        "crea_time": "2024-08-29T17:56:30.919944112+02:00",
        "crea_user": "api",
        "host": "joshchoo.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:30.919944112+02:00",
        "modi_user": "api",
        "path": "/writing/how-actix-web-app-state-and-data-extractor-works",
        "scheme": "https",
        "title": "How actix-web's application state and Data extractor works internally",
        "uri_uuid": "1f0b884d4f21b517e9d672a7758c877e99a4665911a10606a5970853f38af5d2",
        "url": "https://joshchoo.com/writing/how-actix-web-app-state-and-data-extractor-works"
    },
    {
        "auto_descr": "Contribute to janpauldahlke/actix-berline-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:31.205393705+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:31.205393705+02:00",
        "modi_user": "api",
        "path": "/janpauldahlke/actix-berline-rs",
        "scheme": "https",
        "title": "GitHub - janpauldahlke/actix-berline-rs",
        "uri_uuid": "22f903023c6d60f90303d7cf0403152a925c6cb521afb23f99d413794ed6238b",
        "url": "https://github.com/janpauldahlke/actix-berline-rs"
    },
    {
        "auto_descr": "General discussion of The Rust Programming Language",
        "crea_time": "2024-08-29T17:56:32.144185656+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:32.144185656+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "The Rust Programming Language Forum",
        "uri_uuid": "53a411cc8537e416dc27c68e2bf0aa75f874e8f3eb67ca3ea7eba46b6cd0e884",
        "url": "https://users.rust-lang.org/"
    },
    {
        "auto_descr": "An open-source creative-coding framework for Rust",
        "crea_time": "2024-08-29T17:56:33.715741793+02:00",
        "crea_user": "api",
        "host": "nannou.cc",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:33.715741793+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Home | Nannou",
        "uri_uuid": "557661cc0eb4218a9e8f39f6d8f0ff038df8282ab4a96cc7152c2952f08d24a5",
        "url": "https://nannou.cc/"
    },
    {
        "auto_descr": "visualize notes being played on harmonica in real-time - Seebass22/tab-visualizer",
        "crea_time": "2024-08-29T17:56:34.920248641+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:34.920248641+02:00",
        "modi_user": "api",
        "path": "/Seebass22/tab-visualizer",
        "scheme": "https",
        "title": "GitHub - Seebass22/tab-visualizer: visualize notes being played on harmonica in real-time",
        "uri_uuid": "f5e1c5406cea5534b778da0479fde3917e97691b43e79b0ff0ef5e308a47b8c3",
        "url": "https://github.com/Seebass22/tab-visualizer"
    },
    {
        "auto_descr": "I like to suggest a pull request to make the default functions like ModelFn, UpdateFn, etc... usable as a closure.\nRelated: #793\nIt is a very easy fix and we gain much more flexibility in developin...",
        "crea_time": "2024-08-29T17:56:35.789187258+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:35.789187258+02:00",
        "modi_user": "api",
        "path": "/nannou-org/nannou/pull/899",
        "scheme": "https",
        "title": "making default functions to closures by thinkrapido · Pull Request #899 · nannou-org/nannou · GitHub",
        "uri_uuid": "0f21d37c0ba43a027df58a6bf8ee77d3396db0deffd28466a8df5129904c8d22",
        "url": "https://github.com/nannou-org/nannou/pull/899"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:36.753076442+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:36.753076442+02:00",
        "modi_user": "api",
        "path": "/crates/qoiconv-rs",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f10cfaccd0dc150dcd02ccfab9f9e1003788755b8cebc45045473ca335dbc252",
        "url": "https://crates.io/crates/qoiconv-rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:36.983964451+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:36.983964451+02:00",
        "modi_user": "api",
        "path": "/v0.5-rc/guide/upgrading/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "cdd17240ddead0a5efdce30cc12d8bd85536d7d71bbb28c41e7c206fe4a783b1",
        "url": "https://rocket.rs/v0.5-rc/guide/upgrading/#default-ranks"
    },
    {
        "auto_descr": "Rocket is a web framework for the Rust\n      programming language that makes it simple to write fast web applications\n      without sacrificing flexibility or type safety.",
        "crea_time": "2024-08-29T17:56:37.235125011+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:37.235125011+02:00",
        "modi_user": "api",
        "path": "/v0.4/guide/requests/",
        "scheme": "https",
        "title": " Requests - Rocket Web Framework ",
        "uri_uuid": "6eef02d6de5f598af9ddc9fedaf0ffb79947bb793372a6453b2cb99fe48e1743",
        "url": "https://rocket.rs/v0.4/guide/requests/#forwarding"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:37.599369168+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:37.599369168+02:00",
        "modi_user": "api",
        "path": "/v0.5-rc/guide/requests/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "724e0bfabf77b325539b33337a879ba1dc2555b59d630b265fc9d9ea6e136eca",
        "url": "https://rocket.rs/v0.5-rc/guide/requests/#forms"
    },
    {
        "auto_descr": "Sergio's Personal Page",
        "crea_time": "2024-08-29T17:56:37.791524236+02:00",
        "crea_user": "api",
        "host": "sergio.bz",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:37.791524236+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Sergio Benitez - Who Am I?",
        "uri_uuid": "bb4b3c99a29097087b3c75a5cc2fde17ce07b3ae28e778b0e0023d05cc93b22d",
        "url": "https://sergio.bz/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:38.737901365+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:38.737901365+02:00",
        "modi_user": "api",
        "path": "/blog/2023/02/15/this-week-in-rust-482/",
        "scheme": "https",
        "title": "This Week in Rust 482  · This Week in Rust\n",
        "uri_uuid": "4da26e27fee3fcfb31eaaa85495f58b85446320019bcaff8cdff8504c71864d9",
        "url": "https://this-week-in-rust.org/blog/2023/02/15/this-week-in-rust-482/"
    },
    {
        "auto_descr": "The current implementation can leave behind projections that are moved out several times.\nThis PR widens the check to turn such moves into copies: a move out of a projection of a copy is equivalent...",
        "crea_time": "2024-08-29T17:56:39.013610497+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:39.013610497+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/107662",
        "scheme": "https",
        "title": "Turn projections into copies in CopyProp. by cjgillot · Pull Request #107662 · rust-lang/rust · GitHub",
        "uri_uuid": "6adfe7856582632bae15d0f0b699044b115f7f157df39c5098340ff2d011cc3e",
        "url": "https://github.com/rust-lang/rust/pull/107662"
    },
    {
        "auto_descr": "See the ACP for an overview of the API: rust-lang/libs-team#141\nThe implementation is split into 2 commits:\n\nThe first changes the internal insertion functions to return a handle to the newly inser...",
        "crea_time": "2024-08-29T17:56:40.310815367+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:40.310815367+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/105641",
        "scheme": "https",
        "title": "Implement cursors for BTreeMap by Amanieu · Pull Request #105641 · rust-lang/rust · GitHub",
        "uri_uuid": "91e3f44fc7a3e5a50da4d6ce70029a63cfa451409fac77ff23e35d629d45f8c2",
        "url": "https://github.com/rust-lang/rust/pull/105641"
    },
    {
        "auto_descr": "Another PR in the series of stable sort improvements. Best reviewed by looking at the individual commits.\nThe main perf gain here is for fully ascending (sorted) or reversed inputs for cheap to com...",
        "crea_time": "2024-08-29T17:56:41.591864288+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:41.591864288+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/107191",
        "scheme": "https",
        "title": "Reverse Timsort scan direction by Voultapher · Pull Request #107191 · rust-lang/rust · GitHub",
        "uri_uuid": "d1536d7489900f156028eeb9f3075f369b1f4244a0cadffafd4b0439472984a8",
        "url": "https://github.com/rust-lang/rust/pull/107191"
    },
    {
        "auto_descr": "slice::sort_unstable will fall back to heapsort if it repeatedly fails to find a good pivot. By making the core child update code branchless it is much faster. On Zen3 sorting 10k u64 and forcing t...",
        "crea_time": "2024-08-29T17:56:43.141847478+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:43.141847478+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/107894",
        "scheme": "https",
        "title": "Speedup heapsort by 1.8x by making it branchless by Voultapher · Pull Request #107894 · rust-lang/rust · GitHub",
        "uri_uuid": "153759dfd6ff07a438e268bb341f6adf571fb0931a9fe5a411c60ad24554fd15",
        "url": "https://github.com/rust-lang/rust/pull/107894"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:44.556359182+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:44.556359182+02:00",
        "modi_user": "api",
        "path": "/blog/2023/02/22/this-week-in-rust-483/",
        "scheme": "https",
        "title": "This Week in Rust 483  · This Week in Rust\n",
        "uri_uuid": "4392c4ba6a48d7668decbf34239ced2210a7bc9945f3fa1f11393ff90d49f101",
        "url": "https://this-week-in-rust.org/blog/2023/02/22/this-week-in-rust-483/"
    },
    {
        "auto_descr": "r? @tmiasko\n@rustbot label +A-mir-opt",
        "crea_time": "2024-08-29T17:56:45.028114656+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:45.028114656+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/107449",
        "scheme": "https",
        "title": "Enable CopyProp by saethlin · Pull Request #107449 · rust-lang/rust · GitHub",
        "uri_uuid": "e57259baec45e86461c452eed5776af9409c4ed6df4c403b88840f92d5ed1af5",
        "url": "https://github.com/rust-lang/rust/pull/107449"
    },
    {
        "auto_descr": "instcombine used to contain this comment, which is no longer accurate because there it is fine to copy &mut _ in MIR:\n// The dereferenced place must have type `&_`, so that we don't copy `&mut _`.\n...",
        "crea_time": "2024-08-29T17:56:46.636259219+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:46.636259219+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/105274",
        "scheme": "https",
        "title": "Enable instcombine for mutable reborrows by saethlin · Pull Request #105274 · rust-lang/rust · GitHub",
        "uri_uuid": "f0e278646f128933e9936ab8e4f657307c3001b1cbeaca489e9b2d7d717895dd",
        "url": "https://github.com/rust-lang/rust/pull/105274"
    },
    {
        "auto_descr": "This replaces the existing Levenshtein algorithm with the Damerau-Levenshtein algorithm. This means that \"ab\" to \"ba\" is one change (a transposition) instead of two (a deletion and insertion). More...",
        "crea_time": "2024-08-29T17:56:48.174835848+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:48.174835848+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/108200",
        "scheme": "https",
        "title": "Use restricted Damerau-Levenshtein distance for diagnostics by jhpratt · Pull Request #108200 · rust-lang/rust · GitHub",
        "uri_uuid": "c0936c209aae3257a7e6e9b91c9accbffa01c53a1ce473cfb4228b495713c751",
        "url": "https://github.com/rust-lang/rust/pull/108200"
    },
    {
        "auto_descr": "This allows to skip an unnecessary buffer initialization.\nFixes #108223.",
        "crea_time": "2024-08-29T17:56:49.878035121+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:49.878035121+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/108235",
        "scheme": "https",
        "title": "Use custom implementation of read_buf in Read for &'a FileDesc by tmiasko · Pull Request #108235 · rust-lang/rust · GitHub",
        "uri_uuid": "858123475478f79bb7f661f3dedbd7e2bdf7b54e499536a43c5bbd57935e4391",
        "url": "https://github.com/rust-lang/rust/pull/108235"
    },
    {
        "auto_descr": "This implements a couple Iterator methods on vec_deque::IntoIter ((try_)fold, (try_)rfold advance_(back_)by, next_chunk, count and last) to allow these to be more efficient than their default imple...",
        "crea_time": "2024-08-29T17:56:51.218482950+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:51.218482950+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/106241",
        "scheme": "https",
        "title": "Implement more methods for `vec_deque::IntoIter` by Sp00ph · Pull Request #106241 · rust-lang/rust · GitHub",
        "uri_uuid": "0917f45dc3e54c5dfaf6a7cee5a8beab84366c97bca306cd0af173291a8c79d0",
        "url": "https://github.com/rust-lang/rust/pull/106241"
    },
    {
        "auto_descr": "More than 100 all new limericks about Rust. Delivered by the Rust bard himself. Ukulele included.",
        "crea_time": "2024-08-29T17:56:52.907301617+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:52.907301617+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust in Rhymes II - Andre Bogus - YouTube",
        "uri_uuid": "82070e7a0cf9e8016dee39f984574201280ffdf0a8715b18ee3d9dbf2b841209",
        "url": "https://www.youtube.com/watch?v=rwH57zNm-A8"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:53.630855193+02:00",
        "crea_user": "api",
        "host": "llogiq.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:53.630855193+02:00",
        "modi_user": "api",
        "path": "/2023/02/19/rhymes2.html",
        "scheme": "https",
        "title": "Rust in Rhymes II explainer — Llogiq on stuff",
        "uri_uuid": "f4bdc424f1a6a2b4432205f82aefaeaca426a86812fd6fa5ce68e23b6dd84e8e",
        "url": "https://llogiq.github.io/2023/02/19/rhymes2.html"
    },
    {
        "auto_descr": "Demo Rust / VueJS+element-plus. Contribute to frehberg/rust-vue-demo development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:53.919961948+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:53.919961948+02:00",
        "modi_user": "api",
        "path": "/frehberg/rust-vue-demo",
        "scheme": "https",
        "title": "GitHub - frehberg/rust-vue-demo: Demo Rust / VueJS+element-plus",
        "uri_uuid": "acb0e856cebd8208a8d58e93a1f4fd7a8232b788a0c5303af8929a090d948334",
        "url": "https://github.com/frehberg/rust-vue-demo"
    },
    {
        "auto_descr": "A version of SEGA's 1990 game for the terminal, written in Rust! - Rendez/rust_columns",
        "crea_time": "2024-08-29T17:56:54.746072885+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:54.746072885+02:00",
        "modi_user": "api",
        "path": "/Rendez/rust_columns",
        "scheme": "https",
        "title": "GitHub - Rendez/rust_columns: A version of SEGA's 1990 game for the terminal, written in Rust!",
        "uri_uuid": "dc68960fea3433915a6e28eaa9ed743e5cd0ab00871c2febc144e775219af6e4",
        "url": "https://github.com/Rendez/rust_columns"
    },
    {
        "auto_descr": "Download Element, an end-to-end encrypted secure messenger and collaboration app with voice and video chat. Available on Web, Android, iOS, macOS, Windows & Linux.",
        "crea_time": "2024-08-29T17:56:55.535586302+02:00",
        "crea_user": "api",
        "host": "element.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:55.535586302+02:00",
        "modi_user": "api",
        "path": "/download",
        "scheme": "https",
        "title": "Download Element",
        "uri_uuid": "7bf3dc710f71dd95a32a6c636e0db34b2fed0ebdb09af3e58df48ed204abd84d",
        "url": "https://element.io/download"
    },
    {
        "auto_descr": "Zero-sized type used to mark things that “act like” they own a `T`.",
        "crea_time": "2024-08-29T17:56:55.888837060+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:55.888837060+02:00",
        "modi_user": "api",
        "path": "/std/marker/struct.PhantomData.html",
        "scheme": "https",
        "title": "PhantomData in std::marker - Rust",
        "uri_uuid": "7a28edf423ac877e43982ceb4dc1e5ab5b667f7b5fa9c9f0611344adc95779f3",
        "url": "https://doc.rust-lang.org/std/marker/struct.PhantomData.html"
    },
    {
        "auto_descr": "Hey All, \nThis one has me stumped. I&#39;m trying to write a generic function that takes a vector of integers and converts them to f64 by applying an offset and scaling factor. The integers can be signed or unsigned, of any &hellip;",
        "crea_time": "2024-08-29T17:56:56.117110869+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:56.117110869+02:00",
        "modi_user": "api",
        "path": "/t/generic-numeric-conversion/37052/5",
        "scheme": "https",
        "title": "Generic numeric conversion - #5 by fpagliughi - help - The Rust Programming Language Forum",
        "uri_uuid": "869d1e36453c973ba550d8aaaf22e1bfd989d7812240918af63acfdd00085bba",
        "url": "https://users.rust-lang.org/t/generic-numeric-conversion/37052/5"
    },
    {
        "auto_descr": "Contribute to Tmando/example_rocket_api_start development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:57.481879833+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:57.481879833+02:00",
        "modi_user": "api",
        "path": "/Tmando/example_rocket_api_start",
        "scheme": "https",
        "title": "GitHub - Tmando/example_rocket_api_start",
        "uri_uuid": "a200902646f3218fccdff42d1e8c2e5910ddb27b28d97e6119be81af7260411f",
        "url": "https://github.com/Tmando/example_rocket_api_start"
    },
    {
        "auto_descr": "Excalidraw is a virtual collaborative whiteboard tool that lets you easily sketch diagrams that have a hand-drawn feel to them.",
        "crea_time": "2024-08-29T17:56:58.392554458+02:00",
        "crea_user": "api",
        "host": "excalidraw.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:58.392554458+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Excalidraw | Hand-drawn look & feel • Collaborative • Secure",
        "uri_uuid": "f2852d5fc62d55a5578c0871d1b0af88d4c75854ebe206ec810d178ff44f9fe9",
        "url": "https://excalidraw.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:56:58.549107235+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:58.549107235+02:00",
        "modi_user": "api",
        "path": "/2023/schedule/track/rust/",
        "scheme": "https",
        "title": "FOSDEM 2023 - Rust devroom",
        "uri_uuid": "721254965cfb901f4fbb5ab7880323d1aea03dca141640aad1aaee1d5abd3f23",
        "url": "https://fosdem.org/2023/schedule/track/rust/"
    },
    {
        "auto_descr": "✨ Magical shell history. Contribute to atuinsh/atuin development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:58.881751595+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:58.881751595+02:00",
        "modi_user": "api",
        "path": "/ellie/atuin",
        "scheme": "https",
        "title": "GitHub - atuinsh/atuin: ✨ Magical shell history",
        "uri_uuid": "d2c311661da87a2fdda7c0eb68aac27d2116a3768b955b53609cf3a42120dd91",
        "url": "https://github.com/ellie/atuin"
    },
    {
        "auto_descr": "✨ Magical shell history. Contribute to atuinsh/atuin development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:56:59.836557368+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:56:59.836557368+02:00",
        "modi_user": "api",
        "path": "/ellie/atuin",
        "scheme": "https",
        "title": "GitHub - atuinsh/atuin: ✨ Magical shell history",
        "uri_uuid": "b422a83b228aeffcb93cdc962f42f0d14502df709acf355b27bceaccf4291f19",
        "url": "https://github.com/ellie/atuin#pacman"
    },
    {
        "auto_descr": "Dear Rustaceans,\nWe are thrilled to announce the first issue of Rust Magazine, a publication dedicated to exploring and promoting the Rust programming language. This issue is packed with a range of ex",
        "crea_time": "2024-08-29T17:57:00.232826983+02:00",
        "crea_user": "api",
        "host": "rustmagazine.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:00.232826983+02:00",
        "modi_user": "api",
        "path": "/issue-1/",
        "scheme": "https",
        "title": "Issue 1",
        "uri_uuid": "eb73e9864a41982f5027a65441e71890554485fc6b0ac41c2edcf88867fd4846",
        "url": "https://rustmagazine.org/issue-1/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:00.482764648+02:00",
        "crea_user": "api",
        "host": "tfpk.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:00.482764648+02:00",
        "modi_user": "api",
        "path": "/lifetimekata/index.html",
        "scheme": "https",
        "title": "Introduction - LifetimeKata",
        "uri_uuid": "7ca6c265f14857342e08e0a8e8bee1dfd297568b226c6487b582a975518fbf11",
        "url": "https://tfpk.github.io/lifetimekata/index.html"
    },
    {
        "auto_descr": "Allen Wyma talks with Shuang Zhu, creator of Rust Magazine, a Rust-focused online magazine that provides articles from experts and enthusiasts in Rust.",
        "crea_time": "2024-08-29T17:57:00.718250971+02:00",
        "crea_user": "api",
        "host": "podcasts.apple.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:00.718250971+02:00",
        "modi_user": "api",
        "path": "/de/podcast/rust-magazine-with-shuang-zhu/id1472535519",
        "scheme": "https",
        "title": "Rust Magazine with Shuang Zhu – Rustacean Station – Apple Podcasts",
        "uri_uuid": "7e8d500381297e274566f7d84a1095c67b53578b06432148f43b7484c10bf911",
        "url": "https://podcasts.apple.com/de/podcast/rust-magazine-with-shuang-zhu/id1472535519?i=1000595772934"
    },
    {
        "auto_descr": "Rust Berlin online meetup presentation on `thiserror` - jbethune/thiserror-presentation",
        "crea_time": "2024-08-29T17:57:01.216340950+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:01.216340950+02:00",
        "modi_user": "api",
        "path": "/jbethune/thiserror-presentation",
        "scheme": "https",
        "title": "GitHub - jbethune/thiserror-presentation: Rust Berlin online meetup presentation on `thiserror`",
        "uri_uuid": "d592af010319ca74a0537983cd21e2820cbfae879051a05010f046bc53746bbd",
        "url": "https://github.com/jbethune/thiserror-presentation"
    },
    {
        "auto_descr": "A trait for implementing arbitrary return types in the `main` function.",
        "crea_time": "2024-08-29T17:57:02.158658553+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:02.158658553+02:00",
        "modi_user": "api",
        "path": "/std/process/trait.Termination.html",
        "scheme": "https",
        "title": "Termination in std::process - Rust",
        "uri_uuid": "f59e2c8ba4ebbf9ab8e8e1b812b0d28e893024e9f2e610bf15a9d96312bdcd9b",
        "url": "https://doc.rust-lang.org/std/process/trait.Termination.html"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:57:02.299503138+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:02.299503138+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "603676b99e746d4753eda13e54454fc2de42ead0507fac1ad0615c8884891846",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=9ecdeca4ca65e1254fa98704ca078be9"
    },
    {
        "auto_descr": "Provides the `context` method for `Result`.",
        "crea_time": "2024-08-29T17:57:02.415104045+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:02.415104045+02:00",
        "modi_user": "api",
        "path": "/anyhow/latest/anyhow/trait.Context.html",
        "scheme": "https",
        "title": "Context in anyhow - Rust",
        "uri_uuid": "ec897df883d4b9ccc65dc9534acaa4aede1e0408d77953ca4d8efa7720155b8b",
        "url": "https://docs.rs/anyhow/latest/anyhow/trait.Context.html"
    },
    {
        "auto_descr": "Return early with an error.",
        "crea_time": "2024-08-29T17:57:02.600628736+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:02.600628736+02:00",
        "modi_user": "api",
        "path": "/anyhow/latest/anyhow/macro.bail.html",
        "scheme": "https",
        "title": "bail in anyhow - Rust",
        "uri_uuid": "c5cc20e9b63bc36da564364347dc87dbf09c0e0a2a4097b7bee318785e2ac03c",
        "url": "https://docs.rs/anyhow/latest/anyhow/macro.bail.html"
    },
    {
        "auto_descr": "github crates-io docs-rs",
        "crea_time": "2024-08-29T17:57:02.739142437+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:02.739142437+02:00",
        "modi_user": "api",
        "path": "/anyhow/latest/anyhow/",
        "scheme": "https",
        "title": "anyhow - Rust",
        "uri_uuid": "7bdf044d790847ab094ba7593471983a92d28bd6eb5a7a715d303637fa003281",
        "url": "https://docs.rs/anyhow/latest/anyhow/#no-std-support"
    },
    {
        "auto_descr": "This library provides `eyre::Report`, a trait object based error handling type for easy idiomatic error handling and reporting in Rust applications.",
        "crea_time": "2024-08-29T17:57:02.903653774+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:02.903653774+02:00",
        "modi_user": "api",
        "path": "/eyre/latest/eyre/",
        "scheme": "https",
        "title": "eyre - Rust",
        "uri_uuid": "ca5567f4f748ce20d5d15d032809bf4a55a4546268ac086697e0e494034f0a8c",
        "url": "https://docs.rs/eyre/latest/eyre/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:57:03.080745584+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:03.080745584+02:00",
        "modi_user": "api",
        "path": "/episode/047-jane-lusby/",
        "scheme": "https",
        "title": "Error Handling in Rust with Jane Lusby :: Rustacean Station",
        "uri_uuid": "c7f0080b054c960390db1908afc819ef1f5b4715fb88468a366489478c0d4048",
        "url": "https://rustacean-station.org/episode/047-jane-lusby/"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:57:03.204359598+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:03.204359598+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "6bcb7118993f8c975a80943fe87a35a304799defeecf0882da0ef39dabd7a719",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=3dc7ae0610e76f69ce0cf0887d355890"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:03.317705288+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:03.317705288+02:00",
        "modi_user": "api",
        "path": "/wiki/Security_Account_Manager",
        "scheme": "https",
        "title": "Security Account Manager - Wikipedia",
        "uri_uuid": "fc7912a79d361b0dead875f0bd162d57c31c3537d28e953a6a70b6b0a23adbcd",
        "url": "https://en.wikipedia.org/wiki/Security_Account_Manager"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:57:03.628785054+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:03.628785054+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "f6273f9699887e217e45ce9fc2c1cfcd92616fb57db6ada79ee19510f908ed7c",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=fbdb4bf7ca6256759d374701aac12280"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:03.754556145+02:00",
        "crea_user": "api",
        "host": "sled.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:03.754556145+02:00",
        "modi_user": "api",
        "path": "/errors.html",
        "scheme": "https",
        "title": "Error Handling in a Correctness-Critical Rust Project | sled-rs.github.io",
        "uri_uuid": "f97a54969aff7a98475466b1c73c4b76093e15143e445c9334d37337a9b36294",
        "url": "https://sled.rs/errors.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:04.327802592+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:04.327802592+02:00",
        "modi_user": "api",
        "path": "/crates/eyre",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "9c042a451752f18ed092392f33c91c9965618cef75104369dca70156d981fc67",
        "url": "https://crates.io/crates/eyre"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:04.553178389+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:04.553178389+02:00",
        "modi_user": "api",
        "path": "/crates/color-eyre",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "6c057693ec902792cea39161c5a793a3a15698d6d14727f74a10dd1458a03dd2",
        "url": "https://crates.io/crates/color-eyre"
    },
    {
        "auto_descr": "github crates-io docs-rs",
        "crea_time": "2024-08-29T17:57:04.765305236+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:04.765305236+02:00",
        "modi_user": "api",
        "path": "/thiserror/latest/thiserror/",
        "scheme": "https",
        "title": "thiserror - Rust",
        "uri_uuid": "caee618ccd855b7e9aa0eb91a4e1e3d60530d4e777c378d83f7b49b82a4221c4",
        "url": "https://docs.rs/thiserror/latest/thiserror/#details"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:57:04.945447881+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:04.945447881+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "84bebf6cf115636f2bab8bf8babd2bbd0490ec8d2e3ec0ff9b99580c3e7e01ed",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b13ead720fc038a41d7e92f942257c80"
    },
    {
        "auto_descr": "`Result<T, Error>`",
        "crea_time": "2024-08-29T17:57:05.049164034+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:05.049164034+02:00",
        "modi_user": "api",
        "path": "/anyhow/latest/anyhow/type.Result.html",
        "scheme": "https",
        "title": "Result in anyhow - Rust",
        "uri_uuid": "7dfd54936dfa862069d8878108042b41247209a3535c27f2b5df43a4612dde71",
        "url": "https://docs.rs/anyhow/latest/anyhow/type.Result.html"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:57:05.386244890+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:05.386244890+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "225cc9e9161c8d9588bfb7164e8f3b6ba956802bda6595271cd078cac5ea149b",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=cf28af31855df746d77ad988031f0550"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:05.497472639+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:05.497472639+02:00",
        "modi_user": "api",
        "path": "/wiki/Turn-taking",
        "scheme": "https",
        "title": "Turn-taking - Wikipedia",
        "uri_uuid": "c230c37ca1a6f28532a960749a048b2815372459e7908b11cfcf81f11628d0cb",
        "url": "https://en.wikipedia.org/wiki/Turn-taking#Timing"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:57:05.746422734+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:05.746422734+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "353413c8463c41432f4e6137c3f824314b2fce5d69344e57cf877e420502b4fd",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=f8690ca85fabae9c1c2b177c3a04d180"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:05.846375411+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:05.846375411+02:00",
        "modi_user": "api",
        "path": "/wiki/Greenspun%27s_tenth_rule",
        "scheme": "https",
        "title": "Greenspun's tenth rule - Wikipedia",
        "uri_uuid": "93db9e2e2ccb03f961772a10cca353045a98405ad6b23d890f1891b07b4ca07c",
        "url": "https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:06.113175094+02:00",
        "crea_user": "api",
        "host": "rustwasm.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:06.113175094+02:00",
        "modi_user": "api",
        "path": "/wasm-bindgen/examples/dom.html",
        "scheme": "https",
        "title": "web-sys: DOM hello world - The `wasm-bindgen` Guide",
        "uri_uuid": "bc99eff8bf32f6f28658b98a114c1ffe5467bd034578b1bf8dd8c186e2a23a7f",
        "url": "https://rustwasm.github.io/wasm-bindgen/examples/dom.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:06.525345154+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:06.525345154+02:00",
        "modi_user": "api",
        "path": "/janpauldahlke/hands_on_tauri",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "06fb900a60f52cb7bdb30667ca76734191e5c98efebd0c69cb64b8f0a9b4db50",
        "url": "https://github.com/janpauldahlke/hands_on_tauri"
    },
    {
        "auto_descr": "The DOM implementation for `leptos`.",
        "crea_time": "2024-08-29T17:57:06.809130667+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:06.809130667+02:00",
        "modi_user": "api",
        "path": "/leptos_dom/latest/leptos_dom/",
        "scheme": "https",
        "title": "leptos_dom - Rust",
        "uri_uuid": "0c0cd6e7df6f5cc69891171419edc5b3490f3ce644ab61a2c7849c426fa3a4cd",
        "url": "https://docs.rs/leptos_dom/latest/leptos_dom/"
    },
    {
        "auto_descr": "A framework for creating reliable and efficient web applications.",
        "crea_time": "2024-08-29T17:57:07.029246276+02:00",
        "crea_user": "api",
        "host": "yew.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:07.029246276+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Yew",
        "uri_uuid": "22649802e9bd569c5f18d3c1ef6506c9a004c6083c696230b4b89388dfe7768f",
        "url": "https://yew.rs/"
    },
    {
        "auto_descr": "background rust code check. Contribute to Canop/bacon development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:07.949046366+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:07.949046366+02:00",
        "modi_user": "api",
        "path": "/Canop/bacon",
        "scheme": "https",
        "title": "GitHub - Canop/bacon: background rust code check",
        "uri_uuid": "748114e8ca5f5f536ad76ae335f91e5ec9d123e7d8fa98469e5a2a208a0b978d",
        "url": "https://github.com/Canop/bacon"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:08.744549429+02:00",
        "crea_user": "api",
        "host": "seebass22.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:08.744549429+02:00",
        "modi_user": "api",
        "path": "/gallery_site/",
        "scheme": "https",
        "title": "Nannou Gallery",
        "uri_uuid": "21edae71e4c6dfeec86b77eed4348a336d4236c1d3d5ff80509c417c888a37d3",
        "url": "https://seebass22.github.io/gallery_site/"
    },
    {
        "auto_descr": "random doodles with nannou. Contribute to Seebass22/nannou-fun development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:08.965476263+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:08.965476263+02:00",
        "modi_user": "api",
        "path": "/Seebass22/nannou-fun",
        "scheme": "https",
        "title": "GitHub - Seebass22/nannou-fun: random doodles with nannou",
        "uri_uuid": "d891efe70c2ea3bec2790a0d4e340142c65a7c2ebfba68153e50a67931e9c6d4",
        "url": "https://github.com/Seebass22/nannou-fun"
    },
    {
        "auto_descr": "Tiny Code Christmas - Day 11 Welcome to Day 11 of Tiny Code Christmas! If you’re just joining us don’t forget to check out the overview, and start at Day 1! You can start whenever you like, there are no deadlines!\nToday we are going to enter the third dimension and build a voxel cube! Optionally, there is sample code under the challenge section to accompany this that you can use.",
        "crea_time": "2024-08-29T17:57:09.799221629+02:00",
        "crea_user": "api",
        "host": "tcc.lovebyte.party",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:09.799221629+02:00",
        "modi_user": "api",
        "path": "/day11/",
        "scheme": "https",
        "title": "The Eleventh Day of Tiny Code :: Tiny Code Christmas",
        "uri_uuid": "cbb0fd3bf89b44b417c6cf5fe29522aadfab2a327625cf10f2344be36f87e492",
        "url": "https://tcc.lovebyte.party/day11/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:10.269271666+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:10.269271666+02:00",
        "modi_user": "api",
        "path": "/crates/kord",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d5dc1ab3b5407b9b42376160440f21f204220073ab0e78dd93587ba5a64e059a",
        "url": "https://crates.io/crates/kord"
    },
    {
        "auto_descr": "Gentle step-by-step guide through the abstract and complex universe of Fragment Shaders.",
        "crea_time": "2024-08-29T17:57:10.468747950+02:00",
        "crea_user": "api",
        "host": "thebookofshaders.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:10.468747950+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "The Book of Shaders",
        "uri_uuid": "c68fb7ae23257c96fb9c8243f6ba2332cb8d0778e4b1fa4bdce64e646d270b3e",
        "url": "https://thebookofshaders.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:11.724654663+02:00",
        "crea_user": "api",
        "host": "wgpu.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:11.724654663+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "wgpu: portable graphics library for Rust",
        "uri_uuid": "56000edabd18d668237edcdd2ea63b012676cc89edffd9fdd50981526136c159",
        "url": "https://wgpu.rs/"
    },
    {
        "auto_descr": "Rust Berlin online meetup presentation on `thiserror` - thiserror-presentation/slides.md at master · jbethune/thiserror-presentation",
        "crea_time": "2024-08-29T17:57:12.044592635+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:12.044592635+02:00",
        "modi_user": "api",
        "path": "/jbethune/thiserror-presentation/blob/master/slides.md",
        "scheme": "https",
        "title": "thiserror-presentation/slides.md at master · jbethune/thiserror-presentation · GitHub",
        "uri_uuid": "63d1d45f1aca69eea3535ec4ff71703083c29ba6637f7429f7a1d90803727e48",
        "url": "https://github.com/jbethune/thiserror-presentation/blob/master/slides.md"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:12.627862463+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:12.627862463+02:00",
        "modi_user": "api",
        "path": "/crates/thiserror",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f4c07973908c459926c809ceae12c54d6d64d9d809db6a69701f8d010a21c93d",
        "url": "https://crates.io/crates/thiserror"
    },
    {
        "auto_descr": "A Creative Coding Framework for Rust. Contribute to nannou-org/nannou development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:14.697264010+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:14.697264010+02:00",
        "modi_user": "api",
        "path": "/nannou-org/nannou",
        "scheme": "https",
        "title": "GitHub - nannou-org/nannou: A Creative Coding Framework for Rust.",
        "uri_uuid": "f7d96ca28cfd5ff8af64db3f4f7f23f26d11cd6f4950121dab539e0c65298ed4",
        "url": "https://github.com/nannou-org/nannou"
    },
    {
        "auto_descr": "Contribute to tomoyanonymous/nannou-web-template development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:15.688640280+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:15.688640280+02:00",
        "modi_user": "api",
        "path": "/tomoyanonymous/nannou-web-template",
        "scheme": "https",
        "title": "GitHub - tomoyanonymous/nannou-web-template",
        "uri_uuid": "75db163545bb2290c43b6c9d6b5deb66d8a9c45f630e748f6bac4765d700de80",
        "url": "https://github.com/tomoyanonymous/nannou-web-template"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:17.014296194+02:00",
        "crea_user": "api",
        "host": "sensors2.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:17.014296194+02:00",
        "modi_user": "api",
        "path": "/osc/",
        "scheme": "https",
        "title": "Sensors2OSC | Sensors2",
        "uri_uuid": "702648a1948baef61c2fb0f1d3e9af70c726ea62198008914e353d7a3907e0a6",
        "url": "https://sensors2.org/osc/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:17.672127712+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:17.672127712+02:00",
        "modi_user": "api",
        "path": "/reference/items/traits.html",
        "scheme": "https",
        "title": "Traits - The Rust Reference",
        "uri_uuid": "da41c18e20f68114b9f8bba5aacf1bfd4e9a21a576f76bbb2b3d9ac6caae503c",
        "url": "https://doc.rust-lang.org/reference/items/traits.html#supertraits"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:17.872084242+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:17.872084242+02:00",
        "modi_user": "api",
        "path": "/t/why-is-i32-from-f-not-allowed-but-f-as-i32-is/28151%20https://crates.io/crates/num-traits",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "806bf31ff76c281bd0ea8600b0c68762c86b4c441af65e97546988e872d0cf07",
        "url": "https://users.rust-lang.org/t/why-is-i32-from-f-not-allowed-but-f-as-i32-is/28151%20https://crates.io/crates/num-traits"
    },
    {
        "auto_descr": "API documentation for the Rust `ValueFrom` trait in crate `conv`.",
        "crea_time": "2024-08-29T17:57:18.463051414+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:18.463051414+02:00",
        "modi_user": "api",
        "path": "/conv/0.3.3/conv/trait.ValueFrom.html",
        "scheme": "https",
        "title": "conv::ValueFrom - Rust",
        "uri_uuid": "24098f09f1243ed2be699183fdf29fc6cd66f7ecbb7fdfa94534e5179e076ea1",
        "url": "https://docs.rs/conv/0.3.3/conv/trait.ValueFrom.html"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T17:57:18.724031340+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:18.724031340+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-noris/events/289684876/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "118928975fe1b5b0b821feeeb03e7d29d2d35b5b6b9154ff33ee8d26a4539adf",
        "url": "https://www.meetup.com/de-DE/rust-noris/events/289684876/"
    },
    {
        "auto_descr": "A hands-on guide to developing, packaging, and deploying fully functional Rust web applications. Instant delivery. Top rated Server Side Web Development products.",
        "crea_time": "2024-08-29T17:57:19.411501248+02:00",
        "crea_user": "api",
        "host": "www.packtpub.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:19.411501248+02:00",
        "modi_user": "api",
        "path": "/product/rust-web-programming-second-edition/9781803234694",
        "scheme": "https",
        "title": "Rust Web Programming - Second Edition | Web Development | eBook",
        "uri_uuid": "7bc5d75290ba06352878fd052ae68e5633619d5407225af65d48c2df5da7fd8b",
        "url": "https://www.packtpub.com/product/rust-web-programming-second-edition/9781803234694"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:20.203275350+02:00",
        "crea_user": "api",
        "host": "teddit.net",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:20.203275350+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/10f6qlm/the_second_edition_rust_web_programming_book_is/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "a3c89619952125ced162145d36713438b8e169776dce96c7d596ebe41b1076d2",
        "url": "https://teddit.net/r/rust/comments/10f6qlm/the_second_edition_rust_web_programming_book_is/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:57:20.326963882+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:20.326963882+02:00",
        "modi_user": "api",
        "path": "/episode/maxwell-flitton/",
        "scheme": "https",
        "title": "Rust Web Programming with Maxwell Flitton :: Rustacean Station",
        "uri_uuid": "567fd461027d6fb100e7cb95eeef7bc7ec499532b28db0de130e727c7d2341ca",
        "url": "https://rustacean-station.org/episode/maxwell-flitton/"
    },
    {
        "auto_descr": "Magit for VSCode. Contribute to kahole/edamagit development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:20.476949069+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:20.476949069+02:00",
        "modi_user": "api",
        "path": "/kahole/edamagit",
        "scheme": "https",
        "title": "GitHub - kahole/edamagit: Magit for VSCode",
        "uri_uuid": "5f041bc4d1ef9c43806b10d46e60a9052d24d78f001d29711b34e231d648cf3a",
        "url": "https://github.com/kahole/edamagit"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:21.492210487+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:21.492210487+02:00",
        "modi_user": "api",
        "path": "/2023/",
        "scheme": "https",
        "title": "FOSDEM 2023 - Home",
        "uri_uuid": "46ba4a86e1cdb76d94132a79f55c98dd10c54fdc4fe1719fc4f3426d01eee0dd",
        "url": "https://fosdem.org/2023/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:22.061381460+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:22.061381460+02:00",
        "modi_user": "api",
        "path": "/LNGNgFuD_xs",
        "scheme": "https",
        "title": "nannou 2023-01-14 - YouTube",
        "uri_uuid": "a1327d818f8a091d09a5506e602ae91af93219718e0c00c07839727f05fbc438",
        "url": "https://youtu.be/LNGNgFuD_xs"
    },
    {
        "auto_descr": "How to handle errors in Rust using only the standard library - rust-vanilla-error-handling/src/SUMMARY.md at master · jbethune/rust-vanilla-error-handling",
        "crea_time": "2024-08-29T17:57:23.085016396+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:23.085016396+02:00",
        "modi_user": "api",
        "path": "/jbethune/rust-vanilla-error-handling/blob/master/src/SUMMARY.md",
        "scheme": "https",
        "title": "rust-vanilla-error-handling/src/SUMMARY.md at master · jbethune/rust-vanilla-error-handling · GitHub",
        "uri_uuid": "9149dcf44997a06bf226acb44663cb19ffa0691c969f319c7454a134703f6a8b",
        "url": "https://github.com/jbethune/rust-vanilla-error-handling/blob/master/src/SUMMARY.md"
    },
    {
        "auto_descr": "`Error` is a trait representing the basic expectations for error values, i.e., values of type `E` in `Result<T, E>`.",
        "crea_time": "2024-08-29T17:57:23.695041546+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:23.695041546+02:00",
        "modi_user": "api",
        "path": "/std/error/trait.Error.html",
        "scheme": "https",
        "title": "Error in std::error - Rust",
        "uri_uuid": "73e3aa068dfddc61dda6b4a2113442cbb27defa3885377d2d3ef36b1b0fa94a0",
        "url": "https://doc.rust-lang.org/std/error/trait.Error.html"
    },
    {
        "auto_descr": "Unwraps a result or propagates its error.",
        "crea_time": "2024-08-29T17:57:24.193422269+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:24.193422269+02:00",
        "modi_user": "api",
        "path": "/beta/std/macro.try.html",
        "scheme": "https",
        "title": "try in std - Rust",
        "uri_uuid": "3a69eb76dd7d3c3b261b9811908a076198a7af9a000bf603a57c6961c2424bb1",
        "url": "https://doc.rust-lang.org/beta/std/macro.try.html"
    },
    {
        "auto_descr": "Source of the Rust file `library/core/src/macros/mod.rs`.",
        "crea_time": "2024-08-29T17:57:24.344780392+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:24.344780392+02:00",
        "modi_user": "api",
        "path": "/beta/src/core/macros/mod.rs.html",
        "scheme": "https",
        "title": "mod.rs - source",
        "uri_uuid": "c7a1960318abfadb336fde574113fd0eb1c803fd18f520e83a64043c05a584f6",
        "url": "https://doc.rust-lang.org/beta/src/core/macros/mod.rs.html#417"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:24.657207016+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:24.657207016+02:00",
        "modi_user": "api",
        "path": "/reference/attributes/type_system.html",
        "scheme": "https",
        "title": "Type System - The Rust Reference",
        "uri_uuid": "352447a2d2629772f6cccc9c1b3653be4f116ba7305b899135412669e5a7b9c8",
        "url": "https://doc.rust-lang.org/reference/attributes/type_system.html?highlight=non_ex#the-non_exhaustive-attribute"
    },
    {
        "auto_descr": "Source of the Rust file `library/core/src/num/error.rs`.",
        "crea_time": "2024-08-29T17:57:24.818530302+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:24.818530302+02:00",
        "modi_user": "api",
        "path": "/src/core/num/error.rs.html",
        "scheme": "https",
        "title": "error.rs - source",
        "uri_uuid": "e958a756de7738a17eef9bf94b7d7dfa951dd0e86d4b07028a6665c4ef47787f",
        "url": "https://doc.rust-lang.org/src/core/num/error.rs.html#109"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:24.966357988+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:24.966357988+02:00",
        "modi_user": "api",
        "path": "/stable/std/num/struct.NonZeroUsize.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b566fd14a760bf6c7a09abbb4a3c3f16d25d8092b3db6fcaea4afb3dc0f45d6e",
        "url": "https://doc.rust-lang.org/stable/std/num/struct.NonZeroUsize.html"
    },
    {
        "auto_descr": "I blog mostly about my own programming projects.",
        "crea_time": "2024-08-29T17:57:25.352789518+02:00",
        "crea_user": "api",
        "host": "blog.burntsushi.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:25.352789518+02:00",
        "modi_user": "api",
        "path": "/rust-error-handling/",
        "scheme": "https",
        "title": "Error Handling in Rust - Andrew Gallant's Blog",
        "uri_uuid": "ab253bc4a904f92c7ba31b73520e61ad1179a4fabbdc8f2c1da60e5106d215ae",
        "url": "https://blog.burntsushi.net/rust-error-handling/"
    },
    {
        "auto_descr": "`Result` is a type that represents either success (`Ok`) or failure (`Err`).",
        "crea_time": "2024-08-29T17:57:26.795407912+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:26.795407912+02:00",
        "modi_user": "api",
        "path": "/std/result/enum.Result.html",
        "scheme": "https",
        "title": "Result in std::result - Rust",
        "uri_uuid": "3c37c32da802cc38e9cdacdde6ea97e464bf45e9bcbe91b159bfa8905bbc4246",
        "url": "https://doc.rust-lang.org/std/result/enum.Result.html#method.expect"
    },
    {
        "auto_descr": "Interfaces for working with Errors.",
        "crea_time": "2024-08-29T17:57:27.098741682+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:27.098741682+02:00",
        "modi_user": "api",
        "path": "/std/error/index.html",
        "scheme": "https",
        "title": "std::error - Rust",
        "uri_uuid": "f8e8a90e1bba4c7db45ff17cfe59267f2e4b7c75016dc35b78e5f909be65a74e",
        "url": "https://doc.rust-lang.org/std/error/index.html#common-message-styles"
    },
    {
        "auto_descr": "Fast ML inference & training for Rust with ONNX Runtime - pykeio/ort",
        "crea_time": "2024-08-29T17:57:27.416723763+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:27.416723763+02:00",
        "modi_user": "api",
        "path": "/pykeio/ort",
        "scheme": "https",
        "title": "GitHub - pykeio/ort: Fast ML inference & training for Rust with ONNX Runtime",
        "uri_uuid": "cd09d3771436737d932b14ac46e781b539e2ca4e76ca57f82d9ed9cf5294ad74",
        "url": "https://github.com/pykeio/ort"
    },
    {
        "auto_descr": "Rust SSH client & server library. Contribute to Eugeny/russh development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:28.157888165+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:28.157888165+02:00",
        "modi_user": "api",
        "path": "/warp-tech/russh",
        "scheme": "https",
        "title": "GitHub - Eugeny/russh: Rust SSH client & server library",
        "uri_uuid": "d655904907575194b3bc0e4daa8d64369f6dcf997989c80b7fba6bbab96cdf02",
        "url": "https://github.com/warp-tech/russh"
    },
    {
        "auto_descr": "Based on an ultra-low-power STM32 MCU for daily exploration of access control systems and radio protocols. Open-source and customizable",
        "crea_time": "2024-08-29T17:57:28.998200515+02:00",
        "crea_user": "api",
        "host": "flipperzero.one",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:28.998200515+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Flipper Zero — Portable Multi-tool Device for Geeks",
        "uri_uuid": "e2e10cb317736007538abf61439486f29bb174bf3ad71361b88245863d39a646",
        "url": "https://flipperzero.one/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:29.494421335+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:29.494421335+02:00",
        "modi_user": "api",
        "path": "/crates/aquamarine",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "337e43d79734c52efc59dc57b86f612f42807761fe278e8d1451b38f931da967",
        "url": "https://crates.io/crates/aquamarine"
    },
    {
        "auto_descr": "An ASCII Header Generator for Network Protocols. Contribute to luismartingarcia/protocol development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:29.697599609+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:29.697599609+02:00",
        "modi_user": "api",
        "path": "/luismartingarcia/protocol",
        "scheme": "https",
        "title": "GitHub - luismartingarcia/protocol: An ASCII Header Generator for Network Protocols",
        "uri_uuid": "2207468235f2c483b946fa23c2ed581751209f27b1d8d307f9a7742ad34deebb",
        "url": "https://github.com/luismartingarcia/protocol"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:30.601129258+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:30.601129258+02:00",
        "modi_user": "api",
        "path": "/crates/lettre",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ead4c7f82ed6f61f5e86f67b68114b0e85dac20bd75c729fee607c9298dd020b",
        "url": "https://crates.io/crates/lettre"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:30.820068627+02:00",
        "crea_user": "api",
        "host": "old.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:30.820068627+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/10e9ehb/serde_json_vs_rapidjson_rust_vs_c/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "8f0299d2515ca3dd9669a941b2062d7b73c40e1b600e15cbbf6c91687c27563a",
        "url": "https://old.reddit.com/r/rust/comments/10e9ehb/serde_json_vs_rapidjson_rust_vs_c/"
    },
    {
        "auto_descr": "You can often hear online that indexing into a slice, such as my_slice[i] is slow in Rust and you should do something else instead for performance. The details, however, are murky. There’s little in…",
        "crea_time": "2024-08-29T17:57:30.961808493+02:00",
        "crea_user": "api",
        "host": "shnatsel.medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:30.961808493+02:00",
        "modi_user": "api",
        "path": "/how-to-avoid-bounds-checks-in-rust-without-unsafe-f65e618b4c1e",
        "scheme": "https",
        "title": "How to avoid bounds checks in Rust (without unsafe!) | by Sergey \"Shnatsel\" Davidoff | Medium",
        "uri_uuid": "c8779321b5e65378d71c4ba4eb5e44ad8a472addb6faa4c646bee0357294ee05",
        "url": "https://shnatsel.medium.com/how-to-avoid-bounds-checks-in-rust-without-unsafe-f65e618b4c1e"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:31.281281494+02:00",
        "crea_user": "api",
        "host": "frehberg.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:31.281281494+02:00",
        "modi_user": "api",
        "path": "/2022/01/rust-detect-unsigned-integer-underflow/",
        "scheme": "https",
        "title": "Rust: detect unsigned integer underflow | blog frehberg",
        "uri_uuid": "5c8fa3736e21ad502e5009beae757f100612111344c9d66bb6faaa8e889b7515",
        "url": "https://frehberg.com/2022/01/rust-detect-unsigned-integer-underflow/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:31.806629944+02:00",
        "crea_user": "api",
        "host": "deskthority.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:31.806629944+02:00",
        "modi_user": "api",
        "path": "/wiki/Battleship",
        "scheme": "https",
        "title": "Battleship - Deskthority wiki",
        "uri_uuid": "56e82fa78a61942165c70f135312024d693bbc94c7aed4be43f451f3a66f5808",
        "url": "https://deskthority.net/wiki/Battleship"
    },
    {
        "auto_descr": "Welcome to bloop, where AI revolutionizes legacy code modernization. Discover how we empower teams to modernize, write, and comprehend their legacy code efficiently and effectively.",
        "crea_time": "2024-08-29T17:57:32.783928527+02:00",
        "crea_user": "api",
        "host": "bloop.ai",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:32.783928527+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "bloop | AI Legacy Code Modernisation",
        "uri_uuid": "ea5135f529424a01aa70ab75be4520b40d2b096220c312bac3d7b57de9d48c6e",
        "url": "https://bloop.ai/"
    },
    {
        "auto_descr": "Rust Nation UK is the first conference dedicated to the Rust programming language. It will be held at a London venue on the 19th & 20th February 2025.",
        "crea_time": "2024-08-29T17:57:33.271717406+02:00",
        "crea_user": "api",
        "host": "www.rustnationuk.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:33.271717406+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Nation 24 - Rust Nation 24",
        "uri_uuid": "b2c44d5923b4064c76d6117e614b4e4869f11cb2b78e4c580d19b5e6ffa54b6c",
        "url": "https://www.rustnationuk.com/"
    },
    {
        "auto_descr": "The Rust programming language is extremely well suited for concurrency, and its ecosystem has many libraries that include lots of concurrent data structures, locks, and more. But implementing those structures …  - Selection from Rust Atomics and Locks [Book]",
        "crea_time": "2024-08-29T17:57:33.717049777+02:00",
        "crea_user": "api",
        "host": "www.oreilly.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:33.717049777+02:00",
        "modi_user": "api",
        "path": "/library/view/rust-atomics-and/9781098119430/",
        "scheme": "https",
        "title": "Rust Atomics and Locks[Book]",
        "uri_uuid": "cb3fcc5d2438d9871aeb0379aba272000657d42017f8426c0b6609b7e8f69969",
        "url": "https://www.oreilly.com/library/view/rust-atomics-and/9781098119430/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:34.855893522+02:00",
        "crea_user": "api",
        "host": "tickets.vitisevents.com",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:34.855893522+02:00",
        "modi_user": "api",
        "path": "/e/12/rust-nation-uk-2023",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "a5b46247fb0dc1195dba8cc00fd033218d1c6c7c78d3b35793a38257e8e2c973",
        "url": "https://tickets.vitisevents.com/e/12/rust-nation-uk-2023"
    },
    {
        "auto_descr": "Glommio is a thread-per-core crate that makes writing highly parallel asynchronous applications in a thread-per-core architecture easier for rustaceans. - DataDog/glommio",
        "crea_time": "2024-08-29T17:57:35.201556117+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:35.201556117+02:00",
        "modi_user": "api",
        "path": "/DataDog/glommio",
        "scheme": "https",
        "title": "GitHub - DataDog/glommio: Glommio is a thread-per-core crate that makes writing highly parallel asynchronous applications in a thread-per-core architecture easier for rustaceans.",
        "uri_uuid": "c0f69f4faf13a8a49c2cc4b4f78ce521c78e67599469ee68a515a508a3222cd3",
        "url": "https://github.com/DataDog/glommio"
    },
    {
        "auto_descr": "Rayon: A data parallelism library for Rust. Contribute to rayon-rs/rayon development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:36.146361323+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:36.146361323+02:00",
        "modi_user": "api",
        "path": "/rayon-rs/rayon",
        "scheme": "https",
        "title": "GitHub - rayon-rs/rayon: Rayon: A data parallelism library for Rust",
        "uri_uuid": "dbfc5dc5bb6875e2261ba40e315bf1acaa4f6abc0da5fda23a63b1954041f7b9",
        "url": "https://github.com/rayon-rs/rayon"
    },
    {
        "auto_descr": "Create a scope for spawning scoped threads.",
        "crea_time": "2024-08-29T17:57:37.091102383+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:37.091102383+02:00",
        "modi_user": "api",
        "path": "/beta/std/thread/fn.scope.html",
        "scheme": "https",
        "title": "scope in std::thread - Rust",
        "uri_uuid": "67f7b402ca4f0bb92aca343faaac9b8d20d5906392662c18fef5fcb83deca7bd",
        "url": "https://doc.rust-lang.org/beta/std/thread/fn.scope.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:37.204917729+02:00",
        "crea_user": "api",
        "host": "llogiq.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:37.204917729+02:00",
        "modi_user": "api",
        "path": "/2016/03/09/java-golf.html",
        "scheme": "https",
        "title": "Java Code Golf — Llogiq on stuff",
        "uri_uuid": "f5584a916a946f1a9bc4b90a4b3b34a6bb798fdfe2c400e7bdcff876d7edf07c",
        "url": "https://llogiq.github.io/2016/03/09/java-golf.html"
    },
    {
        "auto_descr": "Ergonomic and modular web framework built with Tokio, Tower, and Hyper - tokio-rs/axum",
        "crea_time": "2024-08-29T17:57:37.447374938+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:37.447374938+02:00",
        "modi_user": "api",
        "path": "/tokio-rs/axum",
        "scheme": "https",
        "title": "GitHub - tokio-rs/axum: Ergonomic and modular web framework built with Tokio, Tower, and Hyper",
        "uri_uuid": "2072aad4f43d16449ed68f1daa340abb2617dc4f309623e30c2241d3f4c05898",
        "url": "https://github.com/tokio-rs/axum"
    },
    {
        "auto_descr": "A preprocessor for mdbook to add mermaid support. Contribute to badboy/mdbook-mermaid development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:38.116362430+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:38.116362430+02:00",
        "modi_user": "api",
        "path": "/badboy/mdbook-mermaid",
        "scheme": "https",
        "title": "GitHub - badboy/mdbook-mermaid: A preprocessor for mdbook to add mermaid support",
        "uri_uuid": "56641aa524034f5684f29ff03fada1ef9ae80970589ada94e5740910546779da",
        "url": "https://github.com/badboy/mdbook-mermaid"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:38.790375461+02:00",
        "crea_user": "api",
        "host": "frehberg.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:38.790375461+02:00",
        "modi_user": "api",
        "path": "/2022/12/rust-vue-websocket-demo/",
        "scheme": "https",
        "title": "Rust Axum/Vue WebSocket Demo | blog frehberg",
        "uri_uuid": "59c84fa9f73a03b2e20bea49445fd00f8ef24b8566aeeb8d4b5a96de469a614e",
        "url": "https://frehberg.com/2022/12/rust-vue-websocket-demo/"
    },
    {
        "auto_descr": "Attached: 1 image\n\nHow old is old enough to start learning #rustlang ?\n\nMy answer:",
        "crea_time": "2024-08-29T17:57:39.043058777+02:00",
        "crea_user": "api",
        "host": "toot.cat",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:39.043058777+02:00",
        "modi_user": "api",
        "path": "/@zeenix/109615807745859785",
        "scheme": "https",
        "title": "Zeeshan Ali Khan :rust: 🇺🇦: &quot;How old is old enough to start learning #rustlang…&quot; - Toot.Cat",
        "uri_uuid": "8ad2bec62cfe6f8a1da5ff1c848a7a734ad2c1ec63d2469646bfd0f57ca23c4a",
        "url": "https://toot.cat/@zeenix/109615807745859785"
    },
    {
        "auto_descr": "Flipper Devices open source projects. Flipper Devices has 86 repositories available. Follow their code on GitHub.",
        "crea_time": "2024-08-29T17:57:39.594820189+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:39.594820189+02:00",
        "modi_user": "api",
        "path": "/flipperdevices",
        "scheme": "https",
        "title": "Flipper Devices · GitHub",
        "uri_uuid": "3917cbda44b9807b66c77586795d292cc11f42f738088179fd4462478dfb72de",
        "url": "https://github.com/flipperdevices"
    },
    {
        "auto_descr": "zbus",
        "crea_time": "2024-08-29T17:57:40.280022583+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:40.280022583+02:00",
        "modi_user": "api",
        "path": "/zbus/latest/zbus/",
        "scheme": "https",
        "title": "zbus - Rust",
        "uri_uuid": "a11f4d49a88a74d428d53bedb7522fb40084a563ab4bb25519a22451d7dd7a77",
        "url": "https://docs.rs/zbus/latest/zbus/"
    },
    {
        "auto_descr": "Rust bindings for the FLTK GUI library. Contribute to fltk-rs/fltk-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:40.507294125+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:40.507294125+02:00",
        "modi_user": "api",
        "path": "/fltk-rs/fltk-rs",
        "scheme": "https",
        "title": "GitHub - fltk-rs/fltk-rs: Rust bindings for the FLTK GUI library.",
        "uri_uuid": "8e123686391a7e9bec7fbab5c4e143ba70f766d6624cebc68f2412bc76dc8560",
        "url": "https://github.com/fltk-rs/fltk-rs"
    },
    {
        "auto_descr": "Contribute to danieldg/ordered-stream development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:41.505495528+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:41.505495528+02:00",
        "modi_user": "api",
        "path": "/danieldg/ordered-stream",
        "scheme": "https",
        "title": "GitHub - danieldg/ordered-stream",
        "uri_uuid": "e3b99f894bf9cb08ca72ba72422ee5d0f936aad7ebadb0009eaec6e7e13c47ab",
        "url": "https://github.com/danieldg/ordered-stream"
    },
    {
        "auto_descr": "Stream for the `iter` function.",
        "crea_time": "2024-08-29T17:57:42.615081600+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:42.615081600+02:00",
        "modi_user": "api",
        "path": "/futures/latest/futures/stream/struct.Iter.html",
        "scheme": "https",
        "title": "Iter in futures::stream - Rust",
        "uri_uuid": "5eaf4a51f16305c5192cb4d07f567c6a97e983103f9cf4500f8eacfe564953ac",
        "url": "https://docs.rs/futures/latest/futures/stream/struct.Iter.html"
    },
    {
        "auto_descr": "Tokio is a runtime for writing reliable asynchronous applications with Rust. It provides async I/O, networking, scheduling, timers, and more.",
        "crea_time": "2024-08-29T17:57:42.943910909+02:00",
        "crea_user": "api",
        "host": "tokio.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:42.943910909+02:00",
        "modi_user": "api",
        "path": "/blog/2023-01-03-announcing-turmoil",
        "scheme": "https",
        "title": "Announcing turmoil | Tokio - An asynchronous Rust runtime",
        "uri_uuid": "cf423558226192ec65c96bc0e6eb40dadf3d186128f28649b6fea98d0da47b9f",
        "url": "https://tokio.rs/blog/2023-01-03-announcing-turmoil"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:43.330872081+02:00",
        "crea_user": "api",
        "host": "blog.yoshuawuyts.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:43.330872081+02:00",
        "modi_user": "api",
        "path": "/state-machines/",
        "scheme": "https",
        "title": "State Machines: Introduction",
        "uri_uuid": "db03b22f304c8b02e4580de47314f54f0f39b9e1d8cbcea0c6e46ddb34ad9200",
        "url": "https://blog.yoshuawuyts.com/state-machines/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:43.690551896+02:00",
        "crea_user": "api",
        "host": "blog.yoshuawuyts.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:43.690551896+02:00",
        "modi_user": "api",
        "path": "/state-machines-2/",
        "scheme": "https",
        "title": "State Machines II: an enum-based design",
        "uri_uuid": "0019ed92a7365aa2edbc2f4cdb8e7eae4a8ef5083b93c9e2d4ecf7b70963ccdb",
        "url": "https://blog.yoshuawuyts.com/state-machines-2/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:44.038249429+02:00",
        "crea_user": "api",
        "host": "blog.yoshuawuyts.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:44.038249429+02:00",
        "modi_user": "api",
        "path": "/state-machines-3/",
        "scheme": "https",
        "title": "State Machines III: Type States",
        "uri_uuid": "e2a450479df33430b387c594c75a285a20293290ded7fbdca63c2d027224ce13",
        "url": "https://blog.yoshuawuyts.com/state-machines-3/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:44.386459385+02:00",
        "crea_user": "api",
        "host": "docs.rust-embedded.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:44.386459385+02:00",
        "modi_user": "api",
        "path": "/book/static-guarantees/state-machines.html",
        "scheme": "https",
        "title": "Peripherals as State Machines - The Embedded Rust Book",
        "uri_uuid": "34f50b7b389b9f97d187f53069cff3712843576497e7b0912be2cec5151b444b",
        "url": "https://docs.rust-embedded.org/book/static-guarantees/state-machines.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:44.659422852+02:00",
        "crea_user": "api",
        "host": "chat.openai.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:44.659422852+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c36dacea8e28d872f0847b4514abbb2241bba97ec3f1f847874b19041a904976",
        "url": "https://chat.openai.com/"
    },
    {
        "auto_descr": "ChatGPT - the hottest AI topic",
        "crea_time": "2024-08-29T17:57:44.896903759+02:00",
        "crea_user": "api",
        "host": "lablab.ai",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:44.896903759+02:00",
        "modi_user": "api",
        "path": "/t/chatgpt-tutorial-how-to-create-a-website-with-chatgpt",
        "scheme": "https",
        "title": "ChatGPT tutorial: How to create a website with ChatGPT tutorial",
        "uri_uuid": "345d4a4c2f247de9174f8907016c1db9abc8fa743a3129f168a2678361cbc26c",
        "url": "https://lablab.ai/t/chatgpt-tutorial-how-to-create-a-website-with-chatgpt"
    },
    {
        "auto_descr": "Solving a Dungeons & Dragons riddle using prolog. GitHub Gist: instantly share code, notes, and snippets.",
        "crea_time": "2024-08-29T17:57:45.207144942+02:00",
        "crea_user": "api",
        "host": "gist.github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:45.207144942+02:00",
        "modi_user": "api",
        "path": "/Spuffynism/446c7c2d498477491d8137e8f234d4a9",
        "scheme": "https",
        "title": "Solving a Dungeons & Dragons riddle using prolog · GitHub",
        "uri_uuid": "4f1df8f6c6c61b15992fd32d4b999c141fd09aa3fd85cab64a05d570f73784f5",
        "url": "https://gist.github.com/Spuffynism/446c7c2d498477491d8137e8f234d4a9"
    },
    {
        "auto_descr": "Explore the builder pattern in Rust, including owned vs. mutably referenced builders, Into and AsRef traits, and default values.",
        "crea_time": "2024-08-29T17:57:45.763016663+02:00",
        "crea_user": "api",
        "host": "blog.logrocket.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:45.763016663+02:00",
        "modi_user": "api",
        "path": "/build-rust-api-builder-pattern/",
        "scheme": "https",
        "title": "How to build a Rust API with the builder pattern - LogRocket Blog",
        "uri_uuid": "788568238cb834b838cc92d478c80a67f9f72b62a7443697876764bfad12ca9e",
        "url": "https://blog.logrocket.com/build-rust-api-builder-pattern/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:57:46.018111582+02:00",
        "crea_user": "api",
        "host": "kas-gui.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:46.018111582+02:00",
        "modi_user": "api",
        "path": "/blog/state-of-GUI-2022.html",
        "scheme": "https",
        "title": "State of GUI 2022 - KAS blog",
        "uri_uuid": "30f552b5a8e88607216d884e371a6d253f18eb2ca09ffeb2953ff488c8bcf078",
        "url": "https://kas-gui.github.io/blog/state-of-GUI-2022.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:46.287449996+02:00",
        "crea_user": "api",
        "host": "i.redd.it",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:46.287449996+02:00",
        "modi_user": "api",
        "path": "/bs1k6fpwtgf31.jpg",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "9c2b06b9fd3a2b8771cd2eb47a7b71a590d69a127bb8647ef29a5ced3dad7e9b",
        "url": "https://i.redd.it/bs1k6fpwtgf31.jpg"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:57:46.458812869+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:46.458812869+02:00",
        "modi_user": "api",
        "path": "/2022/12/05/survey-launch.html",
        "scheme": "https",
        "title": "Launching the 2022 State of Rust Survey | Rust Blog",
        "uri_uuid": "13a19b8e21b0f5fa671d24d9829c639899bb9de43f0982ba859544e14e749789",
        "url": "https://blog.rust-lang.org/2022/12/05/survey-launch.html"
    },
    {
        "auto_descr": "Open Hardware with ESP32-C3 compatible with Feather specification designed in KiCad - esp-rs/esp-rust-board",
        "crea_time": "2024-08-29T17:57:46.681569151+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:46.681569151+02:00",
        "modi_user": "api",
        "path": "/esp-rs/esp-rust-board",
        "scheme": "https",
        "title": "GitHub - esp-rs/esp-rust-board: Open Hardware with ESP32-C3 compatible with Feather specification designed in KiCad",
        "uri_uuid": "fd56cf44b1e0c689359b4847b8ad687a983e60873b00527787c1241bbd27753f",
        "url": "https://github.com/esp-rs/esp-rust-board"
    },
    {
        "auto_descr": "This adds the following functions:\n\nOption<T>::as_slice(&self) -> &[T]\nOption<T>::as_mut_slice(&mut self) -> &[T]\n\nThe as_slice and as_mut_slice_mut functions benefit from an optimization that make...",
        "crea_time": "2024-08-29T17:57:47.525213970+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:47.525213970+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/105871",
        "scheme": "https",
        "title": "Add `Option::as_`(`mut_`)`slice` by llogiq · Pull Request #105871 · rust-lang/rust · GitHub",
        "uri_uuid": "a051c9f198f3dd6d4a74c61f51fd2d56b25755a386d4a6aaeb3a8d6fcad51eba",
        "url": "https://github.com/rust-lang/rust/pull/105871"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:49.335470958+02:00",
        "crea_user": "api",
        "host": "stackoverflow.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:49.335470958+02:00",
        "modi_user": "api",
        "path": "/questions/36088116/how-to-do-polymorphic-io-from-either-a-file-or-stdin-in-rust",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "a0f9d4d6d848cb934572b9211932e1f4dbebd641fadcba12f75a1eaa00c85d0d",
        "url": "https://stackoverflow.com/questions/36088116/how-to-do-polymorphic-io-from-either-a-file-or-stdin-in-rust"
    },
    {
        "auto_descr": "Network with the international embedded community! Become an exhibitor at embedded world!",
        "crea_time": "2024-08-29T17:57:49.482458635+02:00",
        "crea_user": "api",
        "host": "www.embedded-world.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:49.482458635+02:00",
        "modi_user": "api",
        "path": "/en/exhibit",
        "scheme": "https",
        "title": "embedded world | Exhibit",
        "uri_uuid": "ef142954f6416fa482f9de84e1e9aceebdfe60548c7d04e72bc4761016771a09",
        "url": "https://www.embedded-world.de/en/exhibit"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:50.465021403+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:50.465021403+02:00",
        "modi_user": "api",
        "path": "/wiki/Xorshift",
        "scheme": "https",
        "title": "Xorshift - Wikipedia",
        "uri_uuid": "15e50ab6d4244e5fb8225e65de7ca8067e66a6fc93d6ed872c3cde546f174933",
        "url": "https://en.wikipedia.org/wiki/Xorshift"
    },
    {
        "auto_descr": "wasm percolator sim in rust. Contribute to lexeyOK/wasm-percolator development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:50.797059661+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:50.797059661+02:00",
        "modi_user": "api",
        "path": "/lexeyOK/wasm-percolator",
        "scheme": "https",
        "title": "GitHub - lexeyOK/wasm-percolator: wasm percolator sim in rust",
        "uri_uuid": "c311f3477ef28738f8c09fcf3c4954426a4761882bd8440ba2a9def96c47e30f",
        "url": "https://github.com/lexeyOK/wasm-percolator"
    },
    {
        "auto_descr": "Electrify Node.js with the power of Rust!",
        "crea_time": "2024-08-29T17:57:51.734357784+02:00",
        "crea_user": "api",
        "host": "neon-bindings.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:51.734357784+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Neon - Electrify Node.js with the power of Rust! | Neon",
        "uri_uuid": "6397508e3717b3d1733c6c0dede4810f6bc425f56609d9064540b1e430c5fcd4",
        "url": "https://neon-bindings.com/"
    },
    {
        "auto_descr": "—————SOURCES————————————————————————Percolation – Béla Bollobás and Oliver RiordanCambridge University Press, New York, 2006.Sixty Years of Percolation – Hug...",
        "crea_time": "2024-08-29T17:57:52.119380278+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:52.119380278+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Percolation: a Mathematical Phase Transition - YouTube",
        "uri_uuid": "9d461540a84014ca5a070db1f5ea63dd8311632b916791893c44e5d34ed99c90",
        "url": "https://www.youtube.com/watch?v=a-767WnbaCQ"
    },
    {
        "auto_descr": "Demo project for Rust Berlin online meetup. Contribute to jbethune/bigsoftware development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:52.908297270+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:52.908297270+02:00",
        "modi_user": "api",
        "path": "/jbethune/BigSoftware",
        "scheme": "https",
        "title": "GitHub - jbethune/bigsoftware: Demo project for Rust Berlin online meetup",
        "uri_uuid": "44929696ac7f50d133ef9dd90870ddeff5f537f0d9f7e98916e0fe7608b456bf",
        "url": "https://github.com/jbethune/BigSoftware"
    },
    {
        "auto_descr": "Let's talk about Nom! In this fireside chat, senior developer Nathan West dives into the fundamentals of Nom, a popular parser combinator library for Rust.Yo...",
        "crea_time": "2024-08-29T17:57:53.699873552+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:53.699873552+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "1Password Developer Fireside Chat: Intro to Nom Parsers, Part 1: Fundamentals - YouTube",
        "uri_uuid": "be2b4e79d07f0abafa960afaf2ee0849bb5a1468a9ed1eedbe9db2d7402e5d3a",
        "url": "https://www.youtube.com/watch?v=zHF6j1LvngA"
    },
    {
        "auto_descr": "A dynamically-sized view into a contiguous sequence, `[T]`. Contiguous here means that elements are laid out so that every element is the same distance from its neighbors.",
        "crea_time": "2024-08-29T17:57:54.426301217+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:54.426301217+02:00",
        "modi_user": "api",
        "path": "/std/primitive.slice.html",
        "scheme": "https",
        "title": "slice - Rust",
        "uri_uuid": "ebf24129a0e3e315cb68ff65e00554ac5f063171121a8c3b064a54910d4e95fc",
        "url": "https://doc.rust-lang.org/std/primitive.slice.html#method.windows"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:55.783262499+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:55.783262499+02:00",
        "modi_user": "api",
        "path": "/r/adventofcode/comments/ze8kug/analysis_of_the_difficulty_of_past_puzzles/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "45a053aad4c25978e5b9167e08cbc92606e001029c597c22f800e4b59e507bb1",
        "url": "https://www.reddit.com/r/adventofcode/comments/ze8kug/analysis_of_the_difficulty_of_past_puzzles/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:55.900445662+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:55.900445662+02:00",
        "modi_user": "api",
        "path": "/good-praxis/aoc-2022",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "72b44f8f35e207afe97308e3fb57e579df03d623be243f51bb610f202ec141af",
        "url": "https://github.com/good-praxis/aoc-2022"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:57:56.172173660+02:00",
        "crea_user": "api",
        "host": "simonwillison.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:56.172173660+02:00",
        "modi_user": "api",
        "path": "/2022/Dec/5/rust-chatgpt-copilot/",
        "scheme": "https",
        "title": "AI assisted learning: Learning Rust with ChatGPT, Copilot and Advent of Code",
        "uri_uuid": "950a292ef988ccd01cb1bd540882b9d7932493ef0398a07a3217e2ffa9e64a5c",
        "url": "https://simonwillison.net/2022/Dec/5/rust-chatgpt-copilot/"
    },
    {
        "auto_descr": "Contribute to jbethune/wonderful_rustdoc development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:56.771859747+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:56.771859747+02:00",
        "modi_user": "api",
        "path": "/jbethune/wonderful_rustdoc",
        "scheme": "https",
        "title": "GitHub - jbethune/wonderful_rustdoc",
        "uri_uuid": "597b6bd6b59efaea3ed716fe8ce0eb94b2baf079864e9d8a28702ca74f723b83",
        "url": "https://github.com/jbethune/wonderful_rustdoc"
    },
    {
        "auto_descr": "Rust D-Bus crate. Repository moved to Github",
        "crea_time": "2024-08-29T17:57:57.636019238+02:00",
        "crea_user": "api",
        "host": "gitlab.freedesktop.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:57.636019238+02:00",
        "modi_user": "api",
        "path": "/dbus/zbus/-/blob/main/zbus/src/lib.rs",
        "scheme": "https",
        "title": "Files · main · dbus / zbus · GitLab",
        "uri_uuid": "74a57604e82205d9600e21604c91dcc2f5f0493d26bc018b0669c1e03d22a2df",
        "url": "https://gitlab.freedesktop.org/dbus/zbus/-/blob/main/zbus/src/lib.rs#L5"
    },
    {
        "auto_descr": "The Markdown elements outlined in the original design document.",
        "crea_time": "2024-08-29T17:57:58.598717714+02:00",
        "crea_user": "api",
        "host": "www.markdownguide.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:58.598717714+02:00",
        "modi_user": "api",
        "path": "/basic-syntax",
        "scheme": "https",
        "title": "Basic Syntax | Markdown Guide",
        "uri_uuid": "c07911eff8ff29fd582059ce3349530c464515a29f5ee5029df6a9a7579fa92c",
        "url": "https://www.markdownguide.org/basic-syntax"
    },
    {
        "auto_descr": "Workarounds for things not officially supported by Markdown.",
        "crea_time": "2024-08-29T17:57:59.368099513+02:00",
        "crea_user": "api",
        "host": "www.markdownguide.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:59.368099513+02:00",
        "modi_user": "api",
        "path": "/hacks/",
        "scheme": "https",
        "title": "Hacks | Markdown Guide",
        "uri_uuid": "9950bae96269d61c3bb6ec5d02dd0350b0eb54671f51b1127e37654ea3330782",
        "url": "https://www.markdownguide.org/hacks/"
    },
    {
        "auto_descr": " A free and open-source reference guide that explains how to use Markdown.",
        "crea_time": "2024-08-29T17:57:59.518532242+02:00",
        "crea_user": "api",
        "host": "www.markdownguide.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:59.518532242+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Markdown Guide",
        "uri_uuid": "754453af01251f3166315ec61fd03da90c49ed164c8a3b2f8d85d8ec5302081d",
        "url": "https://www.markdownguide.org/"
    },
    {
        "auto_descr": "Educational blog posts for Rust beginners. Contribute to pretzelhammer/rust-blog development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:57:59.628440920+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:57:59.628440920+02:00",
        "modi_user": "api",
        "path": "/pretzelhammer/rust-blog/blob/master/posts/tour-of-rusts-standard-library-traits.md",
        "scheme": "https",
        "title": "rust-blog/posts/tour-of-rusts-standard-library-traits.md at master · pretzelhammer/rust-blog · GitHub",
        "uri_uuid": "2c28be4ae826f36bfbb53c8f936660a688d18c6e2a0d099dad6f8390c90e974d",
        "url": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/tour-of-rusts-standard-library-traits.md#derive-macros"
    },
    {
        "auto_descr": "Render the Firefox Data Documentation using mdbook - badboy/mdbook-dtmo",
        "crea_time": "2024-08-29T17:58:00.835358537+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:00.835358537+02:00",
        "modi_user": "api",
        "path": "/badboy/mdbook-dtmo",
        "scheme": "https",
        "title": "GitHub - badboy/mdbook-dtmo: Render the Firefox Data Documentation using mdbook",
        "uri_uuid": "7d1d1fd28adcac936c7c763b86de16b074656e9ffc14bf50bf8922cdb8322142",
        "url": "https://github.com/badboy/mdbook-dtmo"
    },
    {
        "auto_descr": "Learn how to create a website directly from a repository on GitHub.com. Explore website building tools like Jekyll and troubleshoot issues with your GitHub Pages site.",
        "crea_time": "2024-08-29T17:58:02.389904497+02:00",
        "crea_user": "api",
        "host": "docs.github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:02.389904497+02:00",
        "modi_user": "api",
        "path": "/en/pages",
        "scheme": "https",
        "title": "GitHub Pages documentation - GitHub Docs",
        "uri_uuid": "4eb003b00ccbd81aec42d2d491119846a91b8ac6b3d45f2f35ce9f13f7365e2e",
        "url": "https://docs.github.com/en/pages"
    },
    {
        "auto_descr": "Free documentation hosting on docs.rs",
        "crea_time": "2024-08-29T17:58:02.608320984+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:02.608320984+02:00",
        "modi_user": "api",
        "path": "/wonderful_rustdoc/0.1.0/wonderful_rustdoc/hosting/index.html",
        "scheme": "https",
        "title": "wonderful_rustdoc::hosting - Rust",
        "uri_uuid": "d29dd170d0b404434b196f3b8ed549c13e504e43fb6da73308522a07bbdc5f7c",
        "url": "https://docs.rs/wonderful_rustdoc/0.1.0/wonderful_rustdoc/hosting/index.html"
    },
    {
        "auto_descr": "Create book from markdown files. Like Gitbook but implemented in Rust",
        "crea_time": "2024-08-29T17:58:02.756747223+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:02.756747223+02:00",
        "modi_user": "api",
        "path": "/mdBook/format/configuration/general.html",
        "scheme": "https",
        "title": "General - mdBook Documentation",
        "uri_uuid": "1f4cdaccf2eac9d520e3fb575baf5a778be8f10d0aae83b720c2091b58bb3123",
        "url": "https://rust-lang.github.io/mdBook/format/configuration/general.html#build-options"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:03.098527336+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:03.098527336+02:00",
        "modi_user": "api",
        "path": "/cargo/reference/cargo-targets.html",
        "scheme": "https",
        "title": "Cargo Targets - The Cargo Book",
        "uri_uuid": "ec993dc6a73a670371e09fdc7ff2fdc389f22eeb5332a601bd748219c07e0887",
        "url": "https://doc.rust-lang.org/cargo/reference/cargo-targets.html?highlight=src%2Fbin#binaries"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:04.563550303+02:00",
        "crea_user": "api",
        "host": "bevy-cheatbook.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:04.563550303+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Introduction - Unofficial Bevy Cheat Book",
        "uri_uuid": "0f6334c3e766ef5ba0512bbf519616c4bdddfc42c87827c38eb0547044c16165",
        "url": "https://bevy-cheatbook.github.io/"
    },
    {
        "auto_descr": "An ergonomic abbreviation for [`Default::default()`] to make initializing structs easier. This is especially helpful when combined with “struct update syntax”.",
        "crea_time": "2024-08-29T17:58:04.821962645+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:04.821962645+02:00",
        "modi_user": "api",
        "path": "/bevy/0.9.0/bevy/prelude/fn.default.html",
        "scheme": "https",
        "title": "default in bevy::prelude - Rust",
        "uri_uuid": "42ee0a6326baa18c6fead1dc334d196c841b8c8a2424a22e6e179f79be734ce0",
        "url": "https://docs.rs/bevy/0.9.0/bevy/prelude/fn.default.html"
    },
    {
        "auto_descr": "Frequently asked questions about Entity Component Systems - SanderMertens/ecs-faq",
        "crea_time": "2024-08-29T17:58:04.983338394+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:04.983338394+02:00",
        "modi_user": "api",
        "path": "/SanderMertens/ecs-faq",
        "scheme": "https",
        "title": "GitHub - SanderMertens/ecs-faq: Frequently asked questions about Entity Component Systems",
        "uri_uuid": "acf9ad18e3520ef8e7f4269b8fa25ae6be606e96250782e15442839e09a3f2c9",
        "url": "https://github.com/SanderMertens/ecs-faq"
    },
    {
        "auto_descr": "Latest Bevy (github code updated to 0.14) Full Tutorial for Rust Programming Game Development. All new, and all in one episode. ECS (Entity Component System)...",
        "crea_time": "2024-08-29T17:58:05.881349873+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:05.881349873+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust Bevy Full Tutorial - Game Development with Rust - Git Code Updated to Bevy v0.14 !!! - YouTube",
        "uri_uuid": "ffacffaeba059f64e33e9b0673153f6878992cebb18c35eda1ae8fadc8225875",
        "url": "https://www.youtube.com/watch?v=j7qHwb7geIM&t=65s"
    },
    {
        "auto_descr": "This is a new series where we code together! Playlist: https://www.youtube.com/playlist?list=PLtTT8p-gjGEdGzZ0ET2bwNnA6iP_mmmrvSource Code: https://github.co...",
        "crea_time": "2024-08-29T17:58:06.596600322+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:06.596600322+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Let's Code Asteroids in Rust with a First-Time Bevy User - YouTube",
        "uri_uuid": "d4905391030694417f9917191b3d9e163a72f03d2749d4a0f30de238bf9f271a",
        "url": "https://www.youtube.com/watch?v=QCys49c44PU&list=LL&index=1&t=276s"
    },
    {
        "auto_descr": "SDL2 bindings for Rust. Contribute to Rust-SDL2/rust-sdl2 development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:07.670139369+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:07.670139369+02:00",
        "modi_user": "api",
        "path": "/Rust-SDL2/rust-sdl2",
        "scheme": "https",
        "title": "GitHub - Rust-SDL2/rust-sdl2: SDL2 bindings for Rust",
        "uri_uuid": "098a48656246a435f2ddeab16398727f58e5a2b62b5fb76a57ab6930f56f461f",
        "url": "https://github.com/Rust-SDL2/rust-sdl2"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:08.700171838+02:00",
        "crea_user": "api",
        "host": "www.quora.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:08.700171838+02:00",
        "modi_user": "api",
        "path": "/Was-Rust-written-in-C-C",
        "scheme": "https",
        "title": "Was Rust written in C/C++? - Quora",
        "uri_uuid": "db021c921c280e9849244db5b2ce535aeb9c5c6e2c5adb4a96531b26ebde6730",
        "url": "https://www.quora.com/Was-Rust-written-in-C-C"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:09.426597073+02:00",
        "crea_user": "api",
        "host": "iodapson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:09.426597073+02:00",
        "modi_user": "api",
        "path": "/yew-reference/",
        "scheme": "https",
        "title": "Introduction - Yew Reference",
        "uri_uuid": "139be800434ffc195dd65479e3a2b4a9282c5c07530a9d585f78a89ec3c9fb68",
        "url": "https://iodapson.github.io/yew-reference/"
    },
    {
        "auto_descr": "Create book from markdown files. Like Gitbook but implemented in Rust",
        "crea_time": "2024-08-29T17:58:09.666966963+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:09.666966963+02:00",
        "modi_user": "api",
        "path": "/mdBook/",
        "scheme": "https",
        "title": "Introduction - mdBook Documentation",
        "uri_uuid": "07da7e664d2b730d3e2aac294a47547721c5745fc599df8ab1dfdc86c4e20e9c",
        "url": "https://rust-lang.github.io/mdBook/"
    },
    {
        "auto_descr": "Create book from markdown files. Like Gitbook but implemented in Rust",
        "crea_time": "2024-08-29T17:58:09.922557406+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:09.922557406+02:00",
        "modi_user": "api",
        "path": "/mdBook/cli/watch.html",
        "scheme": "https",
        "title": "watch - mdBook Documentation",
        "uri_uuid": "08790cc77d48f5848a49ba03c6c26c152b1bb7952f7c47b3e4ad4230c2e2d477",
        "url": "https://rust-lang.github.io/mdBook/cli/watch.html"
    },
    {
        "auto_descr": "A crate built on top of `axum-sessions`, implementing the CSRF Synchronizer Token Pattern - axum-csrf-sync-pattern/src/lib.rs at main · LeoniePhiline/axum-csrf-sync-pattern",
        "crea_time": "2024-08-29T17:58:10.146922851+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:10.146922851+02:00",
        "modi_user": "api",
        "path": "/LeoniePhiline/axum-csrf-sync-pattern/blob/main/src/lib.rs",
        "scheme": "https",
        "title": "axum-csrf-sync-pattern/src/lib.rs at main · LeoniePhiline/axum-csrf-sync-pattern · GitHub",
        "uri_uuid": "4af36b06465cdeac2f86ce0d9dc5d2fc9ae3ccc30ecf43b634be61ca76e8e889",
        "url": "https://github.com/LeoniePhiline/axum-csrf-sync-pattern/blob/main/src/lib.rs"
    },
    {
        "auto_descr": "This is a solar-powered website, which means it sometimes goes offline",
        "crea_time": "2024-08-29T17:58:11.680103780+02:00",
        "crea_user": "api",
        "host": "www.lowtechmagazine.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:11.680103780+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "LOW←TECH MAGAZINE",
        "uri_uuid": "701d95aaedb6f9aebf7d8e33fc680b288ca078233906b658076f7e27e58443bb",
        "url": "https://www.lowtechmagazine.com/"
    },
    {
        "auto_descr": "a discord bot for generating harmonica note layout charts - Seebass22/harptool-bot",
        "crea_time": "2024-08-29T17:58:12.280011866+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:12.280011866+02:00",
        "modi_user": "api",
        "path": "/Seebass22/harptool-bot",
        "scheme": "https",
        "title": "GitHub - Seebass22/harptool-bot: a discord bot for generating harmonica note layout charts",
        "uri_uuid": "a33ff5214f8801c25946539e248725be4273780ba0e884e7c553c00936705b16",
        "url": "https://github.com/Seebass22/harptool-bot"
    },
    {
        "auto_descr": "fixes #6\n\n row_iter_mut\n column_iter_mut\n rows_iter_mut\n columns_iter_mut\n elements_row_major_iter_mut\n elements_column_major_iter_mut\n\nI've decided to attempt to contribute these functions myself ...",
        "crea_time": "2024-08-29T17:58:13.113034695+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:13.113034695+02:00",
        "modi_user": "api",
        "path": "/HarrisonMc555/array2d/pull/13",
        "scheme": "https",
        "title": "Add mutable iterators by good-praxis · Pull Request #13 · HarrisonMc555/array2d · GitHub",
        "uri_uuid": "68aa50686749a8ebdcf2eb6848b9a9682695652c7c79f60db890001a3fd64751",
        "url": "https://github.com/HarrisonMc555/array2d/pull/13"
    },
    {
        "auto_descr": "This is a solar-powered website, which means it sometimes goes offline",
        "crea_time": "2024-08-29T17:58:13.939997076+02:00",
        "crea_user": "api",
        "host": "solar.lowtechmagazine.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:13.939997076+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "LOW←TECH MAGAZINE",
        "uri_uuid": "67c7a48b7e5083f78ae08a6f327532885811b10f65118ea71b6546278540f9f0",
        "url": "https://solar.lowtechmagazine.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:14.276938834+02:00",
        "crea_user": "api",
        "host": "www.pyree.art",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:14.276938834+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ca59ce01f8535da23763c19f6ef687aa03d8731053722d976e668e7539299e76",
        "url": "https://www.pyree.art/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:22.243607118+02:00",
        "crea_user": "api",
        "host": "www.redbubble.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:22.243607118+02:00",
        "modi_user": "api",
        "path": "/de/shop/rust+lang+t-shirts",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "7df192d7d17fb8cb18c9f1002564a695c2e2ccaccbb5756c25633d7d52878a9e",
        "url": "https://www.redbubble.com/de/shop/rust+lang+t-shirts"
    },
    {
        "auto_descr": "WASM demo project about delay reasons for german trains. - barafael/there-is-always-a-reason",
        "crea_time": "2024-08-29T17:58:22.396640148+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:22.396640148+02:00",
        "modi_user": "api",
        "path": "/barafael/there-is-always-a-reason",
        "scheme": "https",
        "title": "GitHub - barafael/there-is-always-a-reason: WASM demo project about delay reasons for german trains.",
        "uri_uuid": "ff9ae6e03718ebde07169ae5cd8c295ffadde1a7c303054d602d9643a4277c2d",
        "url": "https://github.com/barafael/there-is-always-a-reason"
    },
    {
        "auto_descr": "12.7K Posts, 1.18K Following, 473 Followers · 🦀💨💥✨\n\nHighly focused Rust hacker. Constant merry go round in my head. Undiagnosed ADHD. Trauma healing witch. Nervous system ninja. Night owl.\nVibing to epic music. Minimal techno. The Witcher. Neon Genesis Evangelion. NieR: Automata. Trains. Trans. An actual cat. Pan & mono. FPV & quadrocopter enthusiast. Interested in too many things. I need more lives.\n\n❤️ `clippy::pedantic`",
        "crea_time": "2024-08-29T17:58:23.691268076+02:00",
        "crea_user": "api",
        "host": "chaos.social",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:23.691268076+02:00",
        "modi_user": "api",
        "path": "/web/@calisti",
        "scheme": "https",
        "title": "Calisti 🏳️‍🌈🦇 (@calisti@chaos.social) - chaos.social",
        "uri_uuid": "e8a5249d3934dd33f8a2c793a6bdc41deb654476d438d8be3ccce0c711c20d62",
        "url": "https://chaos.social/web/@calisti"
    },
    {
        "auto_descr": "nom, eating data byte by byte",
        "crea_time": "2024-08-29T17:58:23.841274698+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:23.841274698+02:00",
        "modi_user": "api",
        "path": "/nom/7.1.1/nom/",
        "scheme": "https",
        "title": "nom - Rust",
        "uri_uuid": "6d819b0fc6e8497b286a116f391e953c632497db6c86ccc3b88af89ac1c6538c",
        "url": "https://docs.rs/nom/7.1.1/nom/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:24.965002094+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:24.965002094+02:00",
        "modi_user": "api",
        "path": "/book/ch09-02-recoverable-errors-with-result.html",
        "scheme": "https",
        "title": "Recoverable Errors with Result - The Rust Programming Language",
        "uri_uuid": "26cee19449cbb40126ad88c1f46803c1ea1969a33ecc81b02cf5bd07413892bb",
        "url": "https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html#shortcuts-for-panic-on-error-unwrap-and-expect"
    },
    {
        "auto_descr": "After adding nom to a project, rust-analyzer started to panic. It looks like a line like this one is the culprit: let (remainder, magic) = take(4u8)(input)?; As soon as such lines are commented out, the panic disappears. To double-check,...",
        "crea_time": "2024-08-29T17:58:25.134981218+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:25.134981218+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-analyzer/issues/13579",
        "scheme": "https",
        "title": "Panic when parsing nom operations · Issue #13579 · rust-lang/rust-analyzer · GitHub",
        "uri_uuid": "765bc2d87ab72ab4cf03baee70cc3a43d196e015b7ff565eab8934ec5e4d1ce3",
        "url": "https://github.com/rust-lang/rust-analyzer/issues/13579"
    },
    {
        "auto_descr": "Fixes #13579",
        "crea_time": "2024-08-29T17:58:25.931477551+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:25.931477551+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-analyzer/pull/13584",
        "scheme": "https",
        "title": "fix: fix panic when computing signature of generic `FnOnce` callable by jonas-schievink · Pull Request #13584 · rust-lang/rust-analyzer · GitHub",
        "uri_uuid": "1e6488e4c0a4b93a0ae61fea0b67cf3ed37de2d546ac42c517ccadf888a2c5a5",
        "url": "https://github.com/rust-lang/rust-analyzer/pull/13584"
    },
    {
        "auto_descr": "Rust parser combinator framework. Contribute to rust-bakery/nom development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:26.870925953+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:26.870925953+02:00",
        "modi_user": "api",
        "path": "/Geal/nom/blob/main/doc/choosing_a_combinator.md",
        "scheme": "https",
        "title": "nom/doc/choosing_a_combinator.md at main · rust-bakery/nom · GitHub",
        "uri_uuid": "7370ce2d88c65ba4963725787fa3aa7fb5f1e9954e026309985d61a7e04370e3",
        "url": "https://github.com/Geal/nom/blob/main/doc/choosing_a_combinator.md"
    },
    {
        "auto_descr": "A special input type for nom to locate tokens. Contribute to fflorent/nom_locate development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:27.544523955+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:27.544523955+02:00",
        "modi_user": "api",
        "path": "/fflorent/nom_locate",
        "scheme": "https",
        "title": "GitHub - fflorent/nom_locate: A special input type for nom to locate tokens",
        "uri_uuid": "a086d5e3c7ed0857a778075de2a8ddeb98d709d6a0e16edcf3889aaffeac7013",
        "url": "https://github.com/fflorent/nom_locate"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:28.796477321+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:28.796477321+02:00",
        "modi_user": "api",
        "path": "/crates/yewdux",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "8b9a7e05c8c615ce5992f640125bda55fda0546e210d80dc598a73147244ffdf",
        "url": "https://crates.io/crates/yewdux"
    },
    {
        "auto_descr": "Provides functions to compile and load Rust code from R, similar\n    to how Rcpp or cpp11 allow easy interfacing with C++ code. Also provides\n    helper functions to create R packages that use Rust code. Under the hood,\n    the Rust crate extendr is used to do all the heavy lifting.",
        "crea_time": "2024-08-29T17:58:29.028579762+02:00",
        "crea_user": "api",
        "host": "extendr.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:29.028579762+02:00",
        "modi_user": "api",
        "path": "/rextendr/",
        "scheme": "https",
        "title": "Call Rust Code from R using the extendr Crate • rextendr",
        "uri_uuid": "860765e6f3a3e8fcb1a8b5f5ac77bb68ed3383bc0f4d1b954157a9949f9022bb",
        "url": "https://extendr.github.io/rextendr/"
    },
    {
        "auto_descr": "Contribute to Tmando/rust_miscellaneous_pkg development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:29.300154333+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:29.300154333+02:00",
        "modi_user": "api",
        "path": "/Tmando/rust_miscellaneous_pkg",
        "scheme": "https",
        "title": "GitHub - Tmando/rust_miscellaneous_pkg",
        "uri_uuid": "ee2ac65e12940d1b9b5fe70dd974a18e33ef0e591b331553d6504556620906e8",
        "url": "https://github.com/Tmando/rust_miscellaneous_pkg"
    },
    {
        "auto_descr": "Contribute to Tmando/RWrapperMiscellaneousPkg development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:30.251067881+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:30.251067881+02:00",
        "modi_user": "api",
        "path": "/Tmando/RWrapperMiscellaneousPkg",
        "scheme": "https",
        "title": "GitHub - Tmando/RWrapperMiscellaneousPkg",
        "uri_uuid": "8fd593a837957b37eebe150adc2b55ee696b831e4211103651a4f34c5ef3e50b",
        "url": "https://github.com/Tmando/RWrapperMiscellaneousPkg"
    },
    {
        "auto_descr": "We use programs to automate tasks or solve specific problems for us. Too seldomly we use it to create art or simply write playful programs just for the fun o...",
        "crea_time": "2024-08-29T17:58:31.155334645+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:31.155334645+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust Linz, May 2021 - Lisa Passing - Creative Rust - YouTube",
        "uri_uuid": "1fa3072333e38d7815610568afb644b767897dc1e78fe07dffefff90ab1b6bc5",
        "url": "https://www.youtube.com/watch?v=VJUhINt5dF0"
    },
    {
        "auto_descr": "The story behind the creation of nannou and how MindBuffer utilises it to create large-scale art installations.https://rustfest.global/2021/schedule/",
        "crea_time": "2024-08-29T17:58:31.946263317+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:31.946263317+02:00",
        "modi_user": "api",
        "path": "/jSXZIjmcDps",
        "scheme": "https",
        "title": "MindBuffer + Nannou  — Rust in Arts 2021 - YouTube",
        "uri_uuid": "bac7f74d3f359a18d3dabf2d729157def23d534e8be2fb1251d39430224585c9",
        "url": "https://youtu.be/jSXZIjmcDps"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:33.683459398+02:00",
        "crea_user": "api",
        "host": "jttmeet.jit.si",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:33.683459398+02:00",
        "modi_user": "api",
        "path": "/rust-nbg",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "265d3ac4cf3324c48ede982e1ee2b85967a87507f480ef7ff081047f3505f570",
        "url": "https://jttmeet.jit.si/rust-nbg"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:33.797024867+02:00",
        "crea_user": "api",
        "host": "qr.ae",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:33.797024867+02:00",
        "modi_user": "api",
        "path": "/pvmOh5",
        "scheme": "https",
        "title": "Paulo Martins's answer to A new software developer spent 4 days to make a simple HTML button and CSS, should I fire him? - Quora",
        "uri_uuid": "017032899037fa8ccfc438c467af01a9c32a0f219505d3c0e260134fa6d57fb7",
        "url": "https://qr.ae/pvmOh5"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:34.755810478+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:34.755810478+02:00",
        "modi_user": "api",
        "path": "/wiki/Pareto_principle",
        "scheme": "https",
        "title": "Pareto principle - Wikipedia",
        "uri_uuid": "ba3dea82926d38d672a589c24fac37be29ce071ad4c0537ee64fa49dca9ec24a",
        "url": "https://en.wikipedia.org/wiki/Pareto_principle"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:58:35.100162795+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:35.100162795+02:00",
        "modi_user": "api",
        "path": "/episode/tiemoko-ballo/",
        "scheme": "https",
        "title": "High Assurance Rust with Tiemoko Ballo :: Rustacean Station",
        "uri_uuid": "99f2d38167eb8b8988048e6f6dc630c49b45b2a6675f6c1983ca8dc8bb506494",
        "url": "https://rustacean-station.org/episode/tiemoko-ballo/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:35.232783915+02:00",
        "crea_user": "api",
        "host": "netzpolitik.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:35.232783915+02:00",
        "modi_user": "api",
        "path": "/2022/chaos-computer-club-vs-gematik-buerokratie-im-wert-von-300-millionen-euro/",
        "scheme": "https",
        "title": "Chaos Computer Club vs. Gematik: Bürokratie im Wert von 300 Millionen Euro",
        "uri_uuid": "d3f8262a3070a41e2e4f2baffa27bc3167111f338f18aebb659f2438b599bf94",
        "url": "https://netzpolitik.org/2022/chaos-computer-club-vs-gematik-buerokratie-im-wert-von-300-millionen-euro/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:35.468169050+02:00",
        "crea_user": "api",
        "host": "logbuch-netzpolitik.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:35.468169050+02:00",
        "modi_user": "api",
        "path": "/lnp443-auf-yolo-konfigurieren",
        "scheme": "https",
        "title": "LNP443 Auf YOLO konfigurieren | Logbuch:Netzpolitik",
        "uri_uuid": "de272a2ba0148d25a2727000e763e8acde74f804eb0f3ebc8f130a56c3ea1b4e",
        "url": "https://logbuch-netzpolitik.de/lnp443-auf-yolo-konfigurieren"
    },
    {
        "auto_descr": "Oxide hosts a weekly Discord show where we discuss a wide range of topics: computer history, startups, Oxide hardware bringup, and other topics du jour. These are the recordings in podcast form.\nJoin us live (usually Mondays at 5pm PT) https://discord.gg/gcQxNHAKCB\nSubscribe to our calendar: https://sesh.fyi/api/calendar/v2/iMdFbuFRupMwuTiwvXswNU.ics",
        "crea_time": "2024-08-29T17:58:35.924482906+02:00",
        "crea_user": "api",
        "host": "oxide-and-friends.transistor.fm",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:35.924482906+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Oxide and Friends",
        "uri_uuid": "c5f964523d651f0421d59355414186264b4dcffde1bc93058211c1621805b754",
        "url": "https://oxide-and-friends.transistor.fm/"
    },
    {
        "auto_descr": "We interview incredible guests retelling stories of adventure at the hardware/software interface.",
        "crea_time": "2024-08-29T17:58:36.832280554+02:00",
        "crea_user": "api",
        "host": "oxide.computer",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:36.832280554+02:00",
        "modi_user": "api",
        "path": "/podcasts/on-the-metal",
        "scheme": "https",
        "title": "On the Metal / Oxide",
        "uri_uuid": "f4cdf8fcb243877d3e36ca846ca286bb7d645bf7ceb1deff5d9b08dbd92a653d",
        "url": "https://oxide.computer/podcasts/on-the-metal"
    },
    {
        "auto_descr": "Ruby-based regular expression editor/tester",
        "crea_time": "2024-08-29T17:58:37.074331387+02:00",
        "crea_user": "api",
        "host": "rubular.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:37.074331387+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rubular: a Ruby regular expression editor",
        "uri_uuid": "95e4c679bd7b57251348b84a48a50b87f781ad3bd1cc5fb61353d50a627cf011",
        "url": "https://rubular.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:37.553108256+02:00",
        "crea_user": "api",
        "host": "regex101.com",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:37.553108256+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "29fd49699aee77df6c57f6fb93614d313bcf98b3565193bea3e395cde2d443d7",
        "url": "https://regex101.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:37.677177821+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:37.677177821+02:00",
        "modi_user": "api",
        "path": "/208/",
        "scheme": "https",
        "title": "xkcd: Regular Expressions",
        "uri_uuid": "b657302fbcbc8ec23da6d58f71e233875b77554068eef8ed612108c284b8d3ed",
        "url": "https://xkcd.com/208/"
    },
    {
        "auto_descr": "Extension for Visual Studio Code - Regex matches previewer for JavaScript, TypeScript, PHP and Haxe in Visual Studio Code.",
        "crea_time": "2024-08-29T17:58:38.201654540+02:00",
        "crea_user": "api",
        "host": "marketplace.visualstudio.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:38.201654540+02:00",
        "modi_user": "api",
        "path": "/items",
        "scheme": "https",
        "title": "\n        Regex Previewer - Visual Studio Marketplace\n    ",
        "uri_uuid": "3e877dcb5de7988eff196f847a71f905b722c501d3ef2e30eb38fb262731de03",
        "url": "https://marketplace.visualstudio.com/items?itemName=chrmarti.regex"
    },
    {
        "auto_descr": "Found Rust crates: regex, fancy-regex, etc.",
        "crea_time": "2024-08-29T17:58:38.543890377+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:38.543890377+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "‘regex’ search // Lib.rs",
        "uri_uuid": "544c5413170a1378478f2b369f274c1e56b8a75d64deacb3f0b76448d96cecd3",
        "url": "https://lib.rs/?regex"
    },
    {
        "auto_descr": "Moin!\nIch habe mal ein paar Stunden über den Quelldaten gesessen und vieles gesäubert.\nHier alle Bearbeitungen zum Nachvollziehen:\n1. Manuelle Bearbeitung\nManuelle Verschiebung des user-Felds\nIn zw...",
        "crea_time": "2024-08-29T17:58:39.493274438+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:39.493274438+02:00",
        "modi_user": "api",
        "path": "/pajowu/das-beh-rdliche.de/pull/1",
        "scheme": "https",
        "title": "Clean source data by LeoniePhiline · Pull Request #1 · pajowu/das-beh-rdliche.de · GitHub",
        "uri_uuid": "6123d99198f5a2575174f6fe448893ee701c54002e929422f6bb3e4b8929cca7",
        "url": "https://github.com/pajowu/das-beh-rdliche.de/pull/1"
    },
    {
        "auto_descr": "This crate provides routines for searching strings for matches of a regular expression (aka “regex”). The regex syntax supported by this crate is similar to other regex engines, but it lacks several features that are not known how to implement efficiently. This includes, but is not limited to, look-around and backreferences. In exchange, all regex searches in this crate have worst case `O(m * n)` time complexity, where `m` is proportional to the size of the regex and `n` is proportional to the size of the string being searched.",
        "crea_time": "2024-08-29T17:58:40.279521893+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:40.279521893+02:00",
        "modi_user": "api",
        "path": "/regex/latest/regex/",
        "scheme": "https",
        "title": "regex - Rust",
        "uri_uuid": "1364d6bfb985a5926ca63d2ad573d8a75b6bb6d5e9e50be2bd5ec37062be8c1f",
        "url": "https://docs.rs/regex/latest/regex/#syntax"
    },
    {
        "auto_descr": "This crate provides routines for searching strings for matches of a regular expression (aka “regex”). The regex syntax supported by this crate is similar to other regex engines, but it lacks several features that are not known how to implement efficiently. This includes, but is not limited to, look-around and backreferences. In exchange, all regex searches in this crate have worst case `O(m * n)` time complexity, where `m` is proportional to the size of the regex and `n` is proportional to the size of the string being searched.",
        "crea_time": "2024-08-29T17:58:40.509814464+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:40.509814464+02:00",
        "modi_user": "api",
        "path": "/regex/latest/regex/",
        "scheme": "https",
        "title": "regex - Rust",
        "uri_uuid": "0f25951c17a632982a523fb77295d7c278bfffd80612c1994c096152e380a68b",
        "url": "https://docs.rs/regex/latest/regex/#grouping-and-flags"
    },
    {
        "auto_descr": "Overview",
        "crea_time": "2024-08-29T17:58:40.723396591+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:40.723396591+02:00",
        "modi_user": "api",
        "path": "/once_cell",
        "scheme": "https",
        "title": "once_cell - Rust",
        "uri_uuid": "a9516930526b33cfc7ef6d81abe38dee5c6b02d9b26d4636b8687394572cb13a",
        "url": "https://docs.rs/once_cell"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:58:40.900945993+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:40.900945993+02:00",
        "modi_user": "api",
        "path": "/2022/08/11/Rust-1.63.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.63.0 | Rust Blog",
        "uri_uuid": "faa42afad2938d576f8fcc7d389ae93408ed76312bfd59d703601e73891b26d9",
        "url": "https://blog.rust-lang.org/2022/08/11/Rust-1.63.0.html#scoped-threads"
    },
    {
        "auto_descr": "Create a scope for spawning scoped threads.",
        "crea_time": "2024-08-29T17:58:41.117927670+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:41.117927670+02:00",
        "modi_user": "api",
        "path": "/stable/std/thread/fn.scope.html",
        "scheme": "https",
        "title": "scope in std::thread - Rust",
        "uri_uuid": "5327b01d3f9441a1078f45e30fbcc35a6f85803001c9edb3f50b9acc73ee76bf",
        "url": "https://doc.rust-lang.org/stable/std/thread/fn.scope.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:41.257432176+02:00",
        "crea_user": "api",
        "host": "embarkstudios.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:41.257432176+02:00",
        "modi_user": "api",
        "path": "/cargo-deny/",
        "scheme": "https",
        "title": "cargo-deny - cargo-deny",
        "uri_uuid": "9880afa66c4f484dd24c4623a90208a2bac6caa8797ece1d9370538d200c31de",
        "url": "https://embarkstudios.github.io/cargo-deny/"
    },
    {
        "auto_descr": "A cryptographically verifiable code review system for the cargo (Rust) package manager. - crev-dev/cargo-crev",
        "crea_time": "2024-08-29T17:58:41.501025030+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:41.501025030+02:00",
        "modi_user": "api",
        "path": "/crev-dev/cargo-crev",
        "scheme": "https",
        "title": "GitHub - crev-dev/cargo-crev: A cryptographically verifiable code review system for the cargo (Rust) package manager.",
        "uri_uuid": "d8d9e5025c51e534d5e278bd5983e9f40ef31102099b082b7400c2f525f2cbb2",
        "url": "https://github.com/crev-dev/cargo-crev"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:42.462099490+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:42.462099490+02:00",
        "modi_user": "api",
        "path": "/about",
        "scheme": "https",
        "title": "About // Lib.rs",
        "uri_uuid": "0bf26f0ea83ddbf42ec5dd671da131e90186d97c840e685b78ecc245f5329a2e",
        "url": "https://lib.rs/about"
    },
    {
        "auto_descr": "How many packages there are? How many dependencies they have? Which crate is the oldest or biggest? Is Rust usage growing?",
        "crea_time": "2024-08-29T17:58:43.029486171+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:43.029486171+02:00",
        "modi_user": "api",
        "path": "/stats",
        "scheme": "https",
        "title": "State of the Rust/Cargo crates ecosystem // Lib.rs",
        "uri_uuid": "e7422eb8ebba7a8281da8da5597f25a8d575d9d827b2d992a466476a5bd3d924",
        "url": "https://lib.rs/stats"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:43.975762+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:43.975762+02:00",
        "modi_user": "api",
        "path": "/crates/linux-embedded-hal",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c4ca8fc5d529418ad787fea6c454534816e5422020ea4f502273435b58e34113",
        "url": "https://crates.io/crates/linux-embedded-hal"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:44.208100011+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:44.208100011+02:00",
        "modi_user": "api",
        "path": "/crates/embedded-hal-mock",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "5a9a27ce0bc20f9ef2c728043447ff433d4eb1d500d728ee49aea62e87535f90",
        "url": "https://crates.io/crates/embedded-hal-mock"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:44.558330624+02:00",
        "crea_user": "api",
        "host": "smallcultfollowing.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:44.558330624+02:00",
        "modi_user": "api",
        "path": "/babysteps/blog/2022/09/22/rust-2024-the-year-of-everywhere/",
        "scheme": "https",
        "title": "Rust 2024...the year of everywhere? · baby steps",
        "uri_uuid": "bdac83cb02de21c63e48d6d29a1082932a449c60b8f1ab8f9af7c408979294ed",
        "url": "https://smallcultfollowing.com/babysteps/blog/2022/09/22/rust-2024-the-year-of-everywhere/"
    },
    {
        "auto_descr": "Julius Gustavsson is a Technical Expert, System Architect and one of the embedded Rust Pioneers at Volvo Cars Corporation.",
        "crea_time": "2024-08-29T17:58:45.431361877+02:00",
        "crea_user": "api",
        "host": "medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:45.431361877+02:00",
        "modi_user": "api",
        "path": "/volvo-cars-engineering/why-volvo-thinks-you-should-have-rust-in-your-car-4320bd639e09",
        "scheme": "https",
        "title": "Why Volvo thinks you should have Rust in your car | Volvo Cars Engineering",
        "uri_uuid": "5473b570f8c6668faad0cba47ac4b9b4b046a614448d3989704f97c83b37244e",
        "url": "https://medium.com/volvo-cars-engineering/why-volvo-thinks-you-should-have-rust-in-your-car-4320bd639e09"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:45.673839086+02:00",
        "crea_user": "api",
        "host": "dev.to",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:45.673839086+02:00",
        "modi_user": "api",
        "path": "/kgrech/6-things-you-can-do-with-the-cow-in-rust-4l55",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "96a809335520a1e07440ab18c3be2fe6a138855d939d2b23ed112add963d8073",
        "url": "https://dev.to/kgrech/6-things-you-can-do-with-the-cow-in-rust-4l55"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:45.796516116+02:00",
        "crea_user": "api",
        "host": "llogiq.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:45.796516116+02:00",
        "modi_user": "api",
        "path": "/2015/07/09/cow.html",
        "scheme": "https",
        "title": "Holy std::borrow::Cow! — Llogiq on stuff",
        "uri_uuid": "1982c5dfcec7ad6ea5b4cb20724e2d106682677bfce60dea75ca066806e9a93c",
        "url": "https://llogiq.github.io/2015/07/09/cow.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:46.056478706+02:00",
        "crea_user": "api",
        "host": "wishawa.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:46.056478706+02:00",
        "modi_user": "api",
        "path": "/posts/async-ui-intro/",
        "scheme": "https",
        "title": "\n    \nAsync UI: a Rust UI Library where Everything is a Future | Wisha Wanichwecharungruang\n\n  ",
        "uri_uuid": "d4619f4058d5d495153ad6c47c5203eb9d0f82cbd6cc7930e4b1f4c0968cb4d7",
        "url": "https://wishawa.github.io/posts/async-ui-intro/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T17:58:46.332423921+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:46.332423921+02:00",
        "modi_user": "api",
        "path": "/inside-rust/2022/09/29/announcing-the-rust-style-team.html",
        "scheme": "https",
        "title": "Announcing the Rust Style Team | Inside Rust Blog",
        "uri_uuid": "f7d63fb878d2a4482fb7e917ce4b15caae54e8c4e050876d3a1f05ecb29fbb34",
        "url": "https://blog.rust-lang.org/inside-rust/2022/09/29/announcing-the-rust-style-team.html"
    },
    {
        "auto_descr": "Demo project for Rust Berlin online meetup. Contribute to jbethune/bigsoftware development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:46.575184274+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:46.575184274+02:00",
        "modi_user": "api",
        "path": "/jbethune/bigsoftware",
        "scheme": "https",
        "title": "GitHub - jbethune/bigsoftware: Demo project for Rust Berlin online meetup",
        "uri_uuid": "44af142cae7d81b38891a8b6ff1e57b68cadf215670a76a04d9b9a35b043cba4",
        "url": "https://github.com/jbethune/bigsoftware"
    },
    {
        "auto_descr": "API documentation for the Rust `mailparse` crate.",
        "crea_time": "2024-08-29T17:58:47.565368503+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:47.565368503+02:00",
        "modi_user": "api",
        "path": "/mailparse/latest/mailparse/",
        "scheme": "https",
        "title": "mailparse - Rust",
        "uri_uuid": "340dd4793b55b0bc5718535d0cae9f09ceda0aac5e9be79a43633c0338ada035",
        "url": "https://docs.rs/mailparse/latest/mailparse/"
    },
    {
        "auto_descr": "Source of the Rust file `library/core/src/iter/traits/iterator.rs`.",
        "crea_time": "2024-08-29T17:58:47.716768642+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:47.716768642+02:00",
        "modi_user": "api",
        "path": "/src/core/iter/traits/iterator.rs.html",
        "scheme": "https",
        "title": "iterator.rs - source",
        "uri_uuid": "76047af593cfe96cda182d72c474d8f1e25d4b335d9df9ced5c578d4ab409ac8",
        "url": "https://doc.rust-lang.org/src/core/iter/traits/iterator.rs.html#2230-2234"
    },
    {
        "auto_descr": "Some command line utilities in Rust . Contribute to pflanze/chj-rustbin development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:48.143819902+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:48.143819902+02:00",
        "modi_user": "api",
        "path": "/pflanze/chj-rustbin/blob/e2d3c08de7dff69e3b0b68a9ac1ab8bd4c36543c/src/bin/lastitem.rs",
        "scheme": "https",
        "title": "chj-rustbin/src/bin/lastitem.rs at e2d3c08de7dff69e3b0b68a9ac1ab8bd4c36543c · pflanze/chj-rustbin · GitHub",
        "uri_uuid": "04f63ccef8b358cb7409b2f71b6eceada489eba15fd0dc6f141becb72e6b7541",
        "url": "https://github.com/pflanze/chj-rustbin/blob/e2d3c08de7dff69e3b0b68a9ac1ab8bd4c36543c/src/bin/lastitem.rs"
    },
    {
        "auto_descr": "An online AST explorer.",
        "crea_time": "2024-08-29T17:58:49.115398293+02:00",
        "crea_user": "api",
        "host": "astexplorer.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:49.115398293+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "AST explorer",
        "uri_uuid": "578697a4aeee5fea665f84abb1ddccf7e505327ce88f0c6dbfbf14fda18193cd",
        "url": "https://astexplorer.net/"
    },
    {
        "auto_descr": "A post-modern modal text editor. Contribute to helix-editor/helix development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:49.922226478+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:49.922226478+02:00",
        "modi_user": "api",
        "path": "/helix-editor/helix",
        "scheme": "https",
        "title": "GitHub - helix-editor/helix: A post-modern modal text editor.",
        "uri_uuid": "8963c4e76c2830c587e238e9cdc8c7c9da7ea86131ec0f709e2e28dcf9900828",
        "url": "https://github.com/helix-editor/helix"
    },
    {
        "auto_descr": "assortment of dotfiles. Contribute to oylenshpeegul/dotfiles development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:50.643992204+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:50.643992204+02:00",
        "modi_user": "api",
        "path": "/oylenshpeegul/dotfiles/blob/master/.emacs.d/config/programming/rust.el",
        "scheme": "https",
        "title": "dotfiles/.emacs.d/config/programming/rust.el at master · oylenshpeegul/dotfiles · GitHub",
        "uri_uuid": "cd45d3ee2545896892f01cb30af81b4150367b0173acc525dedffab2a197e69d",
        "url": "https://github.com/oylenshpeegul/dotfiles/blob/master/.emacs.d/config/programming/rust.el"
    },
    {
        "auto_descr": "SWC is an extensible Rust-based platform for the next generation of fast developer tools. It's used by tools like Next.js, Parcel, and Deno, as well as companies like Vercel, ByteDance, Tencent, Shopify, and more.",
        "crea_time": "2024-08-29T17:58:51.313522974+02:00",
        "crea_user": "api",
        "host": "swc.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:51.313522974+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust-based platform for the Web – SWC",
        "uri_uuid": "3035f1a8217886f3f62e516eef219254885a8608d1b31fb5beb440caec5835c2",
        "url": "https://swc.rs/"
    },
    {
        "auto_descr": "Lightning-fast and Powerful Code Editor",
        "crea_time": "2024-08-29T17:58:51.549875803+02:00",
        "crea_user": "api",
        "host": "lapce.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:51.549875803+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Lapce",
        "uri_uuid": "398cf2b87d2a2ed8aa0bd1950cc57dda2ffc5e2bb92279886e7732258daa02d1",
        "url": "https://lapce.dev/"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T17:58:51.993441980+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:51.993441980+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "d8799fbd501539e1b9d362a4a3690b99f006f40a6e3d03a8a026c8738ffdb3db",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=4b55a3d5daf4eb5d55e4e9cf6dcae365"
    },
    {
        "auto_descr": "API documentation for the Rust `soup` crate.",
        "crea_time": "2024-08-29T17:58:52.127264046+02:00",
        "crea_user": "api",
        "host": "pwoolcoc.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:52.127264046+02:00",
        "modi_user": "api",
        "path": "/soup/soup/index.html",
        "scheme": "https",
        "title": "soup - Rust",
        "uri_uuid": "aff89fa45a159efbe19cf121d7e9d5abf5b11385c72b1666ad7c2dfde9fd08c3",
        "url": "https://pwoolcoc.gitlab.io/soup/soup/index.html"
    },
    {
        "auto_descr": "Rust by Example (RBE) is a collection of runnable examples that illustrate various Rust concepts and standard libraries.",
        "crea_time": "2024-08-29T17:58:52.984043618+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:52.984043618+02:00",
        "modi_user": "api",
        "path": "/rust-by-example/compatibility/raw_identifiers.html",
        "scheme": "https",
        "title": "Raw identifiers - Rust By Example",
        "uri_uuid": "c80da63778f69b264b02863682160628299904a98b36a2a6eadc920a109b7590",
        "url": "https://doc.rust-lang.org/rust-by-example/compatibility/raw_identifiers.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:53.171841924+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:53.171841924+02:00",
        "modi_user": "api",
        "path": "/reference/tokens.html",
        "scheme": "https",
        "title": "Tokens - The Rust Reference",
        "uri_uuid": "5a88d47c9d127c28e7a4e4962ea8994c0aacc23e09d14a3c8a9ccd7dc7b2ed36",
        "url": "https://doc.rust-lang.org/reference/tokens.html#raw-string-literals"
    },
    {
        "auto_descr": "The identity function.",
        "crea_time": "2024-08-29T17:58:53.415446239+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:53.415446239+02:00",
        "modi_user": "api",
        "path": "/std/convert/fn.identity.html",
        "scheme": "https",
        "title": "identity in std::convert - Rust",
        "uri_uuid": "92b369787c8e53ba3007f14d3b910b0f98781e110976a495b026a9be4b9e320d",
        "url": "https://doc.rust-lang.org/std/convert/fn.identity.html"
    },
    {
        "auto_descr": " The identity function. ",
        "crea_time": "2024-08-29T17:58:53.545986732+02:00",
        "crea_user": "api",
        "host": "docs.w3cub.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:53.545986732+02:00",
        "modi_user": "api",
        "path": "/rust/std/convert/fn.identity",
        "scheme": "https",
        "title": "Std::convert::identity - Rust - W3cubDocs",
        "uri_uuid": "b46acdbeacf7b0140a1d33576e71122816aa3de196cb22cd3eed822f50836eb7",
        "url": "https://docs.w3cub.com/rust/std/convert/fn.identity"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:54.037566446+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:54.037566446+02:00",
        "modi_user": "api",
        "path": "/crates/derive_more",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c5899cf20ad50d99f62a88ecd571a0636065faf6d70095dba826fc19ec86b268",
        "url": "https://crates.io/crates/derive_more"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T17:58:54.245821908+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:54.245821908+02:00",
        "modi_user": "api",
        "path": "/reference/type-layout.html",
        "scheme": "https",
        "title": "Type layout - The Rust Reference",
        "uri_uuid": "97286b148fdff23451ea0dc6986cdfa02e197f35464241f32801b2a5bc1d2574",
        "url": "https://doc.rust-lang.org/reference/type-layout.html#the-transparent-representation"
    },
    {
        "auto_descr": "Terminates the current process with the specified exit code.",
        "crea_time": "2024-08-29T17:58:54.427598278+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:54.427598278+02:00",
        "modi_user": "api",
        "path": "/std/process/fn.exit.html",
        "scheme": "https",
        "title": "exit in std::process - Rust",
        "uri_uuid": "53e19e9f7c9b1b5ba63f128a6a1e9533aea0e0d201d3d6078e383b4e6281d10b",
        "url": "https://doc.rust-lang.org/std/process/fn.exit.html"
    },
    {
        "auto_descr": "\n\npub fn main() {\n    print!(\"{:?}\",zeros());\n}\n\n\nfn zeros()-&gt;std::cmp::Ordering{\n    let a = ();\n    let b = ();\n    let c = a.cmp(&amp;b);\n    c\n}",
        "crea_time": "2024-08-29T17:58:54.544623666+02:00",
        "crea_user": "api",
        "host": "godbolt.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:54.544623666+02:00",
        "modi_user": "api",
        "path": "/z/so1zd8fcT",
        "scheme": "https",
        "title": "Compiler Explorer",
        "uri_uuid": "ede8428260be50df2127ab3d4f1ecf71b8417fb310eb9627c57d0db627132dee",
        "url": "https://godbolt.org/z/so1zd8fcT"
    },
    {
        "auto_descr": "Available Sampling Filters.",
        "crea_time": "2024-08-29T17:58:55.183869663+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:55.183869663+02:00",
        "modi_user": "api",
        "path": "/image/latest/image/imageops/enum.FilterType.html",
        "scheme": "https",
        "title": "FilterType in image::imageops - Rust",
        "uri_uuid": "0ad938a0daeab5ba9f153c90f6c2dcdf018675bbae4f240d58c46db0a7fbbddb",
        "url": "https://docs.rs/image/latest/image/imageops/enum.FilterType.html"
    },
    {
        "auto_descr": "Book listing all Rust error codes",
        "crea_time": "2024-08-29T17:58:55.370302608+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:55.370302608+02:00",
        "modi_user": "api",
        "path": "/error-index.html",
        "scheme": "https",
        "title": "Rust error codes index - Error codes index",
        "uri_uuid": "363220787496968af268d02688d5e93393cd0b49b205ae4859966d0750eed595",
        "url": "https://doc.rust-lang.org/error-index.html#E0117"
    },
    {
        "auto_descr": "A context-aware error library with arbitrary attached user data.",
        "crea_time": "2024-08-29T17:58:55.481208813+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:55.481208813+02:00",
        "modi_user": "api",
        "path": "/error-stack/latest/error_stack/",
        "scheme": "https",
        "title": "error_stack - Rust",
        "uri_uuid": "ac98c63769ab6179efc79840ee5defaae10bd7e2321191e74a1e7c81ed73e6b5",
        "url": "https://docs.rs/error-stack/latest/error_stack/#"
    },
    {
        "auto_descr": "A context-aware error library for Rust that supports arbitrary attached user data",
        "crea_time": "2024-08-29T17:58:55.640402084+02:00",
        "crea_user": "api",
        "host": "hash.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:55.640402084+02:00",
        "modi_user": "api",
        "path": "/blog/announcing-error-stack",
        "scheme": "https",
        "title": "Announcing error-stack – HASH Developer Blog",
        "uri_uuid": "ea7b327753b9e4d9c6116202a016755a9c412949a79e96ab863a17db0a4111ac",
        "url": "https://hash.dev/blog/announcing-error-stack"
    },
    {
        "auto_descr": "derive(Error) for struct and enum error types. Contribute to dtolnay/thiserror development by creating an account on GitHub.",
        "crea_time": "2024-08-29T17:58:56.156987689+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:56.156987689+02:00",
        "modi_user": "api",
        "path": "/dtolnay/thiserror",
        "scheme": "https",
        "title": "GitHub - dtolnay/thiserror: derive(Error) for struct and enum error types",
        "uri_uuid": "d3318c3d595fab59d12e21a21f0af99325bac3867c4bd525f2f72e69cefaa6c1",
        "url": "https://github.com/dtolnay/thiserror"
    },
    {
        "auto_descr": "I&#39;ll keep the story short so please don&#39;t comment with &quot;why would you ever need something like this&quot;. I working with an encoder that encodes a type (e.g. T), vector of a type (e.g. Vec&lt;T&gt;), optional type (e.g. Option&lt;T&gt;)&hellip;",
        "crea_time": "2024-08-29T17:58:56.799752302+02:00",
        "crea_user": "api",
        "host": "users.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:56.799752302+02:00",
        "modi_user": "api",
        "path": "/t/workaround-for-e0117-rust-error/65709",
        "scheme": "https",
        "title": "Workaround for E0117 rust error - help - The Rust Programming Language Forum",
        "uri_uuid": "ba680b095c1e90f54bdb4d1202631634cfa7bc2b8fb00455675b7985f62cdfd7",
        "url": "https://users.rust-lang.org/t/workaround-for-e0117-rust-error/65709"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:58:58.281853675+02:00",
        "crea_user": "api",
        "host": "opensourcelive.withgoogle.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:58.281853675+02:00",
        "modi_user": "api",
        "path": "/events/rust-day-2022",
        "scheme": "https",
        "title": "Rust Day on Google Open Source Live",
        "uri_uuid": "a7f59e23e3e6c1eea3105492d8a4460accf7f0bbe257caebeedeef10d1dce04b",
        "url": "https://opensourcelive.withgoogle.com/events/rust-day-2022"
    },
    {
        "auto_descr": "GitHub Gist: instantly share code, notes, and snippets.",
        "crea_time": "2024-08-29T17:58:58.944572303+02:00",
        "crea_user": "api",
        "host": "gist.github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:58.944572303+02:00",
        "modi_user": "api",
        "path": "/barafael/eced6665c58b02fcc9b3b6d4cf26707d",
        "scheme": "https",
        "title": "push_unique.rs · GitHub",
        "uri_uuid": "7e83a4f50719179b7980848dfe19ef10b4c8eafa0c4074b268a655421559a687",
        "url": "https://gist.github.com/barafael/eced6665c58b02fcc9b3b6d4cf26707d"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T17:58:59.473259036+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:59.473259036+02:00",
        "modi_user": "api",
        "path": "/episode/068-tobias-hunger/",
        "scheme": "https",
        "title": "Slint with Tobias Hunger :: Rustacean Station",
        "uri_uuid": "cc090edf75bf4bb3a361c4b33a2b58477e30ec3d9386f320f9297120d0d0cf01",
        "url": "https://rustacean-station.org/episode/068-tobias-hunger/"
    },
    {
        "auto_descr": "Sccache is a ccache-like tool. It is used as a compiler wrapper and avoids compilation when possible. Sccache has the capability to utilize caching in remote storage environments, including various cloud storage options, or alternatively, in local storage. - mozilla/sccache",
        "crea_time": "2024-08-29T17:58:59.593565554+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:58:59.593565554+02:00",
        "modi_user": "api",
        "path": "/mozilla/sccache",
        "scheme": "https",
        "title": "GitHub - mozilla/sccache: Sccache is a ccache-like tool. It is used as a compiler wrapper and avoids compilation when possible. Sccache has the capability to utilize caching in remote storage environments, including various cloud storage options, or alternatively, in local storage.",
        "uri_uuid": "beebe64a1b09460c6ed2419180dee1815b6d6efc8e6c8309c144d4bb804bd97c",
        "url": "https://github.com/mozilla/sccache"
    },
    {
        "auto_descr": "cachepot is `sccache` with extra sec, which in turn is `ccache` with cloud storage - paritytech/cachepot",
        "crea_time": "2024-08-29T17:59:00.380537828+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:00.380537828+02:00",
        "modi_user": "api",
        "path": "/paritytech/cachepot",
        "scheme": "https",
        "title": "GitHub - paritytech/cachepot: cachepot is `sccache` with extra sec, which in turn is `ccache` with cloud storage",
        "uri_uuid": "4517baa1645af694bcb1f194e812dfa99d87409b529f0037ddd0b081f4eaf0d4",
        "url": "https://github.com/paritytech/cachepot"
    },
    {
        "auto_descr": "In this article, you’ll learn how to implement web scraping with the Rust programming language. You’ll use two Rust libraries, reqwest and scraper, to scrape the top one hundred movies list from IMDb.",
        "crea_time": "2024-08-29T17:59:01.235174952+02:00",
        "crea_user": "api",
        "host": "www.scrapingbee.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:01.235174952+02:00",
        "modi_user": "api",
        "path": "/blog/web-scraping-rust/",
        "scheme": "https",
        "title": "Web Scraping in Rust with Reqwest and Scraper | ScrapingBee ",
        "uri_uuid": "7a3aa78e1a1531040a7a5acf64ecce8ea5db043978b88ff8b3360a505fd95e6d",
        "url": "https://www.scrapingbee.com/blog/web-scraping-rust/"
    },
    {
        "auto_descr": "The title of this video should change with the times. But nothing lasts forever: here's the story of how I made it work, why it used to be easier to make tha...",
        "crea_time": "2024-08-29T17:59:01.864303571+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:01.864303571+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "This Video Has 72,465,533 Views - YouTube",
        "uri_uuid": "468b6a33a0a1310f7ee46c7374ff78354632b07578971f27b19aaa71ea354faa",
        "url": "https://www.youtube.com/watch?v=BxV14h0kFs0&t=129s"
    },
    {
        "auto_descr": "rust-url is an implementation of the URL Standard for the Rust programming language.",
        "crea_time": "2024-08-29T17:59:02.545459707+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:02.545459707+02:00",
        "modi_user": "api",
        "path": "/url/2.2.2/url/",
        "scheme": "https",
        "title": "url - Rust",
        "uri_uuid": "3b56eed71a8ff740aa92b269749d3e6ac6edf002b1e450d9068e0e3dbe5dc5c2",
        "url": "https://docs.rs/url/2.2.2/url/"
    },
    {
        "auto_descr": "Get a handle on bare metal Rust. Knurling has 19 repositories available. Follow their code on GitHub.",
        "crea_time": "2024-08-29T17:59:03.387212675+02:00",
        "crea_user": "api",
        "host": "knurling.ferrous-systems.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:03.387212675+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Knurling · GitHub",
        "uri_uuid": "fc21c03efff6687ca1a317d5112e784e5dbe6a27a3ede8fd02a765d643a904cd",
        "url": "https://knurling.ferrous-systems.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:59:05.052260977+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:05.052260977+02:00",
        "modi_user": "api",
        "path": "/wiki/Lindy_effect",
        "scheme": "https",
        "title": "Lindy effect - Wikipedia",
        "uri_uuid": "5bd828401e3ac0b75fd399837f7d020c26ccee2430dad03bc7338594b5f88266",
        "url": "https://en.wikipedia.org/wiki/Lindy_effect"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:59:05.563446547+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:05.563446547+02:00",
        "modi_user": "api",
        "path": "/wiki/SPNEGO",
        "scheme": "https",
        "title": "SPNEGO - Wikipedia",
        "uri_uuid": "16b70917ffeab29926c818f3b71096fc57c80adc2ac0a5c33e59e237bf169fdd",
        "url": "https://en.wikipedia.org/wiki/SPNEGO"
    },
    {
        "auto_descr": "Keycloak is an open source identity and access management solution",
        "crea_time": "2024-08-29T17:59:05.781392023+02:00",
        "crea_user": "api",
        "host": "www.keycloak.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:05.781392023+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Keycloak",
        "uri_uuid": "1169d040d08efe9a6a26ce065e623c8067a535112e60bddd08fd4fbeb6126dc8",
        "url": "https://www.keycloak.org/"
    },
    {
        "auto_descr": "API documentation for the Rust `red_spnego` crate.",
        "crea_time": "2024-08-29T17:59:06.025064766+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:06.025064766+02:00",
        "modi_user": "api",
        "path": "/red_spnego",
        "scheme": "https",
        "title": "red_spnego - Rust",
        "uri_uuid": "3c92da35353fca6c3b3fd6aadda7d0c11de20681818a44814ec1366036982be6",
        "url": "https://docs.rs/red_spnego"
    },
    {
        "auto_descr": "A curated list of awesome Android packages and resources. - JStumpp/awesome-android",
        "crea_time": "2024-08-29T17:59:06.174450700+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:06.174450700+02:00",
        "modi_user": "api",
        "path": "/JStumpp/awesome-android",
        "scheme": "https",
        "title": "GitHub - JStumpp/awesome-android: A curated list of awesome Android packages and resources.",
        "uri_uuid": "10c91a13ae026a3452376eef7641582b13eb80bc89a2be29ce84756de5387154",
        "url": "https://github.com/JStumpp/awesome-android"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:59:07.037371340+02:00",
        "crea_user": "api",
        "host": "source.android.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:07.037371340+02:00",
        "modi_user": "api",
        "path": "/setup/build/rust/building-rust-modules/overview%20https://github.com/abertschi/postcard_creator_wrapper/blob/master/postcard_creator/postcard_creator_swissid.py",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "1bb7307d254878062d110127a39608a4fca25431d1cd0097a348a27a473bb7a4",
        "url": "https://source.android.com/setup/build/rust/building-rust-modules/overview%20https://github.com/abertschi/postcard_creator_wrapper/blob/master/postcard_creator/postcard_creator_swissid.py"
    },
    {
        "auto_descr": "Collection of Dockerfiles, scripts and related resources - scripts/snippets at master · paritytech/scripts",
        "crea_time": "2024-08-29T17:59:07.537434530+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:07.537434530+02:00",
        "modi_user": "api",
        "path": "/paritytech/scripts/tree/master/snippets",
        "scheme": "https",
        "title": "scripts/snippets at master · paritytech/scripts · GitHub",
        "uri_uuid": "b529490bd38e12fd2fe42d7b1f9a9344baf10d6eed7a4ca5561388665d9f47c2",
        "url": "https://github.com/paritytech/scripts/tree/master/snippets"
    },
    {
        "auto_descr": "Collection of Dockerfiles, scripts and related resources - paritytech/scripts",
        "crea_time": "2024-08-29T17:59:08.078268102+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:08.078268102+02:00",
        "modi_user": "api",
        "path": "/paritytech/scripts",
        "scheme": "https",
        "title": "GitHub - paritytech/scripts: Collection of Dockerfiles, scripts and related resources",
        "uri_uuid": "a6a522ce19e5560fc09846b9a26b0be0514fc1d12f020defc5a48f56e74b144f",
        "url": "https://github.com/paritytech/scripts#preparation"
    },
    {
        "auto_descr": "Download Insomnia the best API Client for REST, GraphQL, GRPC and OpenAPI design tool for developers",
        "crea_time": "2024-08-29T17:59:09.068335910+02:00",
        "crea_user": "api",
        "host": "insomnia.rest",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:09.068335910+02:00",
        "modi_user": "api",
        "path": "/download",
        "scheme": "https",
        "title": "Download - Insomnia",
        "uri_uuid": "1d474eaa35983775e5cfa939377577a12a5319b7da918a2e7fade28a5e46c0c3",
        "url": "https://insomnia.rest/download"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:59:09.396736231+02:00",
        "crea_user": "api",
        "host": "open-vsx.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:09.396736231+02:00",
        "modi_user": "api",
        "path": "/extension/humao/rest-client",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e4b23f1ba4cc26b219c15e9344b5c04e3558cc2b475fad9eff294c128a48aac2",
        "url": "https://open-vsx.org/extension/humao/rest-client"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T17:59:09.961449509+02:00",
        "crea_user": "api",
        "host": "mitmproxy.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T17:59:09.961449509+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "mitmproxy - an interactive HTTPS proxy",
        "uri_uuid": "afa1a1ea5eb9e4214ac037a009d0997848f4df56c24a88a4bc04977746b035e4",
        "url": "https://mitmproxy.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:19.817883056+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:19.817883056+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/blob/master/src/test/ui/weird-exprs.rs",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c0174fc4f25c48540de383b9174ee8106d3c333e77eead49fce0f2320d83cad0",
        "url": "https://github.com/rust-lang/rust/blob/master/src/test/ui/weird-exprs.rs"
    },
    {
        "auto_descr": "Air-gapped crypto wallet. Contribute to TriplEight/parity-signer development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:20.209126374+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:20.209126374+02:00",
        "modi_user": "api",
        "path": "/TriplEight/parity-signer/blob/master/.github/workflows/docs.yml",
        "scheme": "https",
        "title": "parity-signer/.github/workflows/docs.yml at master · TriplEight/parity-signer · GitHub",
        "uri_uuid": "276bde3f03a5f1281a6ba77af7f555cc487bc4a494f20faef11a322d2279a922",
        "url": "https://github.com/TriplEight/parity-signer/blob/master/.github/workflows/docs.yml"
    },
    {
        "auto_descr": "A support library for macro authors when defining new macros.",
        "crea_time": "2024-08-29T18:00:21.067655143+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:21.067655143+02:00",
        "modi_user": "api",
        "path": "/proc_macro/index.html",
        "scheme": "https",
        "title": "proc_macro - Rust",
        "uri_uuid": "429907141580e5228a3f1109a5acb7ac4d4f1ad36e8bf4bf9410cb2428ee2f62",
        "url": "https://doc.rust-lang.org/proc_macro/index.html"
    },
    {
        "auto_descr": "Learn to write Rust procedural macros  [Rust Latam conference, Montevideo Uruguay, March 2019] - dtolnay/proc-macro-workshop",
        "crea_time": "2024-08-29T18:00:21.245391916+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:21.245391916+02:00",
        "modi_user": "api",
        "path": "/dtolnay/proc-macro-workshop",
        "scheme": "https",
        "title": "GitHub - dtolnay/proc-macro-workshop: Learn to write Rust procedural macros  [Rust Latam conference, Montevideo Uruguay, March 2019]",
        "uri_uuid": "1cc0ab7717234a76a79cb89a7b5000da56e6f2c6c0db50bb05054f37e1aebe02",
        "url": "https://github.com/dtolnay/proc-macro-workshop"
    },
    {
        "auto_descr": "Create book from markdown files. Like Gitbook but implemented in Rust",
        "crea_time": "2024-08-29T18:00:22.655517400+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:22.655517400+02:00",
        "modi_user": "api",
        "path": "/mdBook/format/markdown.html",
        "scheme": "https",
        "title": "Markdown - mdBook Documentation",
        "uri_uuid": "fe4e7c0159368868652771e01006982278174a479fd1b4eee8e12919e25f9e11",
        "url": "https://rust-lang.github.io/mdBook/format/markdown.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:22.915307858+02:00",
        "crea_user": "api",
        "host": "commonmark.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:22.915307858+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "CommonMark",
        "uri_uuid": "26a72a74aadee323be242307dcf118fb6547cec437de963de01859050bcdd058",
        "url": "https://commonmark.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:23.151581438+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:23.151581438+02:00",
        "modi_user": "api",
        "path": "/wiki/CAR_and_CDR",
        "scheme": "https",
        "title": "CAR and CDR - Wikipedia",
        "uri_uuid": "d87121c873a663aaf9a15ca1a98b9a7262868e20c7d90932cfe7e4108fb884b6",
        "url": "https://en.wikipedia.org/wiki/CAR_and_CDR"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:23.429112169+02:00",
        "crea_user": "api",
        "host": "cdecl.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:23.429112169+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "cdecl: C gibberish ↔ English",
        "uri_uuid": "643082849245d5be606f8973fda26f1c2bcd6586a0d3b2c30173a68b623fbaf8",
        "url": "https://cdecl.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:23.690425947+02:00",
        "crea_user": "api",
        "host": "jrvidal.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:23.690425947+02:00",
        "modi_user": "api",
        "path": "/explaine.rs/",
        "scheme": "https",
        "title": "explaine.rs",
        "uri_uuid": "67dea3376163baeea67bd112622200d6655d3bc00035c5570b74973276d8ca73",
        "url": "https://jrvidal.github.io/explaine.rs/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:23.927903009+02:00",
        "crea_user": "api",
        "host": "gcc.gnu.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:23.927903009+02:00",
        "modi_user": "api",
        "path": "/pipermail/gcc/2022-July/239057.html",
        "scheme": "https",
        "title": " Rust front-end\n   ",
        "uri_uuid": "21028b90ec22519e20e3513c63b538917f03994064463bf318167401e96b30b6",
        "url": "https://gcc.gnu.org/pipermail/gcc/2022-July/239057.html"
    },
    {
        "auto_descr": "UPDATE 2: I have made the title longer because people seem to be insisting on misunderstanding me, giving examples where the only reasonable thing to do is to escalate an Err into a panic. Indeed, such situations exist. I am not advocating for panic-free code. I am advocating that expect should be used for those functions, and if a function is particularly prone to being called like that (e.g. Mutex::lock or regex compilation), there should be a panicking version.",
        "crea_time": "2024-08-29T18:00:24.618490587+02:00",
        "crea_user": "api",
        "host": "www.thecodedmessage.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:24.618490587+02:00",
        "modi_user": "api",
        "path": "/posts/2022-07-14-programming-unwrap/",
        "scheme": "https",
        "title": "Why Rust should only have provided `expect` for turning errors into panics, and not also provided `unwrap` :: The Coded Message",
        "uri_uuid": "f4de462840edac5ea6bb7d18193d50060e516f79ff9a3c25244b70c16a1ce5a8",
        "url": "https://www.thecodedmessage.com/posts/2022-07-14-programming-unwrap/"
    },
    {
        "auto_descr": "Teile deine Videos mit Freunden, Verwandten oder der ganzen Welt",
        "crea_time": "2024-08-29T18:00:25.155459003+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:25.155459003+02:00",
        "modi_user": "api",
        "path": "/playlist",
        "scheme": "https",
        "title": "Build a 65c02-based computer from scratch - YouTube",
        "uri_uuid": "d5219e0c35399b4d90f1a90112f601d988a214f6293ceb754c8c8fb9f88272ed",
        "url": "https://www.youtube.com/playlist?list=PLowKtXNTBypFbtuVMUVXNR0z1mu7dp7eH"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:26.253221559+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:26.253221559+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "GCC Rust Approved by GCC Steering Committee | Hacker News",
        "uri_uuid": "94425af65197dd24092ad4e9928d30eaf117014f975b5369061dd77a4685ddb2",
        "url": "https://news.ycombinator.com/item?id=32057116"
    },
    {
        "auto_descr": "Parse a USB HID Report Descriptor. Contribute to btielen/hid_tools development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:30.130051820+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:30.130051820+02:00",
        "modi_user": "api",
        "path": "/btielen/hid_tools",
        "scheme": "https",
        "title": "GitHub - btielen/hid_tools: Parse a USB HID Report Descriptor",
        "uri_uuid": "6ccf3423cf7c582690879d34652903b4d5c0af9f761437cb81b10d9c4dc2f58d",
        "url": "https://github.com/btielen/hid_tools"
    },
    {
        "auto_descr": "A rust crate to create a pure rust keyboard firmware. - TeXitoi/keyberon",
        "crea_time": "2024-08-29T18:00:30.929879220+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:30.929879220+02:00",
        "modi_user": "api",
        "path": "/TeXitoi/keyberon",
        "scheme": "https",
        "title": "GitHub - TeXitoi/keyberon: A rust crate to create a pure rust keyboard firmware.",
        "uri_uuid": "824e1d2b06ff45f160431538207793e444602fbfe2a18c3c7d5313cdb099e4b9",
        "url": "https://github.com/TeXitoi/keyberon"
    },
    {
        "auto_descr": "The USB 2.0 spec: https://eater.net/downloads/usb_20.pdfSupport these videos on Patreon: https://www.patreon.com/beneater or https://eater.net/support for ot...",
        "crea_time": "2024-08-29T18:00:32.231166051+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:32.231166051+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "How does a USB keyboard work? - YouTube",
        "uri_uuid": "a7f6274ae8a92b6c5b8304d864de16c012877b8a1903e41b36d9bdd6944cba96",
        "url": "https://www.youtube.com/watch?v=wdgULBpRoXk"
    },
    {
        "auto_descr": "A very small CLI for converting TOML to JSON. Contribute to rvarago/toml2json development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:33.249932277+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:33.249932277+02:00",
        "modi_user": "api",
        "path": "/rvarago/toml2json/blob/f3f19779c6e8c927d31c6bf20bc21056f95313c5/src/main.rs",
        "scheme": "https",
        "title": "toml2json/src/main.rs at f3f19779c6e8c927d31c6bf20bc21056f95313c5 · rvarago/toml2json · GitHub",
        "uri_uuid": "1af83b3341ae8229286a52918bdd21b521b92920a63aa507742f0a234614846d",
        "url": "https://github.com/rvarago/toml2json/blob/f3f19779c6e8c927d31c6bf20bc21056f95313c5/src/main.rs#L48"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T18:00:33.909454265+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:33.909454265+02:00",
        "modi_user": "api",
        "path": "/2022/01/13/Rust-1.58.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.58.0 | Rust Blog",
        "uri_uuid": "0beca822a873526b880f2b61555cbfb673c40210e3f910b6018d1003318afa15",
        "url": "https://blog.rust-lang.org/2022/01/13/Rust-1.58.0.html#captured-identifiers-in-format-strings"
    },
    {
        "auto_descr": "A new type of shell. Contribute to nushell/nushell development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:34.134568918+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:34.134568918+02:00",
        "modi_user": "api",
        "path": "/nushell/nushell",
        "scheme": "https",
        "title": "GitHub - nushell/nushell: A new type of shell",
        "uri_uuid": "75604f5cb39a91bc03c0fc62180fbb117c7c46e2df9c95a3dd4c5315201e6a79",
        "url": "https://github.com/nushell/nushell"
    },
    {
        "auto_descr": "Convert a csv file to json using rust. Contribute to dariusgm/CsvToJson development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:34.921939072+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:34.921939072+02:00",
        "modi_user": "api",
        "path": "/dariusgm/CsvToJson",
        "scheme": "https",
        "title": "GitHub - dariusgm/CsvToJson: Convert a csv file to json using rust",
        "uri_uuid": "58abbde11daeb596f5ee75f8a42a0788ad4ea6704efb7b3c5b914f3557350815",
        "url": "https://github.com/dariusgm/CsvToJson"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:35.813585823+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:35.813585823+02:00",
        "modi_user": "api",
        "path": "/crates/pest",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "20b47c0bc6cae5e67770e8291d586c14f93993e3ce4f83bced8510b9281a4c42",
        "url": "https://crates.io/crates/pest"
    },
    {
        "auto_descr": "The Rust OpenTelemetry implementation. Contribute to open-telemetry/opentelemetry-rust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:36.099796723+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:36.099796723+02:00",
        "modi_user": "api",
        "path": "/open-telemetry/opentelemetry-rust",
        "scheme": "https",
        "title": "GitHub - open-telemetry/opentelemetry-rust: The Rust OpenTelemetry implementation",
        "uri_uuid": "3de2b2bdda381a4aac7ee8773b35783497b94ce509d56ea9cd7c4b779973cd13",
        "url": "https://github.com/open-telemetry/opentelemetry-rust"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:36.868075939+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:36.868075939+02:00",
        "modi_user": "api",
        "path": "/crates/tracing-actix-web",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "2b068b401e8ad9e1b75397734c2eff8d0bc908100227ba1fa6caecd66c38bbf4",
        "url": "https://crates.io/crates/tracing-actix-web"
    },
    {
        "auto_descr": "Test drive the power of observability software with an interactive demo - no signup or setup required. Explore now!",
        "crea_time": "2024-08-29T18:00:37.116639520+02:00",
        "crea_user": "api",
        "host": "www.honeycomb.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:37.116639520+02:00",
        "modi_user": "api",
        "path": "/play",
        "scheme": "https",
        "title": "Observability Software Demo & Sandbox | Honeycomb",
        "uri_uuid": "16342737bc5c19836d47c2bb9cc2c93aaa4653f13032c1d235e463635f0a6f6a",
        "url": "https://www.honeycomb.io/play"
    },
    {
        "auto_descr": "Rust has been ranked as one of the most loved languages by developers.&nbsp;In this series, you will learn the fundamentals of Rust development.&nbsp;We'll&nbsp;start&nbsp;by&nbsp;downloading the tools you need to program with Rust,&nbsp;walk through common concepts, and share&nbsp;what's&nbsp;unique about Rust.&nbsp;By the end of this series, you will have enough&nbsp;knowledge to go forth and write your own Rust programs.&nbsp;It's&nbsp;highly recommended that you watch this series if you have prior experience with programming in another language.https://aka.ms/GetStartedWithRust ",
        "crea_time": "2024-08-29T18:00:38.838130691+02:00",
        "crea_user": "api",
        "host": "docs.microsoft.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:38.838130691+02:00",
        "modi_user": "api",
        "path": "/en-us/shows/beginners-series-to-rust/",
        "scheme": "https",
        "title": "Beginner's Series to Rust | Microsoft Learn",
        "uri_uuid": "04bb6c797c5c7a2fb8ade0c88cead31d671440810f0e9a76c3c15053f0036e7f",
        "url": "https://docs.microsoft.com/en-us/shows/beginners-series-to-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:39.617057495+02:00",
        "crea_user": "api",
        "host": "twitter.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:39.617057495+02:00",
        "modi_user": "api",
        "path": "/m_ou_se/status/1538209506085244929",
        "scheme": "https",
        "title": "x.com",
        "uri_uuid": "a519c13654ba141343c82c54df20511dec6db5a5943e9cbd0c2b2562141e1058",
        "url": "https://twitter.com/m_ou_se/status/1538209506085244929"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:40.058165495+02:00",
        "crea_user": "api",
        "host": "twitter.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:40.058165495+02:00",
        "modi_user": "api",
        "path": "/m_ou_se/status/1538234055329718273",
        "scheme": "https",
        "title": "x.com",
        "uri_uuid": "1f223da294bd15c18130b471e2b8b2e84edb4a255341a03a9c56b14d526ead59",
        "url": "https://twitter.com/m_ou_se/status/1538234055329718273"
    },
    {
        "auto_descr": "Tools for concurrent programming.",
        "crea_time": "2024-08-29T18:00:41.456382931+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:41.456382931+02:00",
        "modi_user": "api",
        "path": "/crossbeam/latest/crossbeam/",
        "scheme": "https",
        "title": "crossbeam - Rust",
        "uri_uuid": "ab77975adab3a6da338c032f5168ab15ace9e8b5db43d76119ffbf7409e9c8cb",
        "url": "https://docs.rs/crossbeam/latest/crossbeam/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:41.651814180+02:00",
        "crea_user": "api",
        "host": "dev.to",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:41.651814180+02:00",
        "modi_user": "api",
        "path": "/zhanghandong/learning-rust-you-need-a-cognitive-frame-41oa",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d45c86a8e37bb516d4a264fe596ae02d02d086cdd69d3faf7aa00674c32958ff",
        "url": "https://dev.to/zhanghandong/learning-rust-you-need-a-cognitive-frame-41oa"
    },
    {
        "auto_descr": "A clone-on-write smart pointer.",
        "crea_time": "2024-08-29T18:00:42.645796855+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:42.645796855+02:00",
        "modi_user": "api",
        "path": "/std/borrow/enum.Cow.html",
        "scheme": "https",
        "title": "Cow in std::borrow - Rust",
        "uri_uuid": "3b267855526e50be1f821842bcabf5b5c0ac244ff66a3c8257225e3bf3de7605",
        "url": "https://doc.rust-lang.org/std/borrow/enum.Cow.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:43.261245308+02:00",
        "crea_user": "api",
        "host": "www.microsoft.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:43.261245308+02:00",
        "modi_user": "api",
        "path": "/en-us/research/project/project-verona/",
        "scheme": "https",
        "title": "Project Verona - Microsoft Research",
        "uri_uuid": "0f160670b7db0c7c2d2901e2f36c0760df5f2df4f672d0e8c595aa94730fe381",
        "url": "https://www.microsoft.com/en-us/research/project/project-verona/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T18:00:44.867181757+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:44.867181757+02:00",
        "modi_user": "api",
        "path": "/episode/053-julius-lungys/",
        "scheme": "https",
        "title": "Yew with Julius Lungys :: Rustacean Station",
        "uri_uuid": "2fa20bb539062c788f1f439ecc176ace4bb83e3fd2c3388a2bb7a892a7bd2c12",
        "url": "https://rustacean-station.org/episode/053-julius-lungys/"
    },
    {
        "auto_descr": "Build smaller, faster, and more secure desktop applications with a web frontend. - tauri-apps/tauri",
        "crea_time": "2024-08-29T18:00:45.196724771+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:45.196724771+02:00",
        "modi_user": "api",
        "path": "/tauri-apps/tauri",
        "scheme": "https",
        "title": "GitHub - tauri-apps/tauri: Build smaller, faster, and more secure desktop applications with a web frontend.",
        "uri_uuid": "91145f96f5b6ddf80fa50a1bfe701b4451d3d9c732bf94b549bb00c8f15c1e4f",
        "url": "https://github.com/tauri-apps/tauri"
    },
    {
        "auto_descr": "Rust drills, all based on ‘The Book’. Check the Rust Official page to read the ‘The Book’",
        "crea_time": "2024-08-29T18:00:46.287590214+02:00",
        "crea_user": "api",
        "host": "iodapson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:46.287590214+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "RUST DRILLS | The Book Debrief",
        "uri_uuid": "d3b504104888869096bd5efa1a61a54718c31c4158a5ebb4737c9c0dbeeca806",
        "url": "https://iodapson.github.io/"
    },
    {
        "auto_descr": "A borrowed iterator over records as strings.",
        "crea_time": "2024-08-29T18:00:46.518015710+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:46.518015710+02:00",
        "modi_user": "api",
        "path": "/csv/latest/csv/struct.StringRecordsIter.html",
        "scheme": "https",
        "title": "StringRecordsIter in csv - Rust",
        "uri_uuid": "029962cdf956530159be021e62d6a9e9dec75b79a49671fe7e52de01b40a2e77",
        "url": "https://docs.rs/csv/latest/csv/struct.StringRecordsIter.html"
    },
    {
        "auto_descr": "Berlin based technology consultancy specialising in the Rust programming language. We offer development, implementation, training and long-term support.",
        "crea_time": "2024-08-29T18:00:46.789219828+02:00",
        "crea_user": "api",
        "host": "ferrous-systems.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:46.789219828+02:00",
        "modi_user": "api",
        "path": "/blog/ferrocene-language-specification/",
        "scheme": "https",
        "title": "\n        Introducing the Ferrocene Language Specification  - Ferrous Systems\n    ",
        "uri_uuid": "c70896f60eb5ed6138313d109cf0398b1d428bd4fb0c42542fc9b98ed2b609b8",
        "url": "https://ferrous-systems.com/blog/ferrocene-language-specification/"
    },
    {
        "auto_descr": "Contribute to nohupped/buggy development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:47.276846838+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:47.276846838+02:00",
        "modi_user": "api",
        "path": "/nohupped/buggy",
        "scheme": "https",
        "title": "GitHub - nohupped/buggy",
        "uri_uuid": "7b2a48b2d645295b2b75faebd744dc82bd096e4215de2f733938c42c8af10199",
        "url": "https://github.com/nohupped/buggy"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T18:00:48.126729281+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:48.126729281+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "fb51c3e6aab29f9658db457fd96193a7aed69ced5bf517522d10af61cfe5fb0f",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=769dbc6d3e70affdd7e02901e9a89445"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:00:48.376019561+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:48.376019561+02:00",
        "modi_user": "api",
        "path": "/beta/unstable-book/language-features/try-blocks.html",
        "scheme": "https",
        "title": "try_blocks - The Rust Unstable Book",
        "uri_uuid": "a603195ac3020b4b047976f21ffa303f3679725d6b6fa2c77b9793ae7b583b60",
        "url": "https://doc.rust-lang.org/beta/unstable-book/language-features/try-blocks.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:48.622242316+02:00",
        "crea_user": "api",
        "host": "pastebin.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:48.622242316+02:00",
        "modi_user": "api",
        "path": "/6s6hE6Mq",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c6554904a85327ddf779445914b90b4d11d3e7d89b4a17e7f3365971bb0440e1",
        "url": "https://pastebin.com/6s6hE6Mq"
    },
    {
        "auto_descr": "Removes a file from the filesystem.",
        "crea_time": "2024-08-29T18:00:48.982213264+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:48.982213264+02:00",
        "modi_user": "api",
        "path": "/std/fs/fn.remove_file.html",
        "scheme": "https",
        "title": "remove_file in std::fs - Rust",
        "uri_uuid": "a88050ee7af0a3b8d25062da05da151fec76248715da90916b3c9b826f2d3a7e",
        "url": "https://doc.rust-lang.org/std/fs/fn.remove_file.html"
    },
    {
        "auto_descr": "An object providing access to an open file on the filesystem.",
        "crea_time": "2024-08-29T18:00:49.107267836+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:49.107267836+02:00",
        "modi_user": "api",
        "path": "/std/fs/struct.File.html",
        "scheme": "https",
        "title": "File in std::fs - Rust",
        "uri_uuid": "c3ac5f41cf20ed77192e287181a82e373e2b5d11413101bf8836f1f3e9099a9f",
        "url": "https://doc.rust-lang.org/std/fs/struct.File.html#method.sync_all"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:49.383693153+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:49.383693153+02:00",
        "modi_user": "api",
        "path": "/1015/",
        "scheme": "https",
        "title": "xkcd: Kerning",
        "uri_uuid": "f54fe5f18443386d5f3e672c93ed663339a149e22dda1998111f06565daec1e2",
        "url": "https://xkcd.com/1015/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:50.522926499+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:50.522926499+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "Rust Is Hard, Or: The Misery of Mainstream Programming | Hacker News",
        "uri_uuid": "b7b32f08445b2ffac9a6e511ad65c1b275e0ccae20a1b7775c89d7a30ada35c3",
        "url": "https://news.ycombinator.com/item?id=31601040"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:53.449313231+02:00",
        "crea_user": "api",
        "host": "hirrolot.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:53.449313231+02:00",
        "modi_user": "api",
        "path": "/posts/rust-is-hard-or-the-misery-of-mainstream-programming.html",
        "scheme": "https",
        "title": "Rust Is Hard, Or: The Misery of Mainstream Programming",
        "uri_uuid": "6671597e6fad12f8bd9b634186f13345ebc4bfd287649e513c72afa1606f91bd",
        "url": "https://hirrolot.github.io/posts/rust-is-hard-or-the-misery-of-mainstream-programming.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:53.768559859+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:53.768559859+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "Async Rust doesn't have to be hard | Hacker News",
        "uri_uuid": "032d5a8a3e2ab5c6dbb4d7e9a1834834c97c9e0db9bbdc953c1da46bb271fff7",
        "url": "https://news.ycombinator.com/item?id=31611456"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:55.726554764+02:00",
        "crea_user": "api",
        "host": "itsallaboutthebit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:55.726554764+02:00",
        "modi_user": "api",
        "path": "/async-simple/",
        "scheme": "https",
        "title": "(async) Rust doesn't have to be hard | It's all about the bit",
        "uri_uuid": "dba6db80021e8dd4a24c6eb7710393546ceeffda5a231f0b2604ff1321b61169",
        "url": "https://itsallaboutthebit.com/async-simple/"
    },
    {
        "auto_descr": "Encode videos to be < 8MiB. Requires ffmpeg. Contribute to Seebass22/video4discord development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:00:55.973813470+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:55.973813470+02:00",
        "modi_user": "api",
        "path": "/Seebass22/video4discord",
        "scheme": "https",
        "title": "GitHub - Seebass22/video4discord: Encode videos to be < 8MiB. Requires ffmpeg.",
        "uri_uuid": "ab148bda23bcd4a350baa246ea78de354df3160520fad171934220696b8c22c7",
        "url": "https://github.com/Seebass22/video4discord"
    },
    {
        "auto_descr": "Automatically create GUI applications from clap3 apps - MichalGniadek/klask",
        "crea_time": "2024-08-29T18:00:56.751040743+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:56.751040743+02:00",
        "modi_user": "api",
        "path": "/MichalGniadek/klask",
        "scheme": "https",
        "title": "GitHub - MichalGniadek/klask: Automatically create GUI applications from clap3 apps",
        "uri_uuid": "03b127dd7817b23eedb3aeaca4f71d99e4827e34b1c184cb157f8979f157513a",
        "url": "https://github.com/MichalGniadek/klask"
    },
    {
        "auto_descr": "Automatically create GUI for clap apps | Rust/Cargo package",
        "crea_time": "2024-08-29T18:00:57.568385723+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:57.568385723+02:00",
        "modi_user": "api",
        "path": "/crates/klask",
        "scheme": "https",
        "title": "Klask — Rust GUI library // Lib.rs",
        "uri_uuid": "ad5daebdf9e8985061c358c83ff29c98f2cbbc92a61f2392cff17cb20d1692d8",
        "url": "https://lib.rs/crates/klask"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:57.959843945+02:00",
        "crea_user": "api",
        "host": "slint-ui.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:57.959843945+02:00",
        "modi_user": "api",
        "path": "/blog/showing-guis-from-shell-scripts.html",
        "scheme": "https",
        "title": "Showing GUIs from Shell Scripts — Slint Blog",
        "uri_uuid": "cf5e9cdadcb5704605d156af8184fea1874b7795aabc7dd9734b046c480f6ae3",
        "url": "https://slint-ui.com/blog/showing-guis-from-shell-scripts.html"
    },
    {
        "auto_descr": "Preface (by Jimmy Hartzell) I am a huge fan of Jon Gjengset&rsquo;s Rust for Rustaceans, an excellent book to bridge the gap between beginner Rust programming skills and becoming a fully-functional member of the Rust community. He&rsquo;s famous for his YouTube channel as well; I&rsquo;ve heard good things about it (watching video instruction isn&rsquo;t really my thing personally). I have also greatly enjoyed his Twitter feed, and especially have enjoyed the thread surrounding this tweet:",
        "crea_time": "2024-08-29T18:00:58.989235699+02:00",
        "crea_user": "api",
        "host": "www.thecodedmessage.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:58.989235699+02:00",
        "modi_user": "api",
        "path": "/posts/trivia-rust-types/",
        "scheme": "https",
        "title": "Trivia About Rust Types: An (Authorized) Transcription of Jon Gjengset's Twitter Thread :: The Coded Message",
        "uri_uuid": "41376cae44e0e6082f8c676be2855ff3e18fc910d51a4cb1a118be24dbceb1c9",
        "url": "https://www.thecodedmessage.com/posts/trivia-rust-types/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:00:59.489427581+02:00",
        "crea_user": "api",
        "host": "stackoverflow.blog",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:00:59.489427581+02:00",
        "modi_user": "api",
        "path": "/2022/05/23/the-science-of-interviewing-developers/",
        "scheme": "https",
        "title": "The science of interviewing developers - Stack Overflow",
        "uri_uuid": "4451ed84599102ec95d598ce60fbeb2bdca577f24d4621cb0311db8bc20ac0dc",
        "url": "https://stackoverflow.blog/2022/05/23/the-science-of-interviewing-developers/"
    },
    {
        "auto_descr": "crawl and scrape web pages in rust. Contribute to mattsse/voyager development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:00.276072268+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:00.276072268+02:00",
        "modi_user": "api",
        "path": "/mattsse/voyager",
        "scheme": "https",
        "title": "GitHub - mattsse/voyager: crawl and scrape web pages in rust",
        "uri_uuid": "3fff637d5d61895de4b700b62dab92fb8f59890e7bd4d023dad82d35e17fecbe",
        "url": "https://github.com/mattsse/voyager"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software. - Issues · rust-lang/rust",
        "crea_time": "2024-08-29T18:01:01.974319237+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:01.974319237+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/issues",
        "scheme": "https",
        "title": "Issues · rust-lang/rust · GitHub",
        "uri_uuid": "c85591be07f0eb7856cc9fb7a9e2b6e18ad44315e9ac1e88bd289fbf3742ff45",
        "url": "https://github.com/rust-lang/rust/issues?q=label%3Arust-2-breakage-wishlist+"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:03.676795396+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:03.676795396+02:00",
        "modi_user": "api",
        "path": "/slides/pattern-matching/",
        "scheme": "https",
        "title": "Patterns and Matching",
        "uri_uuid": "43ecd1a40f84cf731a368f3614781fe0b80a4ac2adf9012f7f50c69400f30cbc",
        "url": "https://oylenshpeegul.github.io/slides/pattern-matching/"
    },
    {
        "auto_descr": "How to build a real-time remote control for presentations, allowing you to change slides from a remote web or mobile app, using reveal.js.",
        "crea_time": "2024-08-29T18:01:04.000189780+02:00",
        "crea_user": "api",
        "host": "www.pubnub.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:04.000189780+02:00",
        "modi_user": "api",
        "path": "/blog/realtime-presentation-remote-control-using-reveal-js-and-pubnub/",
        "scheme": "https",
        "title": "Real-time Presentation Remote Control with reveal.js | PubNub",
        "uri_uuid": "9096522f2e964eae35e69b6e765a50881ed555d4167b3070fc593dc5a53d20ec",
        "url": "https://www.pubnub.com/blog/realtime-presentation-remote-control-using-reveal-js-and-pubnub/"
    },
    {
        "auto_descr": "Documentation and demos for the open source reveal.js HTML presentation framework.",
        "crea_time": "2024-08-29T18:01:04.207396344+02:00",
        "crea_user": "api",
        "host": "revealjs.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:04.207396344+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "The HTML presentation framework | reveal.js",
        "uri_uuid": "b48ea7bd79bf1c86fca63578ff637ab51131845a416eca9e7b43ff7a576593b7",
        "url": "https://revealjs.com/"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T18:01:04.415940888+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:04.415940888+02:00",
        "modi_user": "api",
        "path": "/2022/05/10/malicious-crate-rustdecimal.html",
        "scheme": "https",
        "title": "Security advisory: malicious crate rustdecimal | Rust Blog",
        "uri_uuid": "6729628c60ed910e6e414224130d0428e279f81d65d5719bfbeabcae270dc74b",
        "url": "https://blog.rust-lang.org/2022/05/10/malicious-crate-rustdecimal.html"
    },
    {
        "auto_descr": "Rocket is a web framework for the Rust\n      programming language that makes it simple to write fast web applications\n      without sacrificing flexibility or type safety.",
        "crea_time": "2024-08-29T18:01:04.793939072+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:04.793939072+02:00",
        "modi_user": "api",
        "path": "/v0.5-rc/news/2022-05-09-version-0.5-rc.2/",
        "scheme": "https",
        "title": " Rocket's 2nd v0.5 Release Candidate - Rocket Web Framework ",
        "uri_uuid": "198df66ef37cfed2e6bbf13b646f444f446fa9aec7ae97a1fa2d240fa374019c",
        "url": "https://rocket.rs/v0.5-rc/news/2022-05-09-version-0.5-rc.2/"
    },
    {
        "auto_descr": "Latest Bevy (github code updated to 0.14) Full Tutorial for Rust Programming Game Development. All new, and all in one episode. ECS (Entity Component System)...",
        "crea_time": "2024-08-29T18:01:04.997655849+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:04.997655849+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust Bevy Full Tutorial - Game Development with Rust - Git Code Updated to Bevy v0.14 !!! - YouTube",
        "uri_uuid": "5c8b507ccfb625d240ea2598e6321c747409fe224076cda71388ad3533ce4b4c",
        "url": "https://www.youtube.com/watch?v=j7qHwb7geIM"
    },
    {
        "auto_descr": "Nell Shamrell-Harrington discusses how to transition from fighting the borrow checker to using its guidance to write safer and more powerful code at any experience level.",
        "crea_time": "2024-08-29T18:01:05.802965818+02:00",
        "crea_user": "api",
        "host": "www.infoq.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:05.802965818+02:00",
        "modi_user": "api",
        "path": "/presentations/rust-borrow-checker/",
        "scheme": "https",
        "title": "The Rust Borrow Checker - a Deep Dive - InfoQ",
        "uri_uuid": "4c283047dffeb97ad0697140733092e4e88ba81336d5f884337ca4eac15a2a89",
        "url": "https://www.infoq.com/presentations/rust-borrow-checker/"
    },
    {
        "auto_descr": "Contribute to Saruniks/german-grade-enum development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:07.340592439+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:07.340592439+02:00",
        "modi_user": "api",
        "path": "/Saruniks/german-grade-enum",
        "scheme": "https",
        "title": "GitHub - Saruniks/german-grade-enum",
        "uri_uuid": "a1933b55f0054cea96e212d2fc2aa044fa34d92617241e7febddf4825f9cdaa6",
        "url": "https://github.com/Saruniks/german-grade-enum"
    },
    {
        "auto_descr": "Today we are looking at the most popular engines, frameworks and libraries for Rust game development.Linkshttps://gamefromscratch.com/rust-game-development-i...",
        "crea_time": "2024-08-29T18:01:08.299650698+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:08.299650698+02:00",
        "modi_user": "api",
        "path": "/mLXwR88Dzkc",
        "scheme": "https",
        "title": "Rust for Game Development -- Game Engines & Frameworks - YouTube",
        "uri_uuid": "ddda298741757e79c00742b31a6ee88a4d6887f2379f0c6264c5a748e72d1009",
        "url": "https://youtu.be/mLXwR88Dzkc"
    },
    {
        "auto_descr": "Slint, the declarative GUI toolkit for Rust, C++, JavaScript, and Python. Build elegant, modern, stylish, native GUIs for Embedded, Desktop, and Web. Complete your UI design through quick iterations using Live Preview. Tweak everything, like colors, animations, geometries, or text. and verify the changes instantly. Build a responsive UI from a single design. Target different screen resolution and sizes with flexible layouts. Enjoy flexibility that only a native application can provide: Access full operating system APIs, utilize all CPU and GPU cores, connect to any peripheral. Slint compiles your UI design to machine code. Achieve low footprint and minimal resource consumption. The Slint runtime fits in less than 300KiB RAM, features a reactive property system, and is built with Rust. Deliver a smooth user experience. Slint uses the optimal graphics rendering method: GPU accelerated, DMA2D, Framebuffer, or Linebuffer. Continue using your favourite IDE. Choose between our generic language server and VS Code extension: Enjoy code completion, live-preview, code navigation, diagnostics, and syntax highlighting.",
        "crea_time": "2024-08-29T18:01:09.177378680+02:00",
        "crea_user": "api",
        "host": "slint-ui.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:09.177378680+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Slint |\n            Declarative GUI for Rust, C++, JavaScript & Python\n        ",
        "uri_uuid": "55fcd539d7bba20df2fb9f0bcc0852af2936edecb76e8fbaa7e30a6b40d089ff",
        "url": "https://slint-ui.com/"
    },
    {
        "auto_descr": "A localization system designed to unleash the entire expressive power of\nnatural language translations | Rust/Cargo package",
        "crea_time": "2024-08-29T18:01:10.025357438+02:00",
        "crea_user": "api",
        "host": "lib.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:10.025357438+02:00",
        "modi_user": "api",
        "path": "/crates/fluent",
        "scheme": "https",
        "title": "Fluent — Rust i18n library // Lib.rs",
        "uri_uuid": "5ccd774f0b58b20b13fe115225a77078b91607ee98c25d2a908e14c56564c469",
        "url": "https://lib.rs/crates/fluent"
    },
    {
        "auto_descr": "A `Cursor` wraps an in-memory buffer and provides it with a `Seek` implementation.",
        "crea_time": "2024-08-29T18:01:10.469913025+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:10.469913025+02:00",
        "modi_user": "api",
        "path": "/std/io/struct.Cursor.html",
        "scheme": "https",
        "title": "Cursor in std::io - Rust",
        "uri_uuid": "e717d8e78c830f204165d77757d4e36e95e746353f69191169a36ae09411f11d",
        "url": "https://doc.rust-lang.org/std/io/struct.Cursor.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:10.729353186+02:00",
        "crea_user": "api",
        "host": "www.phoronix.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:10.729353186+02:00",
        "modi_user": "api",
        "path": "/scan.php",
        "scheme": "https",
        "title": "Rust For The Linux Kernel Updated, Uutils As Rust Version Of Coreutils Updated Too - Phoronix",
        "uri_uuid": "902b1b0a3d904d3c43b0c2359560fe0ddcb521b4da98d0497125f10db8f2bfcb",
        "url": "https://www.phoronix.com/scan.php?page=news_item&px=Rust-Linux-v7-Plus-New-Uutils"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:11.771239341+02:00",
        "crea_user": "api",
        "host": "www.reddit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:11.771239341+02:00",
        "modi_user": "api",
        "path": "/r/rust/comments/3hb0wm/underhanded_rust_contest/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "be9abfff0d18a28a41fb84ea459ede7b6b555154da7f64a2a83225b812e8f209",
        "url": "https://www.reddit.com/r/rust/comments/3hb0wm/underhanded_rust_contest/"
    },
    {
        "auto_descr": "Adds zero-cost stack overflow protection to your embedded programs - knurling-rs/flip-link",
        "crea_time": "2024-08-29T18:01:11.899210439+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:11.899210439+02:00",
        "modi_user": "api",
        "path": "/knurling-rs/flip-link",
        "scheme": "https",
        "title": "GitHub - knurling-rs/flip-link: Adds zero-cost stack overflow protection to your embedded programs",
        "uri_uuid": "6352b2a996e245fc541f1940984efe4148daaaa354c4b0938f8aac4bd802d57d",
        "url": "https://github.com/knurling-rs/flip-link"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:12.776224608+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:12.776224608+02:00",
        "modi_user": "api",
        "path": "/wiki/Zero_to_the_power_of_zero",
        "scheme": "https",
        "title": "Zero to the power of zero - Wikipedia",
        "uri_uuid": "1401889529680ef3c4c5c6233e1db526b24543fe90a58c4c8676a5049602aca3",
        "url": "https://en.wikipedia.org/wiki/Zero_to_the_power_of_zero"
    },
    {
        "auto_descr": "An intuitive explanation of how audio fingerprinting works helping users in identifying music from short snippets",
        "crea_time": "2024-08-29T18:01:13.087236014+02:00",
        "crea_user": "api",
        "host": "emysound.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:13.087236014+02:00",
        "modi_user": "api",
        "path": "/blog/open-source/2020/06/12/how-audio-fingerprinting-works.html",
        "scheme": "https",
        "title": "\n    How does Audio Fingerprinting work - Emysound\n    \n  ",
        "uri_uuid": "d6a6dc434d65404232ac75190a5ab13d10b409354245dd66ff1d934b09a0f285",
        "url": "https://emysound.com/blog/open-source/2020/06/12/how-audio-fingerprinting-works.html"
    },
    {
        "auto_descr": "objc.io publishes books, videos, and articles on advanced techniques for iOS and macOS development.",
        "crea_time": "2024-08-29T18:01:13.398150615+02:00",
        "crea_user": "api",
        "host": "www.objc.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:13.398150615+02:00",
        "modi_user": "api",
        "path": "/issues/24-audio/audio-dog-house",
        "scheme": "https",
        "title": "\n\t\t\tThe Audio Processing Dog House\n\t\t\t·\n\t\t\tobjc.io\n\t\t",
        "uri_uuid": "0ae17098c1d5fc0717647a10b5e468e109f93f417891d8f4403b67d0f410ccb0",
        "url": "https://www.objc.io/issues/24-audio/audio-dog-house"
    },
    {
        "auto_descr": "A collection of simple modules which showcase simple use of tasks, channels, and other tokio primitives to implement simple networking applications. Purely educational purposes. - barafael/achat",
        "crea_time": "2024-08-29T18:01:13.767509113+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:13.767509113+02:00",
        "modi_user": "api",
        "path": "/barafael/achat",
        "scheme": "https",
        "title": "GitHub - barafael/achat: A collection of simple modules which showcase simple use of tasks, channels, and other tokio primitives to implement simple networking applications. Purely educational purposes.",
        "uri_uuid": "f7d06cf81f70205b3be6232dc883cdf6155f7cad0a1b1f6c997e7a6615450ac5",
        "url": "https://github.com/barafael/achat"
    },
    {
        "auto_descr": "The Rust client library for Prometheus.",
        "crea_time": "2024-08-29T18:01:14.679413741+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:14.679413741+02:00",
        "modi_user": "api",
        "path": "/prometheus/latest/prometheus/",
        "scheme": "https",
        "title": "prometheus - Rust",
        "uri_uuid": "81947ed70517853988fd3c24eb4f0b5d8e6a01fff66884f2c939e962ed3afe6b",
        "url": "https://docs.rs/prometheus/latest/prometheus/"
    },
    {
        "auto_descr": "A Computer Science Curriculum with Rust flavor! Contribute to AbdesamedBendjeddou/Rusty-CS development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:14.841941805+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:14.841941805+02:00",
        "modi_user": "api",
        "path": "/AbdesamedBendjeddou/Rusty-CS",
        "scheme": "https",
        "title": "GitHub - AbdesamedBendjeddou/Rusty-CS: A Computer Science Curriculum with Rust flavor!",
        "uri_uuid": "c4f907f0df73703ddbefbb3efadd1be99e6129e924136a4b05a245d7ed4773a2",
        "url": "https://github.com/AbdesamedBendjeddou/Rusty-CS"
    },
    {
        "auto_descr": "Creating an Easy Mode for Rust Rust has a reputation for being difficult to learn. This perception directly conflicts with one of the community aims: empowerment. Doubt breeds fear. And fear makes it...",
        "crea_time": "2024-08-29T18:01:15.886214072+02:00",
        "crea_user": "api",
        "host": "tim.mcnamara.nz",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:15.886214072+02:00",
        "modi_user": "api",
        "path": "/post/683022094467039232/easy-mode-for-rust",
        "scheme": "https",
        "title": "Tim McNamara (@timClicks) – Creating an Easy Mode for Rust",
        "uri_uuid": "20374556ee03b3824b1e6c9bd535d0c8bd80dcf1b2b3f9cb70b2959a4b84814b",
        "url": "https://tim.mcnamara.nz/post/683022094467039232/easy-mode-for-rust"
    },
    {
        "auto_descr": "Learn about Visual Studio Code editor features (code completion, debugging, snippets, linting) for Rust.",
        "crea_time": "2024-08-29T18:01:17.276128267+02:00",
        "crea_user": "api",
        "host": "code.visualstudio.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:17.276128267+02:00",
        "modi_user": "api",
        "path": "/docs/languages/rust",
        "scheme": "https",
        "title": "Rust with Visual Studio Code",
        "uri_uuid": "c94158534596db7850c2f0191c9484b575b610d5a50885224b46dec06fb44dfd",
        "url": "https://code.visualstudio.com/docs/languages/rust"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:01:17.804339515+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:17.804339515+02:00",
        "modi_user": "api",
        "path": "/reference/patterns.html",
        "scheme": "https",
        "title": "Patterns - The Rust Reference",
        "uri_uuid": "0e99afca4cd454f55579db7925583c15a5f527a14f15ea39122b29b7f1f19c72",
        "url": "https://doc.rust-lang.org/reference/patterns.html#wildcard-pattern"
    },
    {
        "auto_descr": "Applied offensive security with Rust  - https://kerkour.com/black-hat-rust - skerkour/black-hat-rust",
        "crea_time": "2024-08-29T18:01:18.027512244+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:18.027512244+02:00",
        "modi_user": "api",
        "path": "/skerkour/black-hat-rust",
        "scheme": "https",
        "title": "GitHub - skerkour/black-hat-rust: Applied offensive security with Rust  - https://kerkour.com/black-hat-rust",
        "uri_uuid": "7c380aa6d0c26cc2b1db2217197e29ae504163eb730f17e32b0b249a1e80001a",
        "url": "https://github.com/skerkour/black-hat-rust"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:01:18.755776275+02:00",
        "crea_user": "api",
        "host": "rust-lang.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:18.755776275+02:00",
        "modi_user": "api",
        "path": "/async-book/07_workarounds/04_recursion.html",
        "scheme": "https",
        "title": "Recursion - Asynchronous Programming in Rust",
        "uri_uuid": "80202102482123337b928135cdb38afe9fffc8267daf3c6b1c0d82f17667ff21",
        "url": "https://rust-lang.github.io/async-book/07_workarounds/04_recursion.html"
    },
    {
        "auto_descr": "A few years ago, due to some random chain of events, I ended up implementing a conversion from 128 bit integers to 64 bit floats. This would&rsquo;ve turned out to be a complete waste of time, except that my final version is faster than the builtin conversion of every compiler I tested. In this blog post, I&rsquo;ll explain what happened, how floats work, how this conversion works, and how it got a bit out of hand.\n",
        "crea_time": "2024-08-29T18:01:19.000440341+02:00",
        "crea_user": "api",
        "host": "blog.m-ou.se",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:19.000440341+02:00",
        "modi_user": "api",
        "path": "/floats/",
        "scheme": "https",
        "title": "Converting Integers to Floats Using Hyperfocus - Mara's Blog",
        "uri_uuid": "4be96e86fdd0561ae53907410e4885b639f663cff51e30d83a59a6dc0dc4d9e0",
        "url": "https://blog.m-ou.se/floats/"
    },
    {
        "auto_descr": "Follow up article to this one here So recently I read this article about how the Bitcoin community had executed\nwhat’s known as a “Zero-Knowledge …",
        "crea_time": "2024-08-29T18:01:19.369831588+02:00",
        "crea_user": "api",
        "host": "manishearth.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:19.369831588+02:00",
        "modi_user": "api",
        "path": "/blog/2016/03/05/exploring-zero-knowledge-proofs/",
        "scheme": "https",
        "title": "Exploring Zero-Knowledge Proofs - In Pursuit of Laziness",
        "uri_uuid": "afb7667d32410e042c9858844031ddd6d5e4dd1b4a13bb796f5ad78c833eea5a",
        "url": "https://manishearth.github.io/blog/2016/03/05/exploring-zero-knowledge-proofs/"
    },
    {
        "auto_descr": "Back in March I was particularly interested in Zero-Knowledge Proofs. At the time, I wrote\na long blog post introducing them and explaining how the …",
        "crea_time": "2024-08-29T18:01:19.642734990+02:00",
        "crea_user": "api",
        "host": "manishearth.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:19.642734990+02:00",
        "modi_user": "api",
        "path": "/blog/2016/08/10/interactive-sudoku-zero-knowledge-proof/",
        "scheme": "https",
        "title": "Interactive Sudoku Zero-knowledge Proof - In Pursuit of Laziness",
        "uri_uuid": "ea93313ed3e5acecb7085fea5e7f36a3780c4074bb8098a8fc5f236dd88ca123",
        "url": "https://manishearth.github.io/blog/2016/08/10/interactive-sudoku-zero-knowledge-proof/"
    },
    {
        "auto_descr": "OpenZKP - pure Rust implementations of Zero-Knowledge Proof systems. - 0xProject/OpenZKP",
        "crea_time": "2024-08-29T18:01:19.874694777+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:19.874694777+02:00",
        "modi_user": "api",
        "path": "/0xProject/OpenZKP",
        "scheme": "https",
        "title": "GitHub - 0xProject/OpenZKP: OpenZKP - pure Rust implementations of Zero-Knowledge Proof systems.",
        "uri_uuid": "ddf308c7c28767e022259ac4935c27347075ea8b02290c36684684b50c7acda1",
        "url": "https://github.com/0xProject/OpenZKP"
    },
    {
        "auto_descr": "Zero-knowledge Cryptography in Rust has 14 repositories available. Follow their code on GitHub.",
        "crea_time": "2024-08-29T18:01:20.737735315+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:20.737735315+02:00",
        "modi_user": "api",
        "path": "/zkcrypto",
        "scheme": "https",
        "title": "Zero-knowledge Cryptography in Rust · GitHub",
        "uri_uuid": "fa70ed70dd8c3fdd62cabae93a525340f5e85de4b342a6cfa540dc3785b327a4",
        "url": "https://github.com/zkcrypto"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:01:21.388744428+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:21.388744428+02:00",
        "modi_user": "api",
        "path": "/reference/types/never.html",
        "scheme": "https",
        "title": "Never type - The Rust Reference",
        "uri_uuid": "6b6f5927d4d6f88ce49129e9f14fad0953f7c37b64c74eea2c07a03f2d3587b0",
        "url": "https://doc.rust-lang.org/reference/types/never.html"
    },
    {
        "auto_descr": "Currently it just calls truncate(0). truncate() is (a) not marked as\n#[inline], and (b) more general than needed for clear().\nThis commit changes clear() to do the work itself. This modest change\nw...",
        "crea_time": "2024-08-29T18:01:21.565647595+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:21.565647595+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust/pull/96002",
        "scheme": "https",
        "title": "Speed up Vec::clear(). by nnethercote · Pull Request #96002 · rust-lang/rust · GitHub",
        "uri_uuid": "9c72bd848aaf958f291983348ad135731f4e94ee7da8e5964d4e62cfe3cf3a6e",
        "url": "https://github.com/rust-lang/rust/pull/96002"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:22.781631133+02:00",
        "crea_user": "api",
        "host": "www.embedded-world.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:22.781631133+02:00",
        "modi_user": "api",
        "path": "/en/exhibition-info/ew22/details",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "674fcfdbfa7f9f20300425d98f31db361774870748ad115b939062a603c901e4",
        "url": "https://www.embedded-world.de/en/exhibition-info/ew22/details"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:01:24.306941679+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:24.306941679+02:00",
        "modi_user": "api",
        "path": "/from-perl-to-rust/introduction.html",
        "scheme": "https",
        "title": "Introduction - From Perl to Rust",
        "uri_uuid": "7ecf575e69ce514c27bc7bd351e5b877ffbb35798589ec219f3a43c8753aa3dd",
        "url": "https://oylenshpeegul.gitlab.io/from-perl-to-rust/introduction.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:25.044436210+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:25.044436210+02:00",
        "modi_user": "api",
        "path": "/blog/2022/03/23/this-week-in-rust-435/",
        "scheme": "https",
        "title": "This Week in Rust 435  · This Week in Rust\n",
        "uri_uuid": "41ace480581a18dc673aeebddf248713b264b41a0b46cd587abe45b18fa66bf6",
        "url": "https://this-week-in-rust.org/blog/2022/03/23/this-week-in-rust-435/"
    },
    {
        "auto_descr": "An elegant GUI library for Rust, inspired by React. Supports Web, Desktop, SSR, Liveview, and Mobile.",
        "crea_time": "2024-08-29T18:01:25.295327967+02:00",
        "crea_user": "api",
        "host": "dioxuslabs.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:25.295327967+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Dioxus | An elegant GUI library for Rust",
        "uri_uuid": "f48086796864f0910b5bbde923e5e53755606fca77eb92e662047d1423f6365e",
        "url": "https://dioxuslabs.com/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:25.559295719+02:00",
        "crea_user": "api",
        "host": "www.areweguiyet.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:25.559295719+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Are we GUI yet?",
        "uri_uuid": "561ebe8b6c7e653b67814fa8cc70ef9601ef6c44c975612ffce15cc10212e040",
        "url": "https://www.areweguiyet.com/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T18:01:25.910649761+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:25.910649761+02:00",
        "modi_user": "api",
        "path": "/episode/061-prabhu-eshwarla/",
        "scheme": "https",
        "title": "Rust Servers, Services, and Apps with Prabhu Eshwarla :: Rustacean Station",
        "uri_uuid": "7e4b7e893d31d8f2c42049c4685c8246793c0da36162023837c5fcc3c8fd7849",
        "url": "https://rustacean-station.org/episode/061-prabhu-eshwarla/"
    },
    {
        "auto_descr": "Running a smart image CDN using WebAssembly as a hyperscaled edge service.",
        "crea_time": "2024-08-29T18:01:26.046940014+02:00",
        "crea_user": "api",
        "host": "engineering.q42.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:26.046940014+02:00",
        "modi_user": "api",
        "path": "/webassembly-beyond-the-browser/",
        "scheme": "https",
        "title": "WebAssembly: Beyond the Browser",
        "uri_uuid": "672563393e3bd70406bff431f40eae8876795075315b470112d2af8c177db638",
        "url": "https://engineering.q42.nl/webassembly-beyond-the-browser/"
    },
    {
        "auto_descr": "In this session, Zeeshan (https://twitter.com/zeenix) will walk us through the challenges of implementing an async library that's agnostic to the various cur...",
        "crea_time": "2024-08-29T18:01:26.237067512+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:26.237067512+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Runtime-agnostic async crates by Zeeshan Ali - Rust Linz, Feburary 2022 - YouTube",
        "uri_uuid": "b555a3c4ed367a263cca0e0d01e9d823b640c4a01e20f16e28b80b8fc418c4ff",
        "url": "https://www.youtube.com/watch?v=w1vKAUor-4o"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:01:26.822138472+02:00",
        "crea_user": "api",
        "host": "rustwasm.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:26.822138472+02:00",
        "modi_user": "api",
        "path": "/wasm-bindgen/examples/2d-canvas.html",
        "scheme": "https",
        "title": "web-sys: canvas hello world - The `wasm-bindgen` Guide",
        "uri_uuid": "a89b77ece8cd6e530000a4162817816f41e5117a592eeeebae6e9d67f992615d",
        "url": "https://rustwasm.github.io/wasm-bindgen/examples/2d-canvas.html"
    },
    {
        "auto_descr": "Plotters - A Rust drawing library focusing on data plotting for both WASM and native applications 🦀📈🚀",
        "crea_time": "2024-08-29T18:01:27.070067473+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:27.070067473+02:00",
        "modi_user": "api",
        "path": "/plotters/latest/plotters/",
        "scheme": "https",
        "title": "plotters - Rust",
        "uri_uuid": "17a94bcb4b12db13eafe0d32404643fe3dc74d2352dcfa8f6f6ee44c4aacb420",
        "url": "https://docs.rs/plotters/latest/plotters/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:27.298355019+02:00",
        "crea_user": "api",
        "host": "rr-project.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:27.298355019+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "rr: lightweight recording & deterministic debugging",
        "uri_uuid": "eb099d4da54d647ad5d388eafade34845f5c878ee114eb50feccf1e66ebe6e1a",
        "url": "https://rr-project.org/"
    },
    {
        "auto_descr": "The current state of interactive debugging for WebAssembly and useful tips on how to do better.",
        "crea_time": "2024-08-29T18:01:27.813830997+02:00",
        "crea_user": "api",
        "host": "medium.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:27.813830997+02:00",
        "modi_user": "api",
        "path": "/oasislabs/webassembly-debugging-bec0aa93f8c6",
        "scheme": "https",
        "title": "WebAssembly Debugging. Debugging WebAssembly, as with any… | by willscott | Oasis Labs | Medium",
        "uri_uuid": "635e483afdd896e2d9623fddcd41381a49b02280d3cebcd68cabf57d04e2e626",
        "url": "https://medium.com/oasislabs/webassembly-debugging-bec0aa93f8c6"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:28.016707766+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:28.016707766+02:00",
        "modi_user": "api",
        "path": "/wiki/DMOZ",
        "scheme": "https",
        "title": "DMOZ - Wikipedia",
        "uri_uuid": "e57826fcfab97f29eff2854f1e5cf56d46c354fe40bdc02c9fc30c97661f785d",
        "url": "https://en.wikipedia.org/wiki/DMOZ"
    },
    {
        "auto_descr": "Starter template for an online book or docs site made with Markdown and mdBook 🦀 📙 - MichaelCurrin/mdbook-quickstart",
        "crea_time": "2024-08-29T18:01:29.706971284+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:29.706971284+02:00",
        "modi_user": "api",
        "path": "/MichaelCurrin/mdbook-quickstart",
        "scheme": "https",
        "title": "GitHub - MichaelCurrin/mdbook-quickstart: Starter template for an online book or docs site made with Markdown and mdBook 🦀 📙",
        "uri_uuid": "3bda0f34f68e4d08b16c868ee5da385d426ee0f6dcf3760ec4d6762876abbfd5",
        "url": "https://github.com/MichaelCurrin/mdbook-quickstart"
    },
    {
        "auto_descr": "Quickstart configs for Nvim LSP. Contribute to neovim/nvim-lspconfig development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:31.124945855+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:31.124945855+02:00",
        "modi_user": "api",
        "path": "/neovim/nvim-lspconfig",
        "scheme": "https",
        "title": "GitHub - neovim/nvim-lspconfig: Quickstart configs for Nvim LSP",
        "uri_uuid": "70445ee394b6d675227dd31e4d919e47fb1dae775b3b8918731d5ff80f03e37a",
        "url": "https://github.com/neovim/nvim-lspconfig"
    },
    {
        "auto_descr": "Lightning-fast and Powerful Code Editor written in Rust - lapce/lapce",
        "crea_time": "2024-08-29T18:01:31.813713465+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:31.813713465+02:00",
        "modi_user": "api",
        "path": "/lapce/lapce",
        "scheme": "https",
        "title": "GitHub - lapce/lapce: Lightning-fast and Powerful Code Editor written in Rust",
        "uri_uuid": "a5df54bb63f394142dab49cdf9b384d45748877bf1dc0bf2b9b2c4f74d06e827",
        "url": "https://github.com/lapce/lapce"
    },
    {
        "auto_descr": "Yesterday, I talked about GNU Readline. Today, I wanted something similar in Rust. I found several crates on crates.io, but all seem to have been yanked in favor of rustyline. Rustyline seems really well done and very flexible. In particular, it can be configured with either Emacs or Vi keybindings.\nuserustyline::{Config,Editor,EditMode};fn main(){// let config = Config::builder().edit_mode(EditMode::Emacs).build(); letconfig=Config::builder().edit_mode(EditMode::Vi).build();letmutrl: Editor<()>=Editor::with_config(config);letreadline=rl.readline(\">> \");matchreadline{Ok(line)=>println!(\"Line: {:?}\",line),Err(_)=>println!(\"No input\"),}}   But I want to write programs that automatically configure themselves according to the user's environment.",
        "crea_time": "2024-08-29T18:01:32.563658696+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:32.563658696+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20220209/",
        "scheme": "https",
        "title": "\n  Rustyline · oylenshpeegul\n",
        "uri_uuid": "21ea1eaf5a15d3704bebdad643bdc0517999944316e8100305c26c8d1033ab37",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20220209/"
    },
    {
        "auto_descr": "transpose harmonica tabs. Contribute to Seebass22/harptabber development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:33.630085225+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:33.630085225+02:00",
        "modi_user": "api",
        "path": "/Seebass22/harptabber",
        "scheme": "https",
        "title": "GitHub - Seebass22/harptabber: transpose harmonica tabs",
        "uri_uuid": "85d503c62987f3233456d64447cb92ab442b438ae4667a0ba7f54069cc0a01f8",
        "url": "https://github.com/Seebass22/harptabber"
    },
    {
        "auto_descr": "Build terminal user interfaces and dashboards using Rust - fdehau/tui-rs",
        "crea_time": "2024-08-29T18:01:34.496420737+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:34.496420737+02:00",
        "modi_user": "api",
        "path": "/fdehau/tui-rs",
        "scheme": "https",
        "title": "GitHub - fdehau/tui-rs: Build terminal user interfaces and dashboards using Rust",
        "uri_uuid": "0a44c175e37a39586a341a03791a29505ebbe88a81417bf6d40608cf540efa34",
        "url": "https://github.com/fdehau/tui-rs"
    },
    {
        "auto_descr": "A Text User Interface library for the Rust programming language - gyscos/cursive",
        "crea_time": "2024-08-29T18:01:35.325464064+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:35.325464064+02:00",
        "modi_user": "api",
        "path": "/gyscos/Cursive",
        "scheme": "https",
        "title": "GitHub - gyscos/cursive: A Text User Interface library for the Rust programming language",
        "uri_uuid": "502e702dfb06683bf5dc07f92cf0acf8790dfe7eda729960c6e7adb7de32448c",
        "url": "https://github.com/gyscos/Cursive"
    },
    {
        "auto_descr": "A low-level ncurses wrapper for Rust. Contribute to jeaye/ncurses-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:36.234845963+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:36.234845963+02:00",
        "modi_user": "api",
        "path": "/jeaye/ncurses-rs",
        "scheme": "https",
        "title": "GitHub - jeaye/ncurses-rs: A low-level ncurses wrapper for Rust",
        "uri_uuid": "b133989944e2382ad5fdd3e9f88df35df1f0daf2857d30f5137a916e946b5d2c",
        "url": "https://github.com/jeaye/ncurses-rs"
    },
    {
        "auto_descr": "blingful character graphics/TUI library. definitely not curses. - dankamongmen/notcurses",
        "crea_time": "2024-08-29T18:01:36.948999402+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:36.948999402+02:00",
        "modi_user": "api",
        "path": "/dankamongmen/notcurses",
        "scheme": "https",
        "title": "GitHub - dankamongmen/notcurses: blingful character graphics/TUI library. definitely not curses.",
        "uri_uuid": "f6b7940a7b0fc8e1ca45c4a46768c922a8dcf86202870e49f6b7ea6c96e785e6",
        "url": "https://github.com/dankamongmen/notcurses"
    },
    {
        "auto_descr": "Rust Implementation of Awk. Contribute to wenley/rust-awk development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:38.827728753+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:38.827728753+02:00",
        "modi_user": "api",
        "path": "/wenley/rust-awk",
        "scheme": "https",
        "title": "GitHub - wenley/rust-awk: Rust Implementation of Awk",
        "uri_uuid": "cfb38e3d10c9b53fc0c0dcf1cb2f8fb5a44078f1e0b9fae876065dcefd32955a",
        "url": "https://github.com/wenley/rust-awk"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:41.401501461+02:00",
        "crea_user": "api",
        "host": "api.libreoffice.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:41.401501461+02:00",
        "modi_user": "api",
        "path": "/docs/install.html",
        "scheme": "https",
        "title": "LibreOffice 24.2 SDK - Installation Guide",
        "uri_uuid": "eb428c7a1c520f976ca593c0246267f262ce4cea32db3e31b43efb13497df300",
        "url": "https://api.libreoffice.org/docs/install.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:41.617545697+02:00",
        "crea_user": "api",
        "host": "odftoolkit.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:41.617545697+02:00",
        "modi_user": "api",
        "path": "/odfdom/",
        "scheme": "https",
        "title": "ODF Toolkit",
        "uri_uuid": "60b0256c5c3450661c640cba4432ab088007994766bb3cf3a27e069067a984a5",
        "url": "https://odftoolkit.org/odfdom/"
    },
    {
        "auto_descr": "Today they released Rust 1.59, which (among other things) stabilized inline assembly!\n This reminded me of programming the Cray back in the day. The Cray C compiler allowed you to stick CAL (Cray Assembly Language) instructions inline. On the Cray, optimizing your code was all about getting it to vectorize. If it vectorized, life was good. If it failed to vectorize, you were miserable. When this happened, sometimes you could convince it to vectorize something it wasn't by dropping down into CAL.",
        "crea_time": "2024-08-29T18:01:41.794395858+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:41.794395858+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20220224/",
        "scheme": "https",
        "title": "\n  Inline Assembly · oylenshpeegul\n",
        "uri_uuid": "0032fcf359c9222008d2066d2ae56f0cb754fe52a32982d89e5670f0e01d4162",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20220224/"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T18:01:42.522591398+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:42.522591398+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "bbaa4e5b807283e50b4f335e2c5ad101e94c5bb91437841fa47f45534484cc88",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=d28b03029bc8092c900ba4e3f59935a3"
    },
    {
        "auto_descr": "🐚 An async & dynamic ORM for Rust. Contribute to SeaQL/sea-orm development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:01:43.356413440+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:43.356413440+02:00",
        "modi_user": "api",
        "path": "/SeaQL/sea-orm",
        "scheme": "https",
        "title": "GitHub - SeaQL/sea-orm: 🐚 An async & dynamic ORM for Rust",
        "uri_uuid": "3647c589adbbf605e73cd2e1bd68db23d034326cc8d01c221c37a1a180ab4c8d",
        "url": "https://github.com/SeaQL/sea-orm"
    },
    {
        "auto_descr": "TLA+ is a formal specification language developed to design, model, document, and verify concurrent systems. - TLA+",
        "crea_time": "2024-08-29T18:01:44.276804626+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:44.276804626+02:00",
        "modi_user": "api",
        "path": "/tlaplus/",
        "scheme": "https",
        "title": "TLA+ · GitHub",
        "uri_uuid": "b5ff94d267c58705df7d19f3ebd7623a4105b5888c360993c8488131719d2255",
        "url": "https://github.com/tlaplus/"
    },
    {
        "auto_descr": "A static verifier for Rust, based on the Viper verification infrastructure. - viperproject/prusti-dev",
        "crea_time": "2024-08-29T18:01:45.170238039+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:45.170238039+02:00",
        "modi_user": "api",
        "path": "/viperproject/prusti-dev",
        "scheme": "https",
        "title": "GitHub - viperproject/prusti-dev: A static verifier for Rust, based on the Viper verification infrastructure.",
        "uri_uuid": "24a82c6268e8cc6f07d7a945a163a00cee2a429f27d7950482eedb69d85d3360",
        "url": "https://github.com/viperproject/prusti-dev"
    },
    {
        "auto_descr": "Creusot helps you prove your code is correct in an automated fashion. - creusot-rs/creusot",
        "crea_time": "2024-08-29T18:01:46.891315726+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:46.891315726+02:00",
        "modi_user": "api",
        "path": "/xldenis/creusot",
        "scheme": "https",
        "title": "GitHub - creusot-rs/creusot: Creusot helps you prove your code is correct in an automated fashion.",
        "uri_uuid": "4ae8c17b8f269fdf7f9d2e8ffb7aaee5a79e16fc07135f88dd091b20aa0cd3d4",
        "url": "https://github.com/xldenis/creusot"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:47.864142145+02:00",
        "crea_user": "api",
        "host": "twitter.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:47.864142145+02:00",
        "modi_user": "api",
        "path": "/llogiq/status/1492509045969854464",
        "scheme": "https",
        "title": "x.com",
        "uri_uuid": "91c02d7522a58ccfbbd03a53040b60fe1eed7c71125cc18f4e57794809c49919",
        "url": "https://twitter.com/llogiq/status/1492509045969854464"
    },
    {
        "auto_descr": "I often write pieces that showcase how well Rust can work for you, and how it\ncan let you build powerful abstractions, and prevents you from making a bunch of\nmistakes. If you r...",
        "crea_time": "2024-08-29T18:01:48.266783764+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:48.266783764+02:00",
        "modi_user": "api",
        "path": "/articles/a-rust-match-made-in-hell",
        "scheme": "https",
        "title": "\n        \n        A Rust match made in hell\n        \n    ",
        "uri_uuid": "418c76436c184b02be8e1bc796a6e08600cc8ba98ddc85c637658f564e718d5b",
        "url": "https://fasterthanli.me/articles/a-rust-match-made-in-hell"
    },
    {
        "auto_descr": "Easy-to-use wrapper for WebRTC DataChannels peer-to-peer connections written in Rust and compiling to WASM. - wasm-peers/wasm-peers",
        "crea_time": "2024-08-29T18:01:49.506853403+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:49.506853403+02:00",
        "modi_user": "api",
        "path": "/wasm-peers/wasm-peers",
        "scheme": "https",
        "title": "GitHub - wasm-peers/wasm-peers: Easy-to-use wrapper for WebRTC DataChannels peer-to-peer connections written in Rust and compiling to WASM.",
        "uri_uuid": "3134ddff4129b6bc5efcb4dc95de2b4e6ee7deb22b84de25ccdf164c03ab0c5d",
        "url": "https://github.com/wasm-peers/wasm-peers"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:50.637672125+02:00",
        "crea_user": "api",
        "host": "agar.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:50.637672125+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "fd5093c6bcd5b9eedec8703ff6da2b8db62a132ec3d3324aa8312d0ee4b07275",
        "url": "https://agar.io/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:51.455799728+02:00",
        "crea_user": "api",
        "host": "wasm-peers-footballers.s3-website.eu-central-1.amazonaws.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:51.455799728+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "http",
        "title": "Footballers",
        "uri_uuid": "43fbffe885d4ef23d3e931c26bfdcc7fe18648ce890688ff9434048c00af3cd3",
        "url": "http://wasm-peers-footballers.s3-website.eu-central-1.amazonaws.com/"
    },
    {
        "auto_descr": "The `CanvasRenderingContext2d` class.",
        "crea_time": "2024-08-29T18:01:51.675981846+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:51.675981846+02:00",
        "modi_user": "api",
        "path": "/web-sys/latest/web_sys/struct.CanvasRenderingContext2d.html",
        "scheme": "https",
        "title": "CanvasRenderingContext2d in web_sys - Rust",
        "uri_uuid": "e878a7ce536ad6f1b6f851d8a16c1cbf934f484d8025ee8afe7f20fcbbf569c2",
        "url": "https://docs.rs/web-sys/latest/web_sys/struct.CanvasRenderingContext2d.html#impl-39"
    },
    {
        "auto_descr": "A Rust proc_macro_attribute to outline conversions from generic functions - llogiq/momo",
        "crea_time": "2024-08-29T18:01:52.245632402+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:52.245632402+02:00",
        "modi_user": "api",
        "path": "/llogiq/momo",
        "scheme": "https",
        "title": "GitHub - llogiq/momo: A Rust proc_macro_attribute to outline conversions from generic functions",
        "uri_uuid": "c016f4073f47406f251a8453d1445004ac0b56631d870f2e451d77875e92b346",
        "url": "https://github.com/llogiq/momo"
    },
    {
        "auto_descr": "It's time for another technical blog post about async Rust on embedded.\nThis time we're going to pitch Embassy/Rust against FreeRTOS/C on an STM32F446 microcontroller.",
        "crea_time": "2024-08-29T18:01:53.160285863+02:00",
        "crea_user": "api",
        "host": "tweedegolf.nl",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:53.160285863+02:00",
        "modi_user": "api",
        "path": "/en/blog/65/async-rust-vs-rtos-showdown",
        "scheme": "https",
        "title": "Tweede golf",
        "uri_uuid": "6bfd41e49a2a86c9f938d4082a6a4021b7044d9494b10bb1f1df8e444c537a02",
        "url": "https://tweedegolf.nl/en/blog/65/async-rust-vs-rtos-showdown"
    },
    {
        "auto_descr": "I had a delightful experience with property based testing this morning! Property based testing is a form of unit testing where instead of manually writing the tests based on examples, we generate the tests based on some property. This started at the end of the last century with QuickCheck, a Haskell program by Koen Claessen and John Hughes. It's taken a while to catch on, but these days you can get some sort of QuickCheck library for just about every programming language there is.",
        "crea_time": "2024-08-29T18:01:53.540109346+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:53.540109346+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20220119/",
        "scheme": "https",
        "title": "\n  Property based testing · oylenshpeegul\n",
        "uri_uuid": "7d152231bb7a1f5c0409b6ba57ff766b8b52a66e581dd3c613ecaec2ede76604",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20220119/"
    },
    {
        "auto_descr": "A short program I use to collect and filter the core changes for This Week In Rust - llogiq/twirer",
        "crea_time": "2024-08-29T18:01:54.496354137+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:54.496354137+02:00",
        "modi_user": "api",
        "path": "/llogiq/twirer",
        "scheme": "https",
        "title": "GitHub - llogiq/twirer: A short program I use to collect and filter the core changes for This Week In Rust",
        "uri_uuid": "fa481a1390f3ffb175eb5c448dfec4687e34b722daba552ed393688e41db609e",
        "url": "https://github.com/llogiq/twirer"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:55.342926690+02:00",
        "crea_user": "api",
        "host": "xkcd.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:55.342926690+02:00",
        "modi_user": "api",
        "path": "/1319/",
        "scheme": "https",
        "title": "xkcd: Automation",
        "uri_uuid": "86eabaa3f8795a2021478d8263c6ed4c3bae0d063cdc79d044ed8fd5fa458f8f",
        "url": "https://xkcd.com/1319/"
    },
    {
        "auto_descr": "I still get excited about programming languages. But these days, it's not so\nmuch because of what they let me do, but rather what they  don't  let me do. Ultimately, w...",
        "crea_time": "2024-08-29T18:01:55.563190399+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:55.563190399+02:00",
        "modi_user": "api",
        "path": "/articles/some-mistakes-rust-doesnt-catch",
        "scheme": "https",
        "title": "\n        \n        Some mistakes Rust doesn't catch\n        \n    ",
        "uri_uuid": "d8461fc301ff8e7e50ca1ecd6c7ef54c9554bf24417295b1314efb6fcb17325a",
        "url": "https://fasterthanli.me/articles/some-mistakes-rust-doesnt-catch"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:56.029449133+02:00",
        "crea_user": "api",
        "host": "kerkour.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:56.029449133+02:00",
        "modi_user": "api",
        "path": "/rust-error-handling/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "53338761ce3d947fcc90e6d564a1203a78ea0f766a15e6f8f057f1b367bb6bdf",
        "url": "https://kerkour.com/rust-error-handling/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:56.450047381+02:00",
        "crea_user": "api",
        "host": "tech.nextroll.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:56.450047381+02:00",
        "modi_user": "api",
        "path": "/blog/dev/2022/02/02/rustenstein.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "1c4f38e9263f2dba7d4566c7a8c54e3dfde3c42b44485d2a449969688dc72bda",
        "url": "https://tech.nextroll.com/blog/dev/2022/02/02/rustenstein.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:01:57.831332097+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:57.831332097+02:00",
        "modi_user": "api",
        "path": "/edition-guide/introduction.html",
        "scheme": "https",
        "title": "Introduction - The Rust Edition Guide",
        "uri_uuid": "71a61c8655935ad1dc5edcb9b194c6867780993c45529c656b75168a71bd113b",
        "url": "https://doc.rust-lang.org/edition-guide/introduction.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:01:57.951868320+02:00",
        "crea_user": "api",
        "host": "kerkour.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:57.951868320+02:00",
        "modi_user": "api",
        "path": "/black-hat-rust/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f590a8fbda47542dd968cf7d4ab32fd05a2d248b9f6bcbf30255ed9deb2ce39c",
        "url": "https://kerkour.com/black-hat-rust/"
    },
    {
        "auto_descr": "Hands-On Microservices with Rust: Build, test, and deploy scalable and reactive microservices with Rust 2018 (English Edition) eBook : Kolodin, Denis: Amazon.de: Kindle-Shop",
        "crea_time": "2024-08-29T18:01:58.331314896+02:00",
        "crea_user": "api",
        "host": "www.amazon.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:01:58.331314896+02:00",
        "modi_user": "api",
        "path": "/Hands-Microservices-Rust-scalable-microservices-ebook/dp/B07GVNZL4G",
        "scheme": "https",
        "title": "Hands-On Microservices with Rust: Build, test, and deploy scalable and reactive microservices with Rust 2018 (English Edition) eBook : Kolodin, Denis: Amazon.de: Kindle-Shop",
        "uri_uuid": "d0d6346121b19f235581440d21322619419bbfbb1b944869c30fe0f9b82f0bff",
        "url": "https://www.amazon.de/Hands-Microservices-Rust-scalable-microservices-ebook/dp/B07GVNZL4G"
    },
    {
        "auto_descr": "Bridges the gap between beginners and professionals, enabling you to write apps, build libraries, and organize projects in Rust.",
        "crea_time": "2024-08-29T18:02:00.950311870+02:00",
        "crea_user": "api",
        "host": "nostarch.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:00.950311870+02:00",
        "modi_user": "api",
        "path": "/rust-rustaceans",
        "scheme": "https",
        "title": "Rust for Rustaceans | No Starch Press",
        "uri_uuid": "1146cccbd2424b37a57f4f7fb179e5b2056306540df8b38b5c45dc0021af7f04",
        "url": "https://nostarch.com/rust-rustaceans"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:01.209106245+02:00",
        "crea_user": "api",
        "host": "www.amazon.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:01.209106245+02:00",
        "modi_user": "api",
        "path": "/Rust-Rustaceans-Programming-Experienced-Developers-ebook/dp/B0957SWKBS",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "8050ace7c494b1fd728c703f69f337415e01ed3c85468098d76232f1e848ca56",
        "url": "https://www.amazon.de/Rust-Rustaceans-Programming-Experienced-Developers-ebook/dp/B0957SWKBS"
    },
    {
        "auto_descr": "'Zero To Production In Rust' is a hands-on introduction to backend development in Rust.",
        "crea_time": "2024-08-29T18:02:03.809492414+02:00",
        "crea_user": "api",
        "host": "www.zero2prod.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:03.809492414+02:00",
        "modi_user": "api",
        "path": "/index.html",
        "scheme": "https",
        "title": "Zero To Production In Rust - An Introduction To Backend Development",
        "uri_uuid": "87c3bca3f39bc6a7e35ad44642756e4be836d5e446a201fa26992fe74eaff2a3",
        "url": "https://www.zero2prod.com/index.html?country=Germany&discount_code=VAT20"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:03.996246696+02:00",
        "crea_user": "api",
        "host": "www.manning.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:03.996246696+02:00",
        "modi_user": "api",
        "path": "/books/rust-web-development",
        "scheme": "https",
        "title": "Rust Web Development",
        "uri_uuid": "ac21a313bab70baffe5109e690034b289c53c9519fff616ffa7edce8185265f1",
        "url": "https://www.manning.com/books/rust-web-development#reviews"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:05.501542676+02:00",
        "crea_user": "api",
        "host": "www.amazon.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:05.501542676+02:00",
        "modi_user": "api",
        "path": "/Rust-Action-English-Tim-McNamara-ebook/dp/B098BNGMWH/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "623b0109a2af07318fc958289ecce999b713e9365f97caf5f3338f3c4239e16c",
        "url": "https://www.amazon.de/Rust-Action-English-Tim-McNamara-ebook/dp/B098BNGMWH/"
    },
    {
        "auto_descr": "Updated in 2024: A new version has been released that simplifies the programs used in the book, based on changes in the Rust language and crates since original publication. The …  - Selection from Command-Line Rust [Book]",
        "crea_time": "2024-08-29T18:02:09.752660923+02:00",
        "crea_user": "api",
        "host": "www.oreilly.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:09.752660923+02:00",
        "modi_user": "api",
        "path": "/library/view/command-line-rust/9781098109424/",
        "scheme": "https",
        "title": "Command-Line Rust[Book]",
        "uri_uuid": "68be6effbf4f52ca100959d5ef538d35fe1a913ea30062c540f74190fbf0d337",
        "url": "https://www.oreilly.com/library/view/command-line-rust/9781098109424/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:10.447279255+02:00",
        "crea_user": "api",
        "host": "www.amazon.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:10.447279255+02:00",
        "modi_user": "api",
        "path": "/Command-Line-Rust-Project-Based-Primer-Writing/dp/1098109430/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "21d4452bc141349214c0bce537cd39c170635ab3a28a433473e9f734942dafa9",
        "url": "https://www.amazon.de/Command-Line-Rust-Project-Based-Primer-Writing/dp/1098109430/"
    },
    {
        "auto_descr": "Make fun games as you learn the Rust programming language through a series of hands-on game development tutorials and real-world use of core language skills.",
        "crea_time": "2024-08-29T18:02:13.887033071+02:00",
        "crea_user": "api",
        "host": "pragprog.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:13.887033071+02:00",
        "modi_user": "api",
        "path": "/titles/hwrust/hands-on-rust/",
        "scheme": "https",
        "title": "Hands-on Rust: Effective Learning through 2D Game Development and Play by Herbert Wolverson",
        "uri_uuid": "b5d0cfd1b5c3105f3cab0638d26aea5d483a86b6970699fb6c585b0115ae2b68",
        "url": "https://pragprog.com/titles/hwrust/hands-on-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:14.431995134+02:00",
        "crea_user": "api",
        "host": "www.amazon.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:14.431995134+02:00",
        "modi_user": "api",
        "path": "/Hands-Rust-Effective-Learning-Development/dp/1680508164/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b430f9c12709691cdb73109efd0794dbf59b66ef1662ac0d29f10f94b4ccfa72",
        "url": "https://www.amazon.de/Hands-Rust-Effective-Learning-Development/dp/1680508164/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:18.164535108+02:00",
        "crea_user": "api",
        "host": "typeof.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:18.164535108+02:00",
        "modi_user": "api",
        "path": "/Iosevka/",
        "scheme": "https",
        "title": "Iosevka",
        "uri_uuid": "e3291db264627c174387a2d3fd77881b719fddd1b8d49ebb5cf9650a9210c5b9",
        "url": "https://typeof.net/Iosevka/"
    },
    {
        "auto_descr": "Hack | A typeface designed for source code",
        "crea_time": "2024-08-29T18:02:18.844755373+02:00",
        "crea_user": "api",
        "host": "sourcefoundry.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:18.844755373+02:00",
        "modi_user": "api",
        "path": "/hack/",
        "scheme": "https",
        "title": "Hack | A typeface designed for source code",
        "uri_uuid": "e708bb835058fb2aa77e3ef06f0accf565ed2d857d7b3524ad763e44246f1eb0",
        "url": "https://sourcefoundry.org/hack/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:19.325928017+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:19.325928017+02:00",
        "modi_user": "api",
        "path": "/wiki/Quindar_tones",
        "scheme": "https",
        "title": "Quindar tones - Wikipedia",
        "uri_uuid": "3fe8e0d833536fe10b9bf86eaf69f5b77970580d5b3bff836ad4026a9fc022a0",
        "url": "https://en.wikipedia.org/wiki/Quindar_tones"
    },
    {
        "auto_descr": "A fast, free C FFT library; includes real-complex, multidimensional, and parallel transforms. Benchmarked against many other FFTs.",
        "crea_time": "2024-08-29T18:02:19.564674492+02:00",
        "crea_user": "api",
        "host": "www.fftw.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:19.564674492+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "FFTW Home Page",
        "uri_uuid": "773b875f4af66c9ba25c0c3cf1cf768c528c9d655f766b99c5bbdcb6204d5af8",
        "url": "https://www.fftw.org/"
    },
    {
        "auto_descr": "aubio, a collection of algorithms and tools\nto extract musical meaning from audio signals, such as tempo, pitch, and onset",
        "crea_time": "2024-08-29T18:02:20.487769307+02:00",
        "crea_user": "api",
        "host": "aubio.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:20.487769307+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "aubio, a library for audio labelling",
        "uri_uuid": "16d8e15d4454ba2fe8aff2178a8354e9e9353d0ccdfd0a5436ea1662f5a08370",
        "url": "https://aubio.org/"
    },
    {
        "auto_descr": "FFTW3 binding for Rust. Contribute to rust-math/fftw development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:20.776858379+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:20.776858379+02:00",
        "modi_user": "api",
        "path": "/rust-math/fftw",
        "scheme": "https",
        "title": "GitHub - rust-math/fftw: FFTW3 binding for Rust",
        "uri_uuid": "3ca67e3c7350821a793d7e17147311beda4c81771a7c3f62b69fdeb9be961f5a",
        "url": "https://github.com/rust-math/fftw"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T18:02:21.488377818+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:21.488377818+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-wurzburg-meetup-group/events/283609518/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "ced61d46868c185d45f71d72fb2224046c068a366a3b244f2f5d31614033f71f",
        "url": "https://www.meetup.com/de-DE/rust-wurzburg-meetup-group/events/283609518/"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T18:02:22.015382001+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:22.015382001+02:00",
        "modi_user": "api",
        "path": "/de-DE/Rust-Community-Stuttgart/events/283586572/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "b725a059bfd2a0785fa55cbd2f69174e07815ec150f6a5206e84027ca2e83d89",
        "url": "https://www.meetup.com/de-DE/Rust-Community-Stuttgart/events/283586572/"
    },
    {
        "auto_descr": "A game jam from 2022-02-25 to 2022-03-14 hosted by bevy. Welcome to the first official Bevy Jam! In this week long event, your goal is to make a game in Bevy Engine , the free and open-source game engine bui...",
        "crea_time": "2024-08-29T18:02:23.672344432+02:00",
        "crea_user": "api",
        "host": "itch.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:23.672344432+02:00",
        "modi_user": "api",
        "path": "/jam/bevy-jam-1",
        "scheme": "https",
        "title": "Bevy Jam #1 - itch.io",
        "uri_uuid": "710a2893ccfba809785cd5e2fb4cd3504854b8d2fabcf9039a3ffc3a42e11c5b",
        "url": "https://itch.io/jam/bevy-jam-1"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T18:02:24.856937070+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:24.856937070+02:00",
        "modi_user": "api",
        "path": "/de-DE/maibornwolff-software-engineering-netzwerk/events/283379985/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "c068f247a9e14137163249f6fd5a62eb247e7432efa1d27936d95c008d886b8a",
        "url": "https://www.meetup.com/de-DE/maibornwolff-software-engineering-netzwerk/events/283379985/"
    },
    {
        "auto_descr": "Spring Store",
        "crea_time": "2024-08-29T18:02:25.310860995+02:00",
        "crea_user": "api",
        "host": "merch.bevyengine.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:25.310860995+02:00",
        "modi_user": "api",
        "path": "/listing/bavy-meme",
        "scheme": "https",
        "title": "Bevy Merch",
        "uri_uuid": "6618f06fec8f66309dd6e96807a603858314d132054e56847f685608180ca7fd",
        "url": "https://merch.bevyengine.org/listing/bavy-meme?product=377"
    },
    {
        "auto_descr": "The Roguelike Toolkit (RLTK), implemented for Rust. - amethyst/bracket-lib",
        "crea_time": "2024-08-29T18:02:26.405668310+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:26.405668310+02:00",
        "modi_user": "api",
        "path": "/amethyst/bracket-lib",
        "scheme": "https",
        "title": "GitHub - amethyst/bracket-lib: The Roguelike Toolkit (RLTK), implemented for Rust.",
        "uri_uuid": "5a9af771807bccb161e099d7e3a7de56dcf0651bf7e9c8e61de74583b7c55c8a",
        "url": "https://github.com/amethyst/bracket-lib"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:27.140887773+02:00",
        "crea_user": "api",
        "host": "prof.bht-berlin.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:27.140887773+02:00",
        "modi_user": "api",
        "path": "/fileadmin/prof/cforler/abschlussarbeiten.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b126fd4f76d30c3621f9cf51db676778f8f69196c4d37f0fdb43ba0b1b028e9e",
        "url": "https://prof.bht-berlin.de/fileadmin/prof/cforler/abschlussarbeiten.html"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T18:02:27.382670539+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:27.382670539+02:00",
        "modi_user": "api",
        "path": "/2022/02/15/Rust-Survey-2021.html",
        "scheme": "https",
        "title": "Rust Survey 2021 Results | Rust Blog",
        "uri_uuid": "28101b7b6879ebb13d146e2f5fc33f399e5e7b318230ab61c089929146f01585",
        "url": "https://blog.rust-lang.org/2022/02/15/Rust-Survey-2021.html"
    },
    {
        "auto_descr": "julia-set renderer. Contribute to cocomundo/julia-set-renderer development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:27.605349127+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:27.605349127+02:00",
        "modi_user": "api",
        "path": "/cocomundo/julia-set-renderer",
        "scheme": "https",
        "title": "GitHub - cocomundo/julia-set-renderer: julia-set renderer",
        "uri_uuid": "5927724b9bcc2893b79edf6a0df184f7ad6aca28cebe3e1e56afa3441c479623",
        "url": "https://github.com/cocomundo/julia-set-renderer"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:28.445185316+02:00",
        "crea_user": "api",
        "host": "fosdem.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:28.445185316+02:00",
        "modi_user": "api",
        "path": "/2022/",
        "scheme": "https",
        "title": "FOSDEM 2022 - Home",
        "uri_uuid": "4989fcd9cc09b48cb55c0f1f0cd1c14ecde5560e385b13019d78b42045fd5199",
        "url": "https://fosdem.org/2022/"
    },
    {
        "auto_descr": "Berlin based technology consultancy specialising in the Rust programming language. We offer development, implementation, training and long-term support.",
        "crea_time": "2024-08-29T18:02:28.729038763+02:00",
        "crea_user": "api",
        "host": "ferrous-systems.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:28.729038763+02:00",
        "modi_user": "api",
        "path": "/blog/mindsets-and-expectations/",
        "scheme": "https",
        "title": "\n        Learning Rust: Mindsets and Expectations  - Ferrous Systems\n    ",
        "uri_uuid": "addfb5f9d6d3a0db1ab2429dfd45eb69fd955d2b210c89410d3c668a3293df43",
        "url": "https://ferrous-systems.com/blog/mindsets-and-expectations/"
    },
    {
        "auto_descr": "Come journey with us into the weird, wonderful, and wily world of Rust.",
        "crea_time": "2024-08-29T18:02:29.713973384+02:00",
        "crea_user": "api",
        "host": "rustacean-station.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:29.713973384+02:00",
        "modi_user": "api",
        "path": "/episode/056-zeeshan-ali/",
        "scheme": "https",
        "title": "zbus with Zeeshan Ali :: Rustacean Station",
        "uri_uuid": "cffede6bb6c36de806e0d73b78dd944affd20c3dd20e2b3db2d466207d0d03b7",
        "url": "https://rustacean-station.org/episode/056-zeeshan-ali/"
    },
    {
        "auto_descr": "Start rust project on the right foot with less than minute with cargo-generate and this template! - xoac/opinionated-rust-template",
        "crea_time": "2024-08-29T18:02:29.843612101+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:29.843612101+02:00",
        "modi_user": "api",
        "path": "/xoac/opinionated-rust-template",
        "scheme": "https",
        "title": "GitHub - xoac/opinionated-rust-template: Start rust project on the right foot with less than minute with cargo-generate and this template!",
        "uri_uuid": "46895d5767474b76f1d93d68d12177ead471dc81ed6297ff76959cab1f11bbd4",
        "url": "https://github.com/xoac/opinionated-rust-template"
    },
    {
        "auto_descr": "Find unused dependencies in Cargo.toml. Contribute to est31/cargo-udeps development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:30.679429604+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:30.679429604+02:00",
        "modi_user": "api",
        "path": "/est31/cargo-udeps",
        "scheme": "https",
        "title": "GitHub - est31/cargo-udeps: Find unused dependencies in Cargo.toml",
        "uri_uuid": "3627187c8c4fb17fae882ab219f40fd7aa3b2e1f6a92adcd8db8c13c98aca5f7",
        "url": "https://github.com/est31/cargo-udeps"
    },
    {
        "auto_descr": "🤖 Just a command runner. Contribute to casey/just development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:31.398858469+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:31.398858469+02:00",
        "modi_user": "api",
        "path": "/casey/just",
        "scheme": "https",
        "title": "GitHub - casey/just: 🤖 Just a command runner",
        "uri_uuid": "0be7a49243a4b1562089fc8fb03e847a76270dd9c96e7f90747ceb43f68e829e",
        "url": "https://github.com/casey/just"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:32.551020062+02:00",
        "crea_user": "api",
        "host": "git-scm.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:32.551020062+02:00",
        "modi_user": "api",
        "path": "/book/en/v2/Customizing-Git-Git-Hooks",
        "scheme": "https",
        "title": "Git - Git Hooks",
        "uri_uuid": "270bcd6a90136b24ce90cf3fdcface03c57da7829c173499ff59d329c3c1f6f3",
        "url": "https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:32.733389933+02:00",
        "crea_user": "api",
        "host": "pre-commit.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:32.733389933+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "pre-commit",
        "uri_uuid": "fdcd2b5be2c87a05006cd90006048ac30b7397eb2c5a55c19763668cefd681ac",
        "url": "https://pre-commit.com/"
    },
    {
        "auto_descr": "Rust D-Bus crate. Repository moved to Github",
        "crea_time": "2024-08-29T18:02:33.550784023+02:00",
        "crea_user": "api",
        "host": "gitlab.freedesktop.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:33.550784023+02:00",
        "modi_user": "api",
        "path": "/dbus/zbus/-/blob/main/CONTRIBUTING.md",
        "scheme": "https",
        "title": "Files · main · dbus / zbus · GitLab",
        "uri_uuid": "b20b9bd7be85890b5c6030e104972483f50872aa7c547aae000b98d026771457",
        "url": "https://gitlab.freedesktop.org/dbus/zbus/-/blob/main/CONTRIBUTING.md#running-the-test-suite"
    },
    {
        "auto_descr": "Generate README.md from docstrings. Contribute to webern/cargo-readme development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:35.695294878+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:35.695294878+02:00",
        "modi_user": "api",
        "path": "/livioribeiro/cargo-readme",
        "scheme": "https",
        "title": "GitHub - webern/cargo-readme: Generate README.md from docstrings",
        "uri_uuid": "f1b7b73383608c309a5417a9de7c3d5ef07d1cf54da5ae9c1ff7486c9500fc65",
        "url": "https://github.com/livioribeiro/cargo-readme"
    },
    {
        "auto_descr": "qCrop Reference Manual",
        "crea_time": "2024-08-29T18:02:36.702090001+02:00",
        "crea_user": "api",
        "host": "doc.qcrop.cloud",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:36.702090001+02:00",
        "modi_user": "api",
        "path": "/book/how_to/operators/vector_pointer.html",
        "scheme": "https",
        "title": "The \"Vector Pointer\" - The qCrop Book",
        "uri_uuid": "17b9f743d5d7c315c20084bab4b4f7c1fdb4f85d9822d9676defbb533ab399f0",
        "url": "https://doc.qcrop.cloud/book/how_to/operators/vector_pointer.html"
    },
    {
        "auto_descr": "A language-agnostic \"shebang interpreter\" that enables you to write scripts in compiled languages. - igor-petruk/scriptisto",
        "crea_time": "2024-08-29T18:02:36.916218901+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:36.916218901+02:00",
        "modi_user": "api",
        "path": "/igor-petruk/scriptisto",
        "scheme": "https",
        "title": "GitHub - igor-petruk/scriptisto: A language-agnostic \"shebang interpreter\" that enables you to write scripts in compiled languages.",
        "uri_uuid": "65db7ed283f822bc91a87eb6967734877e5cb3dd6dcda5f61479c8777620fcea",
        "url": "https://github.com/igor-petruk/scriptisto"
    },
    {
        "auto_descr": "Tutorial and reference on the Rhai scripting engine and language.",
        "crea_time": "2024-08-29T18:02:37.773972503+02:00",
        "crea_user": "api",
        "host": "rhai.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:37.773972503+02:00",
        "modi_user": "api",
        "path": "/book/about/index.html",
        "scheme": "https",
        "title": "Introduction - Rhai - Embedded Scripting for Rust",
        "uri_uuid": "a4ac7dfb94b0512c3e0dfe41c4aedf102fcd2b7df8c21c79c2a02af20e0878c5",
        "url": "https://rhai.rs/book/about/index.html"
    },
    {
        "auto_descr": "Cargo Subcommand. Contribute to reitermarkus/cargo-eval development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:38.104213292+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:38.104213292+02:00",
        "modi_user": "api",
        "path": "/reitermarkus/cargo-eval",
        "scheme": "https",
        "title": "GitHub - reitermarkus/cargo-eval: Cargo Subcommand",
        "uri_uuid": "d21e0540afb7645e38463d5548af8136b940333a6aaf4ac8cd45695d77e0716a",
        "url": "https://github.com/reitermarkus/cargo-eval"
    },
    {
        "auto_descr": "Contribute to evcxr/evcxr development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:38.988693055+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:38.988693055+02:00",
        "modi_user": "api",
        "path": "/google/evcxr",
        "scheme": "https",
        "title": "GitHub - evcxr/evcxr",
        "uri_uuid": "963837a1e955210216f493cd8243dce5523e770bb11bf31b7f85364b5ab8edbe",
        "url": "https://github.com/google/evcxr"
    },
    {
        "auto_descr": "Contribute to lily-mara/rustconf-2021 development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:39.892428864+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:39.892428864+02:00",
        "modi_user": "api",
        "path": "/lily-mara/rustconf-2021/blob/main/public/images/all.png",
        "scheme": "https",
        "title": "rustconf-2021/public/images/all.png at main · lily-mara/rustconf-2021 · GitHub",
        "uri_uuid": "538536f0f5413c61231892c9ccf440a935bbc681263a02ac702dddbaf4d13a4c",
        "url": "https://github.com/lily-mara/rustconf-2021/blob/main/public/images/all.png"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:40.707153865+02:00",
        "crea_user": "api",
        "host": "www.harmonica.uk",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:40.707153865+02:00",
        "modi_user": "api",
        "path": "/articles/free-tab-transposing-tool",
        "scheme": "https",
        "title": "Free Tab Transposing Tool | HarmonicaUK",
        "uri_uuid": "9a2bdd2819bdb45c68713671fc00b04260fda96a643e0dc122292121167c5010",
        "url": "https://www.harmonica.uk/articles/free-tab-transposing-tool"
    },
    {
        "auto_descr": "A specification for adding human and machine readable meaning to commit messages",
        "crea_time": "2024-08-29T18:02:42.817297404+02:00",
        "crea_user": "api",
        "host": "www.conventionalcommits.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:42.817297404+02:00",
        "modi_user": "api",
        "path": "/en/v1.0.0/",
        "scheme": "https",
        "title": "Conventional Commits",
        "uri_uuid": "063b6cf13289e8a52c13568f75ce88cd8b4a165659c9c2d4d9004054a16ecb16",
        "url": "https://www.conventionalcommits.org/en/v1.0.0/"
    },
    {
        "auto_descr": "A catalogue of Rust design patterns, anti-patterns and idioms",
        "crea_time": "2024-08-29T18:02:43.020826053+02:00",
        "crea_user": "api",
        "host": "rust-unofficial.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:43.020826053+02:00",
        "modi_user": "api",
        "path": "/patterns/anti_patterns/index.html",
        "scheme": "https",
        "title": "Anti-patterns - Rust Design Patterns",
        "uri_uuid": "6ab48b720a6ed86f4d321ec9a89f5339a5cec72296078e974bad2076f09a3010",
        "url": "https://rust-unofficial.github.io/patterns/anti_patterns/index.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:02:43.259355241+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:43.259355241+02:00",
        "modi_user": "api",
        "path": "/from-perl-to-rust/overview.html",
        "scheme": "https",
        "title": "Overview - From Perl to Rust",
        "uri_uuid": "6c32c0101bc0e3e359df7f3d699e54c994f3edb4d64b958eb5e659bf775a3545",
        "url": "https://oylenshpeegul.gitlab.io/from-perl-to-rust/overview.html"
    },
    {
        "auto_descr": "How Chinese characters triumphed over the QWERTY keyboard and laid the foundation for China's information technology successes today.Chinese writing is chara...",
        "crea_time": "2024-08-29T18:02:43.897957331+02:00",
        "crea_user": "api",
        "host": "mitpress.mit.edu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:43.897957331+02:00",
        "modi_user": "api",
        "path": "/books/chinese-typewriter",
        "scheme": "https",
        "title": "The Chinese Typewriter",
        "uri_uuid": "af7db11ad8853906f1d9edf69b8d0e09d582c2e300f04ab8cbf236433de787db",
        "url": "https://mitpress.mit.edu/books/chinese-typewriter"
    },
    {
        "auto_descr": "Problems 81, 82, and 83 at Project Euler all ask us to find the minimal path sum through a matrix. I cobbled together bespoke solutions for problems 81 and 82, but I found problem 83 required a little more discipline. I decided to employ a priority queue to move through the matrix. When I was done, I realized I could use the same strategy for problems 81 and 82 with only slight changes.",
        "crea_time": "2024-08-29T18:02:46.521163324+02:00",
        "crea_user": "api",
        "host": "oylenshpeegul.gitlab.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:46.521163324+02:00",
        "modi_user": "api",
        "path": "/blog/posts/20211014/",
        "scheme": "https",
        "title": "\n  Minimal path sums · oylenshpeegul\n",
        "uri_uuid": "56b00b772d37e1ac4619e6988cde06717411aaad3324dbebbe73b29a25233e81",
        "url": "https://oylenshpeegul.gitlab.io/blog/posts/20211014/"
    },
    {
        "auto_descr": "A crate with a few single-typed arenas that work exclusively with indexes. The indexes are sized with the arena. This can reduce memory footprint when changing pointers to indices e.g. on 64-bit systems.",
        "crea_time": "2024-08-29T18:02:47.436166870+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:47.436166870+02:00",
        "modi_user": "api",
        "path": "/compact_arena",
        "scheme": "https",
        "title": "compact_arena - Rust",
        "uri_uuid": "e317725a8a31d336d0c065bc43b07988ea1da1ae09820a40757d586861cc7a97",
        "url": "https://docs.rs/compact_arena"
    },
    {
        "auto_descr": "A simple no_std Rust driver for the 74HC4067. Contribute to barafael/cd74hc4067-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:47.591852443+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:47.591852443+02:00",
        "modi_user": "api",
        "path": "/barafael/cd74hc4067-rs/blob/main/cd74hc4067/coverage.pdf",
        "scheme": "https",
        "title": "cd74hc4067-rs/cd74hc4067/coverage.pdf at main · barafael/cd74hc4067-rs · GitHub",
        "uri_uuid": "521780d1427a87462cd38d024787f938cafdfa0eb2102355225c6a335ca42708",
        "url": "https://github.com/barafael/cd74hc4067-rs/blob/main/cd74hc4067/coverage.pdf"
    },
    {
        "auto_descr": "The pointer-sized unsigned integer type.",
        "crea_time": "2024-08-29T18:02:48.458536364+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:48.458536364+02:00",
        "modi_user": "api",
        "path": "/std/primitive.usize.html",
        "scheme": "https",
        "title": "usize - Rust",
        "uri_uuid": "1ae29748401f6e282d4cdc07780b9069cfd8e729650cc506c79037940e20ed27",
        "url": "https://doc.rust-lang.org/std/primitive.usize.html#method.from_le_bytes"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:50.007244085+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:50.007244085+02:00",
        "modi_user": "api",
        "path": "/wiki/Peano_axioms",
        "scheme": "https",
        "title": "Peano axioms - Wikipedia",
        "uri_uuid": "bf4ef721535c840df204aab417eecdb83bac11e9550e523a52552771d48af59b",
        "url": "https://en.wikipedia.org/wiki/Peano_axioms"
    },
    {
        "auto_descr": "Efficient, deferred formatting for logging on embedded systems - knurling-rs/defmt",
        "crea_time": "2024-08-29T18:02:50.492677191+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:50.492677191+02:00",
        "modi_user": "api",
        "path": "/knurling-rs/defmt",
        "scheme": "https",
        "title": "GitHub - knurling-rs/defmt: Efficient, deferred formatting for logging on embedded systems",
        "uri_uuid": "9ea0b6435b8e2961eae8361a0e7c489539f45e05aa074b1a8f21c3e783f1396c",
        "url": "https://github.com/knurling-rs/defmt"
    },
    {
        "auto_descr": "What are snapshot tests",
        "crea_time": "2024-08-29T18:02:51.580010266+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:51.580010266+02:00",
        "modi_user": "api",
        "path": "/insta/latest/insta/",
        "scheme": "https",
        "title": "insta - Rust",
        "uri_uuid": "8664dc397ec4291ae3f6659c729ab6e74e83de37658367ee7238a5dfd270b2f8",
        "url": "https://docs.rs/insta/latest/insta/"
    },
    {
        "auto_descr": "A full featured, fast Command Line Argument Parser for Rust - clap-rs/clap",
        "crea_time": "2024-08-29T18:02:51.777423118+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:51.777423118+02:00",
        "modi_user": "api",
        "path": "/clap-rs/clap",
        "scheme": "https",
        "title": "GitHub - clap-rs/clap: A full featured, fast Command Line Argument Parser for Rust",
        "uri_uuid": "699e44405bc6c6663f233364ca8a0bacace8844b32afecd7b27b03b398abc364",
        "url": "https://github.com/clap-rs/clap"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:52.581713174+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:52.581713174+02:00",
        "modi_user": "api",
        "path": "/crates/nom",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "c1834a427f0f6237b7f5da058214831a8f421e0087a4d3013b29ae80756490cb",
        "url": "https://crates.io/crates/nom"
    },
    {
        "auto_descr": "Fuzzy Finder in rust! Contribute to lotabout/skim development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:52.815343232+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:52.815343232+02:00",
        "modi_user": "api",
        "path": "/lotabout/skim",
        "scheme": "https",
        "title": "GitHub - lotabout/skim: Fuzzy Finder in rust!",
        "uri_uuid": "0960a29a4ef3749e2c91d2c1befa1db6c1244360a3f59dce51d267896397d64a",
        "url": "https://github.com/lotabout/skim"
    },
    {
        "auto_descr": ":cherry_blossom: A command-line fuzzy finder. Contribute to junegunn/fzf development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:53.661890771+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:53.661890771+02:00",
        "modi_user": "api",
        "path": "/junegunn/fzf",
        "scheme": "https",
        "title": "GitHub - junegunn/fzf: :cherry_blossom: A command-line fuzzy finder",
        "uri_uuid": "239b43811f2ff79d4b7524c5d559aa20b123a6a87a9778d7f98b282964d0ed2e",
        "url": "https://github.com/junegunn/fzf"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:55.567843296+02:00",
        "crea_user": "api",
        "host": "www.rustnote.com",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:55.567843296+02:00",
        "modi_user": "api",
        "path": "/blog/format_strings.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e7b310224cbc53eb65b9036584cba0d72248231bd4ad4f4a2b06709759a543e2",
        "url": "https://www.rustnote.com/blog/format_strings.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:55.837553590+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:55.837553590+02:00",
        "modi_user": "api",
        "path": "/atom.xml",
        "scheme": "https",
        "title": "This Week in Rust",
        "uri_uuid": "bc2513fe7e13e911019f9b40bfd162dbecc6f62e4702e8f0f3858b80cc8cc5e2",
        "url": "https://this-week-in-rust.org/atom.xml"
    },
    {
        "auto_descr": "Bumping version number to 0.2.1\nIntroducing integration tests in tests/ subdirectory\nIntroducing high-level functions:\n\ncrate::convert::to_2bit\ncrate::convert::fasta::to_fasta\n\nfix #2",
        "crea_time": "2024-08-29T18:02:56.324675209+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:56.324675209+02:00",
        "modi_user": "api",
        "path": "/jbethune/rust-twobit/pull/3/files",
        "scheme": "https",
        "title": "Add support for conversion to and from FASTA by jbethune · Pull Request #3 · jbethune/rust-twobit · GitHub",
        "uri_uuid": "27b6090a840b8feca854a0358ad68935190f9a63321a8838ba7c3616363d77a1",
        "url": "https://github.com/jbethune/rust-twobit/pull/3/files#diff-94cabbacd98282c79d4f9fc22db73be63f6723a350266579bb963e58a5d9038fR73"
    },
    {
        "auto_descr": "Bumping version number to 0.2.1\nIntroducing integration tests in tests/ subdirectory\nIntroducing high-level functions:\n\ncrate::convert::to_2bit\ncrate::convert::fasta::to_fasta\n\nfix #2",
        "crea_time": "2024-08-29T18:02:57.510441666+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:57.510441666+02:00",
        "modi_user": "api",
        "path": "/jbethune/rust-twobit/pull/3/files",
        "scheme": "https",
        "title": "Add support for conversion to and from FASTA by jbethune · Pull Request #3 · jbethune/rust-twobit · GitHub",
        "uri_uuid": "143b81a5825f91a6b702d9e6902ef6f5b7e3742fc2cd4349e4cb771424df5fc2",
        "url": "https://github.com/jbethune/rust-twobit/pull/3/files#diff-94cabbacd98282c79d4f9fc22db73be63f6723a350266579bb963e58a5d9038fR106"
    },
    {
        "auto_descr": "Bumping version number to 0.2.1\nIntroducing integration tests in tests/ subdirectory\nIntroducing high-level functions:\n\ncrate::convert::to_2bit\ncrate::convert::fasta::to_fasta\n\nfix #2",
        "crea_time": "2024-08-29T18:02:57.891893443+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:57.891893443+02:00",
        "modi_user": "api",
        "path": "/jbethune/rust-twobit/pull/3/files",
        "scheme": "https",
        "title": "Add support for conversion to and from FASTA by jbethune · Pull Request #3 · jbethune/rust-twobit · GitHub",
        "uri_uuid": "13e27054171903254ae2f52b912796f18f363dd6b7faff8d465c95ac81a933cc",
        "url": "https://github.com/jbethune/rust-twobit/pull/3/files#diff-b1a35a68f14e696205874893c07fd24fdb88882b47c23cc0e0c80a30c7d53759L312"
    },
    {
        "auto_descr": "Breaking your Rust code for fun and profit. Contribute to llogiq/mutagen development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:02:58.294220472+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:58.294220472+02:00",
        "modi_user": "api",
        "path": "/llogiq/mutagen",
        "scheme": "https",
        "title": "GitHub - llogiq/mutagen: Breaking your Rust code for fun and profit",
        "uri_uuid": "25e012ec080c9c6a6ca29341e7109bbb10941876ee0e4bd4284c8fc43adf21b7",
        "url": "https://github.com/llogiq/mutagen"
    },
    {
        "auto_descr": "Updates: 12th of September 2021: I’m writing a book on DNA! If you want to become a beta reader, or have suggestions, I’d love to hear from you!\n8th of January 2021: This article has been revised and updated, scientifically and in terms of dead links. Revision made by Tomás Simões (@putadagravidade / tomasprsimoes@gmail.com). Feel free to contact me if I made a mistake.\n25th of August 2017: This page has led to a two-hour presentation called DNA: The code of Life as presented at SHA 2017.",
        "crea_time": "2024-08-29T18:02:59.109569298+02:00",
        "crea_user": "api",
        "host": "berthub.eu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:59.109569298+02:00",
        "modi_user": "api",
        "path": "/articles/posts/amazing-dna/",
        "scheme": "https",
        "title": "DNA seen through the eyes of a coder (or,  If you are a hammer, everything looks like a nail) - Bert Hubert's writings",
        "uri_uuid": "deeb9c82d2a92865311c48c3804521d5ce13123135ac206ee6d84c05ae36a896",
        "url": "https://berthub.eu/articles/posts/amazing-dna/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:02:59.398859099+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:02:59.398859099+02:00",
        "modi_user": "api",
        "path": "/results",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "734c78d080ff53def50864583c3aa97840341e6dc0387bbb51b8566458efd124",
        "url": "https://www.youtube.com/results?search_query=sha2017+dna"
    },
    {
        "auto_descr": "https://media.ccc.de/v/SHA2017-99942-sha2017_more_greatest_hitsPart 2 of the presentation \"DNA: The Code of Life\" at SHA2017. This recording was made by Bart...",
        "crea_time": "2024-08-29T18:03:00.027474106+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:00.027474106+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "DNA: More Greatest Hits (SHA2017) - YouTube",
        "uri_uuid": "8f535edba1dbec8d91b609a4a8bd7a3183018efe834f6a60b276dd0c41b58d74",
        "url": "https://www.youtube.com/watch?v=RH9yJlli8uQ"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:00.663150491+02:00",
        "crea_user": "api",
        "host": "seebass22.itch.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:00.663150491+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Seebass22 - itch.io",
        "uri_uuid": "4667acd855d68fe8d9b592327bb7ff4500d086d00aef1994557032c4e714f831",
        "url": "https://seebass22.itch.io/"
    },
    {
        "auto_descr": "A Text User Interface library for the Rust programming language - gyscos/cursive",
        "crea_time": "2024-08-29T18:03:02.300709843+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:02.300709843+02:00",
        "modi_user": "api",
        "path": "/gyscos/cursive",
        "scheme": "https",
        "title": "GitHub - gyscos/cursive: A Text User Interface library for the Rust programming language",
        "uri_uuid": "eb0a1ef707c980ca29ee6e7abc7c218887a73fc97a9d010dde456e9bcaf92a53",
        "url": "https://github.com/gyscos/cursive"
    },
    {
        "auto_descr": "Simplified and community-driven man pages",
        "crea_time": "2024-08-29T18:03:03.109114374+02:00",
        "crea_user": "api",
        "host": "tldr.sh",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:03.109114374+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "tldr pages",
        "uri_uuid": "05de1381832f70c5a25af4634c854b23d2a3078efbc423fb821dec7765ca6dec",
        "url": "https://tldr.sh/"
    },
    {
        "auto_descr": "A very fast implementation of tldr in Rust. Contribute to dbrgn/tealdeer development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:03.547564734+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:03.547564734+02:00",
        "modi_user": "api",
        "path": "/dbrgn/tealdeer",
        "scheme": "https",
        "title": "GitHub - dbrgn/tealdeer: A very fast implementation of tldr in Rust.",
        "uri_uuid": "37ea1cded757b0e6eda994a35b5b45c3c223ef313d2357396e4296b4ca0c2ce3",
        "url": "https://github.com/dbrgn/tealdeer"
    },
    {
        "auto_descr": "tldr is a simplified and community-driven man pages - luthfianto/rust-tldr",
        "crea_time": "2024-08-29T18:03:04.266868082+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:04.266868082+02:00",
        "modi_user": "api",
        "path": "/luthfianto/rust-tldr",
        "scheme": "https",
        "title": "GitHub - luthfianto/rust-tldr: tldr is a simplified and community-driven man pages",
        "uri_uuid": "69a622ee8d18b253514dd1ca1d7a50fe7afb8110c67666ce82fa04e227f58f4f",
        "url": "https://github.com/luthfianto/rust-tldr"
    },
    {
        "auto_descr": "GitLab.com",
        "crea_time": "2024-08-29T18:03:05.045253668+02:00",
        "crea_user": "api",
        "host": "gitlab.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:05.045253668+02:00",
        "modi_user": "api",
        "path": "/DrRuhe/ttse",
        "scheme": "https",
        "title": "Jakob / ttse · GitLab",
        "uri_uuid": "e406179fdf1fa035eb7321912b04b6b152752faeb141131a3599bf161662279c",
        "url": "https://gitlab.com/DrRuhe/ttse"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:05.781350871+02:00",
        "crea_user": "api",
        "host": "www.scylladb.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:05.781350871+02:00",
        "modi_user": "api",
        "path": "/2022/01/12/async-rust-in-practice-performance-pitfalls-profiling/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "262d584057a3b19a28faec434173c60d67d8b10f0911f9da4db4432a7ec3dc8e",
        "url": "https://www.scylladb.com/2022/01/12/async-rust-in-practice-performance-pitfalls-profiling/"
    },
    {
        "auto_descr": "tokio-console CLI",
        "crea_time": "2024-08-29T18:03:05.956024581+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:05.956024581+02:00",
        "modi_user": "api",
        "path": "/tokio-console/0.1.0/tokio_console/",
        "scheme": "https",
        "title": "tokio_console - Rust",
        "uri_uuid": "603ff00780cd609bc06b784861590021f42aac9d32da58f288e4fce5094a64e7",
        "url": "https://docs.rs/tokio-console/0.1.0/tokio_console/"
    },
    {
        "auto_descr": "Tokio is a runtime for writing reliable asynchronous applications with Rust. It provides async I/O, networking, scheduling, timers, and more.",
        "crea_time": "2024-08-29T18:03:06.161514343+02:00",
        "crea_user": "api",
        "host": "tokio.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:06.161514343+02:00",
        "modi_user": "api",
        "path": "/blog/2021-12-announcing-tokio-console",
        "scheme": "https",
        "title": "Announcing Tokio Console 0.1 | Tokio - An asynchronous Rust runtime",
        "uri_uuid": "b2aa49d6f22499e132d2808d134b7dff54348c60f5d342307d86fb9125f77a8e",
        "url": "https://tokio.rs/blog/2021-12-announcing-tokio-console"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:07.483082911+02:00",
        "crea_user": "api",
        "host": "dystroy.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:07.483082911+02:00",
        "modi_user": "api",
        "path": "/blog/how-not-to-learn-rust/",
        "scheme": "https",
        "title": "How not to learn Rust",
        "uri_uuid": "6785101a0c8c38f4292de1b8ab5cbedecd0a9bf3eb1cb930bf522e91b8aef3a0",
        "url": "https://dystroy.org/blog/how-not-to-learn-rust/"
    },
    {
        "auto_descr": "Rust audio playback library. Contribute to RustAudio/rodio development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:07.738192499+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:07.738192499+02:00",
        "modi_user": "api",
        "path": "/RustAudio/rodio",
        "scheme": "https",
        "title": "GitHub - RustAudio/rodio: Rust audio playback library",
        "uri_uuid": "d4874a52b0a51dfa5f3d871fed1364ef7e624886244138443eb14f3a8c5dd2fc",
        "url": "https://github.com/RustAudio/rodio"
    },
    {
        "auto_descr": "Mold: A Modern Linker 🦠. Contribute to rui314/mold development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:08.505503757+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:08.505503757+02:00",
        "modi_user": "api",
        "path": "/rui314/mold",
        "scheme": "https",
        "title": "GitHub - rui314/mold: Mold: A Modern Linker 🦠",
        "uri_uuid": "11dad288e126380e47270999ec5a910d90bd34bab9218b3d4aca5a2cefd189e3",
        "url": "https://github.com/rui314/mold"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:09.274363031+02:00",
        "crea_user": "api",
        "host": "albiononline.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:09.274363031+02:00",
        "modi_user": "api",
        "path": "/de/home",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "497db41c415513cff053c0dcee939871cec3be6cd3e3a143f801df64cf41296a",
        "url": "https://albiononline.com/de/home"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:03:09.407676470+02:00",
        "crea_user": "api",
        "host": "berlinminijam.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:09.407676470+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "http",
        "title": "Berlin Mini Jam",
        "uri_uuid": "d65dc0ea38eab7c121e39506fa9e65bb6d0ff0b9b465b99af5bbbf4f4a0054b5",
        "url": "http://berlinminijam.de/"
    },
    {
        "auto_descr": "Check out the Berlin Mini Jam community on Discord – hang out with 660 other members and enjoy free voice and text chat.",
        "crea_time": "2024-08-29T18:03:09.770806067+02:00",
        "crea_user": "api",
        "host": "discord.gg",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:09.770806067+02:00",
        "modi_user": "api",
        "path": "/3bhN2DDjGm",
        "scheme": "https",
        "title": "Berlin Mini Jam",
        "uri_uuid": "7c10be90fdc60dcbc93dc40f2ea19aed61895c64540e649c505c43de893e5866",
        "url": "https://discord.gg/3bhN2DDjGm"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:11.271588946+02:00",
        "crea_user": "api",
        "host": "itch.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:11.271588946+02:00",
        "modi_user": "api",
        "path": "/jam/berlin-mini-game-jam-2021/entries",
        "scheme": "https",
        "title": "Submissions to Berlin Mini Game Jam 2021 - itch.io",
        "uri_uuid": "13c6831aa54f722210d65a7def1128c6050d9c9be20543b78ac2609f277f4941",
        "url": "https://itch.io/jam/berlin-mini-game-jam-2021/entries"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:12.161214136+02:00",
        "crea_user": "api",
        "host": "www.swift.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:12.161214136+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e2e4776f3799fdf2c9e067fb6d9e15457c8eed479b7c11713e3294dcd6f02ef6",
        "url": "https://www.swift.org/"
    },
    {
        "auto_descr": "The Elegant Parser",
        "crea_time": "2024-08-29T18:03:13.600981528+02:00",
        "crea_user": "api",
        "host": "pest.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:13.600981528+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "pest. The Elegant Parser",
        "uri_uuid": "d3f375fff0cd3c73ec1f2349d03403f47615ebb17e2b699263bfee8620509a44",
        "url": "https://pest.rs/"
    },
    {
        "auto_descr": "This past May, I started a new job working in Rust. I was somewhat skeptical of Rust for a while, but it turns out, it really is all it&rsquo;s cracked up to be. As a long-time C++ programmer, and C++ instructor, I am convinced that Rust is better than C++ in all of C++&rsquo;s application space, that for any new programming project where C++ would make sense as the programming language, Rust would make more sense.",
        "crea_time": "2024-08-29T18:03:13.892442510+02:00",
        "crea_user": "api",
        "host": "www.thecodedmessage.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:13.892442510+02:00",
        "modi_user": "api",
        "path": "/posts/hello-rust/",
        "scheme": "https",
        "title": "Sayonara, C++, and hello to Rust! :: The Coded Message",
        "uri_uuid": "676f1d1fde118a8ac01d53d081ed25eda61cf1501011265e7e84ad1adfe55a88",
        "url": "https://www.thecodedmessage.com/posts/hello-rust/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:03:14.390448995+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:14.390448995+02:00",
        "modi_user": "api",
        "path": "/book/ch14-03-cargo-workspaces.html",
        "scheme": "https",
        "title": "Cargo Workspaces - The Rust Programming Language",
        "uri_uuid": "7033953588aa2c1158d935b07422fd01440c93abc70572158ea0595806eba9d4",
        "url": "https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html"
    },
    {
        "auto_descr": "Official GitHub Organization of the EU Digital COVID Certificates (EUDCC) project, previously known as the EU Digital Green Certificates (DGC). - eu-digital-green-certificates",
        "crea_time": "2024-08-29T18:03:14.913606409+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:14.913606409+02:00",
        "modi_user": "api",
        "path": "/eu-digital-green-certificates",
        "scheme": "https",
        "title": "eu-digital-green-certificates · GitHub",
        "uri_uuid": "02bc9836973fc347e185d25d3a220ee111a67b696a6e45e5d149f56c207ef183",
        "url": "https://github.com/eu-digital-green-certificates"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:15.677750587+02:00",
        "crea_user": "api",
        "host": "ec.europa.eu",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:15.677750587+02:00",
        "modi_user": "api",
        "path": "/health/sites/default/files/ehealth/docs/digital-green-certificates_dt-specifications_en.pdf",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e7cab360cd714dfdd5a030c51941ab08c4d299ef552fd622c83106fad8467e41",
        "url": "https://ec.europa.eu/health/sites/default/files/ehealth/docs/digital-green-certificates_dt-specifications_en.pdf"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T18:03:17.072245599+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:17.072245599+02:00",
        "modi_user": "api",
        "path": "/Mob-Programming-on-Open-Source-Software/events/282403647/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "e385c3abe409ab7b53b8447d93edea806cbf34c06a7d315c6d6730bab3e16459",
        "url": "https://www.meetup.com/Mob-Programming-on-Open-Source-Software/events/282403647/"
    },
    {
        "auto_descr": "The entire moderation team resigns, effective immediately. This resignation is\ndone in protest of the Core Team placing themselves unaccountable to anyone but\nthemselves.\nAs a result of such struct...",
        "crea_time": "2024-08-29T18:03:18.808671259+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:18.808671259+02:00",
        "modi_user": "api",
        "path": "/rust-lang/team/pull/671",
        "scheme": "https",
        "title": "mod team resignation by BurntSushi · Pull Request #671 · rust-lang/team · GitHub",
        "uri_uuid": "addf78c97500fa43d319a4498c703eeda78dcd72458cfe0e9926b5b289649b46",
        "url": "https://github.com/rust-lang/team/pull/671"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:19.955406543+02:00",
        "crea_user": "api",
        "host": "danielkeep.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:19.955406543+02:00",
        "modi_user": "api",
        "path": "/tlborm/book/mbe-syn-source-analysis.html",
        "scheme": "https",
        "title": "Source Analysis",
        "uri_uuid": "29f5a2a55809a8436d69c19c605b2647e08ed82686aaaf27ca3f7030371e9356",
        "url": "https://danielkeep.github.io/tlborm/book/mbe-syn-source-analysis.html"
    },
    {
        "auto_descr": "This channel is a forum for me to be public about the technologies that I am learning and to share knowledge that I have with others.I am an African American...",
        "crea_time": "2024-08-29T18:03:20.200113614+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:20.200113614+02:00",
        "modi_user": "api",
        "path": "/c/CrazcalmsTechStack/videos",
        "scheme": "https",
        "title": "Crazcalm's Tech Stack - YouTube",
        "uri_uuid": "bb41ed5f2ee5d33b25eaab8a59e75b7ac8c86ecc2e4a64f2120517e86666edd3",
        "url": "https://www.youtube.com/c/CrazcalmsTechStack/videos"
    },
    {
        "auto_descr": "Slint, the declarative GUI toolkit for Rust, C++, JavaScript, and Python. Build elegant, modern, stylish, native GUIs for Embedded, Desktop, and Web. Complete your UI design through quick iterations using Live Preview. Tweak everything, like colors, animations, geometries, or text. and verify the changes instantly. Build a responsive UI from a single design. Target different screen resolution and sizes with flexible layouts. Enjoy flexibility that only a native application can provide: Access full operating system APIs, utilize all CPU and GPU cores, connect to any peripheral. Slint compiles your UI design to machine code. Achieve low footprint and minimal resource consumption. The Slint runtime fits in less than 300KiB RAM, features a reactive property system, and is built with Rust. Deliver a smooth user experience. Slint uses the optimal graphics rendering method: GPU accelerated, DMA2D, Framebuffer, or Linebuffer. Continue using your favourite IDE. Choose between our generic language server and VS Code extension: Enjoy code completion, live-preview, code navigation, diagnostics, and syntax highlighting.",
        "crea_time": "2024-08-29T18:03:20.596727639+02:00",
        "crea_user": "api",
        "host": "sixtyfps.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:20.596727639+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Slint |\n            Declarative GUI for Rust, C++, JavaScript & Python\n        ",
        "uri_uuid": "bea6af393e22ca97432410bcd8a11c2a40159cb53330d80aecc77326beed8295",
        "url": "https://sixtyfps.io/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:21.497439014+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:21.497439014+02:00",
        "modi_user": "api",
        "path": "/blog/2021/11/17/this-week-in-rust-417/",
        "scheme": "https",
        "title": "This Week in Rust 417  · This Week in Rust\n",
        "uri_uuid": "432eefa4238686a1a0aa3751b100d4dca00b770b002a4951140f133e3f2a37d6",
        "url": "https://this-week-in-rust.org/blog/2021/11/17/this-week-in-rust-417/"
    },
    {
        "auto_descr": "The Motivational PortionBased on recommendations from Kevin Nause, the VolksEEG project is considering using Rust as the embedded system programming language. So I've been off on a tear skimming books and e-books and watching videos at 2x to...",
        "crea_time": "2024-08-29T18:03:21.811287470+02:00",
        "crea_user": "api",
        "host": "www.embeddedrelated.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:21.811287470+02:00",
        "modi_user": "api",
        "path": "/showarticle/1432.php",
        "scheme": "https",
        "title": "Learning Rust For Embedded Systems - Steve Branam",
        "uri_uuid": "cde14296d3bbcf6fee7c8b9aed5dfab042144772ed18ddd4d829f37806a2bb7a",
        "url": "https://www.embeddedrelated.com/showarticle/1432.php"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:23.180099877+02:00",
        "crea_user": "api",
        "host": "kerkour.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:23.180099877+02:00",
        "modi_user": "api",
        "path": "/rust-crate-backdoor/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "9a5eca25d5b39574f2d64be0154e103539db382d5bf51d4e6deae98d82a4e15c",
        "url": "https://kerkour.com/rust-crate-backdoor/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:23.581749646+02:00",
        "crea_user": "api",
        "host": "blog.convex.dev",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:23.581749646+02:00",
        "modi_user": "api",
        "path": "/a-tale-of-three-codebases/",
        "scheme": "https",
        "title": "A Tale of Three Rust Codebases",
        "uri_uuid": "789fb41f6768a5d70b7501c5c740381f9c2558b490693900b627ae70fd4033cf",
        "url": "https://blog.convex.dev/a-tale-of-three-codebases/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:23.946125955+02:00",
        "crea_user": "api",
        "host": "dev.to",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:23.946125955+02:00",
        "modi_user": "api",
        "path": "/davidedelpapa/rust-gui-introduction-a-k-a-the-state-of-rust-gui-libraries-as-of-january-2021-40gl",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "a9148919a4855275ee0ed33b6558ee4f77bbcc4e2a83da7b4423f4d81dd377b8",
        "url": "https://dev.to/davidedelpapa/rust-gui-introduction-a-k-a-the-state-of-rust-gui-libraries-as-of-january-2021-40gl"
    },
    {
        "auto_descr": "Generate test data programmatically. Need fake data for application testing or anything else? Just use Synth.",
        "crea_time": "2024-08-29T18:03:25.636465995+02:00",
        "crea_user": "api",
        "host": "www.getsynth.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:25.636465995+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Synth",
        "uri_uuid": "a2514c0df52ab406c0b1b7536d96c33982df5dfe02b98b4f86e4af3c6969cb5d",
        "url": "https://www.getsynth.com/"
    },
    {
        "auto_descr": "Developed at the Georgia Institute of Technology, Rudra is a static analyzer able to report potential memory safety bugs in Rust programs. Rudra has been used to scan the entire Rust package registry ",
        "crea_time": "2024-08-29T18:03:26.553666552+02:00",
        "crea_user": "api",
        "host": "www.infoq.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:26.553666552+02:00",
        "modi_user": "api",
        "path": "/news/2021/11/rudra-rust-safety/",
        "scheme": "https",
        "title": "Static Analyzer Rudra Found over 200 Memory Safety Issues in Rust Crates - InfoQ",
        "uri_uuid": "fd53c4d71c9f4547d250cdbcf48c4fd88bef6ad4a82111ead7f44082418f4e3e",
        "url": "https://www.infoq.com/news/2021/11/rudra-rust-safety/"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T18:03:28.096605745+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:28.096605745+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-munich/events/280692352/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "1ec9e0a23077380b7ea6629410537a3f6c12fe2c4286c5d6a8dbbc279014508f",
        "url": "https://www.meetup.com/de-DE/rust-munich/events/280692352/"
    },
    {
        "auto_descr": "Du bist noch kein Meetup-Mitglied? Melde dich an, um Gruppen zu suchen, die Online- oder Präsenz-Events veranstalten, und Leute in deiner örtlichen Community zu treffen, die deine Interessen teilen.",
        "crea_time": "2024-08-29T18:03:28.885539079+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:28.885539079+02:00",
        "modi_user": "api",
        "path": "/de-DE/rust-noris/events/281829098/",
        "scheme": "https",
        "title": "Bei Meetup anmelden | Meetup",
        "uri_uuid": "160b00c73bb08f76c994a514779a826faf4ca2d040bce3ca6ed9b3c5bc99858a",
        "url": "https://www.meetup.com/de-DE/rust-noris/events/281829098/"
    },
    {
        "auto_descr": "Bash Autocomplete for gst-launch-1.0. Contribute to vikram2784/gst-completion development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:29.620828988+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:29.620828988+02:00",
        "modi_user": "api",
        "path": "/vikram2784/gst-completion",
        "scheme": "https",
        "title": "GitHub - vikram2784/gst-completion: Bash Autocomplete for gst-launch-1.0",
        "uri_uuid": "5ce0515cc355e743e2a4487b6f811d2e03128e4957f0f1a0c0ac94aa88e89b2e",
        "url": "https://github.com/vikram2784/gst-completion"
    },
    {
        "auto_descr": "15 new members, including ARM and Toyota, have joined the foundation supporting the Rust programming language",
        "crea_time": "2024-08-29T18:03:30.471042991+02:00",
        "crea_user": "api",
        "host": "www.eenewseurope.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:30.471042991+02:00",
        "modi_user": "api",
        "path": "/news/arm-joins-rust-foundation",
        "scheme": "https",
        "title": "ARM joins the Rust foundation ...",
        "uri_uuid": "5acaa70d6e57d4f7b8aac963b3d9a0c436f7fba29a2175dd43af1d1a8c43db6b",
        "url": "https://www.eenewseurope.com/news/arm-joins-rust-foundation"
    },
    {
        "auto_descr": "GitLab.com",
        "crea_time": "2024-08-29T18:03:35.272147545+02:00",
        "crea_user": "api",
        "host": "gitlab.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:35.272147545+02:00",
        "modi_user": "api",
        "path": "/ebert-hanke/retrofilter",
        "scheme": "https",
        "title": "Micha Ebert-Hanke / retrofilter · GitLab",
        "uri_uuid": "f2b9f7fe4fdfd5775668a073e0dfa8934440274004619094aabf8063034e86ce",
        "url": "https://gitlab.com/ebert-hanke/retrofilter"
    },
    {
        "auto_descr": "A browser interface to the Rust compiler to experiment with the language",
        "crea_time": "2024-08-29T18:03:35.892371826+02:00",
        "crea_user": "api",
        "host": "play.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:35.892371826+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Rust Playground",
        "uri_uuid": "686d70f34b98c768ea64ccb8224b6928072fe0a8161e6c2f5b8a19d95635116c",
        "url": "https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a3548aaafb1d027e4d7d66ec02b713f3"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:36.033856842+02:00",
        "crea_user": "api",
        "host": "app.element.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:36.033856842+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Element",
        "uri_uuid": "5575bc734c2925b5e786f9a1d948022f5c331bc02d845413cf167fa4ed45d074",
        "url": "https://app.element.io/#/room/#rust-embedded:matrix.org"
    },
    {
        "auto_descr": "Rust async runtime for educational purposes only. Contribute to zeenix/experiments development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:36.215333466+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:36.215333466+02:00",
        "modi_user": "api",
        "path": "/zeenix/zruntime",
        "scheme": "https",
        "title": "GitHub - zeenix/experiments: Rust async runtime for educational purposes only",
        "uri_uuid": "4a07ea023efd1fe5a61ffc63caffbf19b30877ef800af2e40b8c4f00bb07bf80",
        "url": "https://github.com/zeenix/zruntime"
    },
    {
        "auto_descr": "Contribute to barafael/Qu development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:37.134386656+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:37.134386656+02:00",
        "modi_user": "api",
        "path": "/barafael/Q",
        "scheme": "https",
        "title": "GitHub - barafael/Qu",
        "uri_uuid": "f98e9ad2f30f1fa8a28cacd850222b4cbaafbb24acbcf0eb65922cfa14b0a16c",
        "url": "https://github.com/barafael/Q"
    },
    {
        "auto_descr": "Beschreibung:Seit dem ersten stabilen Release im Mai 2015 hat sich Rust von einer vielversprechenden neuen Sprache im Bereich der Systemprogrammierung zu ein...",
        "crea_time": "2024-08-29T18:03:38.272477449+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:38.272477449+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Modernes Rust im Jahr 2021 - YouTube",
        "uri_uuid": "99fa8a28f11e9ea6af6ec6b8a43013f94505aa4a4130e1c915a78ecf183200da",
        "url": "https://www.youtube.com/watch?v=FkJmr_wFkVM"
    },
    {
        "auto_descr": "Microsoft has angered an entire open source community. A controversial decision for .NET 6 has even upset developers inside Microsoft, too.",
        "crea_time": "2024-08-29T18:03:38.825621073+02:00",
        "crea_user": "api",
        "host": "www.theverge.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:38.825621073+02:00",
        "modi_user": "api",
        "path": "/2021/10/22/22740701/microsoft-dotnet-hot-reload-removal-decision-open-source",
        "scheme": "https",
        "title": "Microsoft angers the .NET open source community with a controversial decision - The Verge",
        "uri_uuid": "36e624a5b54616e030d2b097da7afa9ef482769cdd179ca7180c50380d0f84d3",
        "url": "https://www.theverge.com/2021/10/22/22740701/microsoft-dotnet-hot-reload-removal-decision-open-source"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T18:03:39.203883112+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:39.203883112+02:00",
        "modi_user": "api",
        "path": "/2021/10/21/Rust-1.56.0.html",
        "scheme": "https",
        "title": "Announcing Rust 1.56.0 and Rust 2021 | Rust Blog",
        "uri_uuid": "2a9ae456097d4cffadbc12c84aa57ec5d8c473bf161b2b21d35f1f0c7c93a10b",
        "url": "https://blog.rust-lang.org/2021/10/21/Rust-1.56.0.html"
    },
    {
        "auto_descr": "Ein kleiner Schritt in der Version, ein großer Sprung bei der Edition: Rust 1.56 gibt nach den Editionen Rust 2015 und 2018 den Startschuss für Rust 2021.",
        "crea_time": "2024-08-29T18:03:39.442600262+02:00",
        "crea_user": "api",
        "host": "www.heise.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:39.442600262+02:00",
        "modi_user": "api",
        "path": "/news/Programmiersprache-Neue-Edition-Rust-2021-ist-flexibler-bei-anonymen-Funktionen-6225981.html",
        "scheme": "https",
        "title": "\n    Programmiersprache: Rust 2021 ist flexibler bei anonymen Funktionen | heise online\n",
        "uri_uuid": "db62f18b1aa2899ad52c0c9e98d824706b3b37f6e6dd318445ce7d2a8828ce2f",
        "url": "https://www.heise.de/news/Programmiersprache-Neue-Edition-Rust-2021-ist-flexibler-bei-anonymen-Funktionen-6225981.html"
    },
    {
        "auto_descr": "Making containers more secure with eBPF and Linux Security Modules (LSM) - lockc-project/lockc",
        "crea_time": "2024-08-29T18:03:40.336042120+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:40.336042120+02:00",
        "modi_user": "api",
        "path": "/rancher-sandbox/lockc",
        "scheme": "https",
        "title": "GitHub - lockc-project/lockc: Making containers more secure with eBPF and Linux Security Modules (LSM)",
        "uri_uuid": "977cfc70be30bb2050fe5404ce872514e39e9c20ce29a695234e16e8fd2433ea",
        "url": "https://github.com/rancher-sandbox/lockc"
    },
    {
        "auto_descr": "Aya is an eBPF library for the Rust programming language, built with a focus on developer experience and operability. - aya-rs/aya",
        "crea_time": "2024-08-29T18:03:41.430226905+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:41.430226905+02:00",
        "modi_user": "api",
        "path": "/aya-rs/aya",
        "scheme": "https",
        "title": "GitHub - aya-rs/aya: Aya is an eBPF library for the Rust programming language, built with a focus on developer experience and operability.",
        "uri_uuid": "2b37a4383401a1e786530613490a66ef297c9d7ae37a6d96d50b72453ce28c7c",
        "url": "https://github.com/aya-rs/aya"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:42.336527081+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:42.336527081+02:00",
        "modi_user": "api",
        "path": "/crates/klask",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "6d3f5321f573d26f61ae13354fb7161d5f0a2d0b619b7c1fa6fef1843aa1e053",
        "url": "https://crates.io/crates/klask"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:42.562421695+02:00",
        "crea_user": "api",
        "host": "tauri.studio",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:42.562421695+02:00",
        "modi_user": "api",
        "path": "/en/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "88ad86c63573ff93346a5fb31da783ab7287cb4773e931bbe2c0d1b1fa9f6cdc",
        "url": "https://tauri.studio/en/"
    },
    {
        "auto_descr": "Rust bindings for the FLTK GUI library. Contribute to fltk-rs/fltk-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:43.053795940+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:43.053795940+02:00",
        "modi_user": "api",
        "path": "/fltk-rs/fltk-rs/blob/master/FAQ.md",
        "scheme": "https",
        "title": "fltk-rs/FAQ.md at master · fltk-rs/fltk-rs · GitHub",
        "uri_uuid": "d2dbbd16839b5c9ed5c4ddb7abadeeebefc274323465a843b834c6a5dc7736c1",
        "url": "https://github.com/fltk-rs/fltk-rs/blob/master/FAQ.md#concurrency"
    },
    {
        "auto_descr": "Is it even possible?",
        "crea_time": "2024-08-29T18:03:43.710672743+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:43.710672743+02:00",
        "modi_user": "api",
        "path": "/fltk-rs/fltk-rs/issues/31",
        "scheme": "https",
        "title": "Any multi-threading examples? · Issue #31 · fltk-rs/fltk-rs · GitHub",
        "uri_uuid": "9564764a2d2b8c9b89700b86f0fa06f6b320f7392beafeca45fee20df1695127",
        "url": "https://github.com/fltk-rs/fltk-rs/issues/31"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:44.801048026+02:00",
        "crea_user": "api",
        "host": "prod.liveshare.vsengsaas.visualstudio.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:44.801048026+02:00",
        "modi_user": "api",
        "path": "/join",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e2fdb13352d228e38bd7cc799d50ebb53e6de93a90fa8d5582e49e2cf81a3e21",
        "url": "https://prod.liveshare.vsengsaas.visualstudio.com/join?CD162F036939F87DEEA2A6F4F021B1D5D2ED"
    },
    {
        "auto_descr": "A bunch of links to blog posts, articles, videos, etc for learning Rust - ctjhoa/rust-learning",
        "crea_time": "2024-08-29T18:03:45.391907327+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:45.391907327+02:00",
        "modi_user": "api",
        "path": "/ctjhoa/rust-learning",
        "scheme": "https",
        "title": "GitHub - ctjhoa/rust-learning: A bunch of links to blog posts, articles, videos, etc for learning Rust",
        "uri_uuid": "c9aba62ffc27045c71227a7d9e527a751b5814154e6abecc5a1f615f142ad847",
        "url": "https://github.com/ctjhoa/rust-learning"
    },
    {
        "auto_descr": "❌ Cargo plugin for linting your dependencies 🦀. Contribute to EmbarkStudios/cargo-deny development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:46.436948681+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:46.436948681+02:00",
        "modi_user": "api",
        "path": "/EmbarkStudios/cargo-deny",
        "scheme": "https",
        "title": "GitHub - EmbarkStudios/cargo-deny: ❌ Cargo plugin for linting your dependencies 🦀",
        "uri_uuid": "c9835c05655f7bf584df4c07587389186e534fa3b209271086fde69419f76c6d",
        "url": "https://github.com/EmbarkStudios/cargo-deny"
    },
    {
        "auto_descr": "Is your open source project “open” as in “available”, or “open” as in “welcoming”? I’m of the opinion that we should always strive to be welcoming in open so...",
        "crea_time": "2024-08-29T18:03:47.314785904+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:47.314785904+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Manish Goregaokar - Keynote: \"Open\" as in \"Welcoming\": Facilitating Contributions - YouTube",
        "uri_uuid": "3ac7f7a53cc9beeb0ab4e04bc16fb0fa4592fef92c43f0218aa57cfc8e5e6b13",
        "url": "https://www.youtube.com/watch?v=AHprJNUCgQ0"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:48.265096522+02:00",
        "crea_user": "api",
        "host": "dianne.skoll.ca",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:48.265096522+02:00",
        "modi_user": "api",
        "path": "/projects/remind/",
        "scheme": "https",
        "title": "Dianne Skoll's Web Site - Remind - Software Projects",
        "uri_uuid": "ddcbbc7ab3094d7af06af57aa899b57c8c5b2952490a6700242f53eb6b9a0583",
        "url": "https://dianne.skoll.ca/projects/remind/"
    },
    {
        "auto_descr": "dunst written in Rust. Contribute to durst-notification/durst development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:03:48.887439319+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:48.887439319+02:00",
        "modi_user": "api",
        "path": "/durst-notification/durst",
        "scheme": "https",
        "title": "GitHub - durst-notification/durst: dunst written in Rust",
        "uri_uuid": "fc9395a8107ed95682f7d3166620589c63fa4eba4dc1d8cc4fd6c99e82d2b626",
        "url": "https://github.com/durst-notification/durst"
    },
    {
        "auto_descr": "Issue a notification at a given date or in a recurring pattern within a single session or across multiple sessions.",
        "crea_time": "2024-08-29T18:03:49.821673575+02:00",
        "crea_user": "api",
        "host": "gitlab.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:49.821673575+02:00",
        "modi_user": "api",
        "path": "/initBasti/elmo",
        "scheme": "https",
        "title": "Sebastian Fricke / Elmo · GitLab",
        "uri_uuid": "43f54124a60ec654add90439d2819932ea7f2cde77a969f21f26547108b29a31",
        "url": "https://gitlab.com/initBasti/elmo"
    },
    {
        "auto_descr": "The Task Scheduler enables you to automatically perform routine tasks on a chosen computer. The Task Scheduler does so by monitoring whatever criteria you choose and then executing the tasks when those criteria are met.",
        "crea_time": "2024-08-29T18:03:50.492469527+02:00",
        "crea_user": "api",
        "host": "docs.microsoft.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:50.492469527+02:00",
        "modi_user": "api",
        "path": "/en-us/windows/win32/taskschd/task-scheduler-start-page",
        "scheme": "https",
        "title": "Task Scheduler for developers - Win32 apps | Microsoft Learn",
        "uri_uuid": "f4f7311721e88a54530601fe42e3ac320e7bfef357c66e11f48864ab1a0ce1f4",
        "url": "https://docs.microsoft.com/en-us/windows/win32/taskschd/task-scheduler-start-page"
    },
    {
        "auto_descr": "Getting to know remind(1)",
        "crea_time": "2024-08-29T18:03:51.011190844+02:00",
        "crea_user": "api",
        "host": "blog.thechases.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:51.011190844+02:00",
        "modi_user": "api",
        "path": "/posts/remind/",
        "scheme": "https",
        "title": "How I use remind(1) | Tim's blog",
        "uri_uuid": "6491fa4dc9ff43c92dde07f0f3aff9bce2c16db2ebe05b9466a7afcbfd47ad0b",
        "url": "https://blog.thechases.com/posts/remind/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:53.258596192+02:00",
        "crea_user": "api",
        "host": "seebass22.itch.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:53.258596192+02:00",
        "modi_user": "api",
        "path": "/harmonica-tab-transposer",
        "scheme": "https",
        "title": "harmonica tab transposer by Seebass22",
        "uri_uuid": "c65019a00d1bcc2787c71ee1e8f3cac37380accf215f168b8462c3b88d3fe24f",
        "url": "https://seebass22.itch.io/harmonica-tab-transposer"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:54.099120140+02:00",
        "crea_user": "api",
        "host": "www.toptal.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:54.099120140+02:00",
        "modi_user": "api",
        "path": "/webassembly/webassembly-rust-tutorial-web-audio",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "86889b18b206b4ca0c6cff2df9e01982c7ed72ba3e8fae3d344a433b63117093",
        "url": "https://www.toptal.com/webassembly/webassembly-rust-tutorial-web-audio"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:54.246181157+02:00",
        "crea_user": "api",
        "host": "cprimozic.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:54.246181157+02:00",
        "modi_user": "api",
        "path": "/blog/fm-synth-rust-wasm-simd/",
        "scheme": "https",
        "title": "FM Synthesis in the Browser with Rust, Web Audio, and WebAssembly with SIMD - Casey Primozic's Homepage",
        "uri_uuid": "9ae5e1cee162c031e8bf7ad4f25e4c446c9fa3e38679e4b8f044f68c112006da",
        "url": "https://cprimozic.net/blog/fm-synth-rust-wasm-simd/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:03:55.471438991+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:55.471438991+02:00",
        "modi_user": "api",
        "path": "/Seebass22/harptabber/tree/audio",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "30905c3ff9352c28c5b0961e5c8a458143e9b0d0d4255d0692e9ef2caeb1af70",
        "url": "https://github.com/Seebass22/harptabber/tree/audio"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:03:56.330711115+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:56.330711115+02:00",
        "modi_user": "api",
        "path": "/UuhSnbkdt2k",
        "scheme": "https",
        "title": "harmonica tab audio - YouTube",
        "uri_uuid": "482ff797d030b41900172ad71f905b0949df4e26bcc3ba3ba79c61d3627167f5",
        "url": "https://youtu.be/UuhSnbkdt2k"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:03:57.116243135+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:57.116243135+02:00",
        "modi_user": "api",
        "path": "/cargo/reference/specifying-dependencies.html",
        "scheme": "https",
        "title": "Specifying Dependencies - The Cargo Book",
        "uri_uuid": "b2bd7f01b61c34448e7b1690ceeb66325213d9d82619141d7024f490833ce844",
        "url": "https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#development-dependencies"
    },
    {
        "auto_descr": "print harmonica note layouts for different tunings and keys - Seebass22/harptool",
        "crea_time": "2024-08-29T18:03:58.015726338+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:58.015726338+02:00",
        "modi_user": "api",
        "path": "/Seebass22/harptool",
        "scheme": "https",
        "title": "GitHub - Seebass22/harptool: print harmonica note layouts for different tunings and keys",
        "uri_uuid": "2688886ddc866f211f460cb69f8afc3ce0b1698bf50fe68a09c92f4a66eae805",
        "url": "https://github.com/Seebass22/harptool"
    },
    {
        "auto_descr": "Rust / Wasm framework for creating reliable and efficient web applications - yewstack/yew",
        "crea_time": "2024-08-29T18:03:59.735289235+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:03:59.735289235+02:00",
        "modi_user": "api",
        "path": "/yewstack/yew",
        "scheme": "https",
        "title": "GitHub - yewstack/yew: Rust / Wasm framework for creating reliable and efficient web applications",
        "uri_uuid": "88cc5aa5586c8812c61bd6197bb5d41cabae6987423b3296cf3011f31de34bed",
        "url": "https://github.com/yewstack/yew"
    },
    {
        "auto_descr": "A cross-platform GUI library for Rust, inspired by Elm - iced-rs/iced",
        "crea_time": "2024-08-29T18:04:00.481899653+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:00.481899653+02:00",
        "modi_user": "api",
        "path": "/iced-rs/iced",
        "scheme": "https",
        "title": "GitHub - iced-rs/iced: A cross-platform GUI library for Rust, inspired by Elm",
        "uri_uuid": "4011ca2a1e90e4de13878b496f7c4b1cb5da0a849bea65652ecf519cee582712",
        "url": "https://github.com/iced-rs/iced"
    },
    {
        "auto_descr": "Adding support for the Rust language to the Linux kernel. - Rust for Linux",
        "crea_time": "2024-08-29T18:04:01.385484776+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:01.385484776+02:00",
        "modi_user": "api",
        "path": "/Rust-for-Linux/",
        "scheme": "https",
        "title": "Rust for Linux · GitHub",
        "uri_uuid": "f25f5fc8a76003a2e8f14777332580525fd1dcd9bd866cbc21f9d3ce841a579e",
        "url": "https://github.com/Rust-for-Linux/"
    },
    {
        "auto_descr": "Rust library for building and running BPF/eBPF modules - foniod/redbpf",
        "crea_time": "2024-08-29T18:04:02.192656378+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:02.192656378+02:00",
        "modi_user": "api",
        "path": "/foniod/redbpf",
        "scheme": "https",
        "title": "GitHub - foniod/redbpf: Rust library for building and running BPF/eBPF modules",
        "uri_uuid": "ac50fefacbcd249b54d31b172fe4cc81eaf75808e79d662e4f7beb28f6639e61",
        "url": "https://github.com/foniod/redbpf"
    },
    {
        "auto_descr": "Auf YouTube findest du die angesagtesten Videos und Tracks. Außerdem kannst du eigene Inhalte hochladen und mit Freunden oder gleich der ganzen Welt teilen.",
        "crea_time": "2024-08-29T18:04:03.226212383+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:03.226212383+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": " - YouTube",
        "uri_uuid": "791667eb783664d5245e1987c1173964a385a2c3ef6053ff5fdaf62e0ab61b53",
        "url": "https://www.youtube.com/watch?v=RwWwvEBkxjQ"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T18:04:03.595860054+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:03.595860054+02:00",
        "modi_user": "api",
        "path": "/Rust-Zurich/events/280399418/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "369f9fffce79fde04377349d18b4d10908d29b843bcfe7174579bae6053339b6",
        "url": "https://www.meetup.com/Rust-Zurich/events/280399418/"
    },
    {
        "auto_descr": "Breaking your Rust code for fun and profit. Contribute to llogiq/mutagen development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:04:05.756118368+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:05.756118368+02:00",
        "modi_user": "api",
        "path": "/llogiq/mutagen/blob/master/mutagen-core/src/mutator/mutator_binop_num.rs",
        "scheme": "https",
        "title": "mutagen/mutagen-core/src/mutator/mutator_binop_num.rs at master · llogiq/mutagen · GitHub",
        "uri_uuid": "7fcdf439b558752cd688fda2e9478cb646ffbdcea3adb4831049e2480857026f",
        "url": "https://github.com/llogiq/mutagen/blob/master/mutagen-core/src/mutator/mutator_binop_num.rs#L214"
    },
    {
        "auto_descr": "RustFest Global returns in fall 2021 with 3 brand new online conferences, organized by the global Rust community!",
        "crea_time": "2024-08-29T18:04:06.802183587+02:00",
        "crea_user": "api",
        "host": "rustfest.global",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:06.802183587+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "RustFest Global 2021",
        "uri_uuid": "90cf93dcc66338f1ce67174005a0335c1ce4bd55de0a7e783ed5b5f46db2706c",
        "url": "https://rustfest.global/"
    },
    {
        "auto_descr": "The home of the RustFest Project, a Rust programming language community events initiative.\n",
        "crea_time": "2024-08-29T18:04:07.024913795+02:00",
        "crea_user": "api",
        "host": "rustfest.world",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:07.024913795+02:00",
        "modi_user": "api",
        "path": "/say-hello-rustfest-global-2021",
        "scheme": "https",
        "title": "RustFest's back, alright!",
        "uri_uuid": "711abdf03b7e2de8cbf3c23bdc8036aea17b79a4de9122b5a2ccd44ac6147cbe",
        "url": "https://rustfest.world/say-hello-rustfest-global-2021"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:07.558372492+02:00",
        "crea_user": "api",
        "host": "docs.rs7structopt",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:07.558372492+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "26299afa7461aef30adc32b041cc6b87bef161b59adf22c318603f96d245e10b",
        "url": "https://docs.rs7structopt/"
    },
    {
        "auto_descr": "This crate defines the `StructOpt` trait and its custom derive.",
        "crea_time": "2024-08-29T18:04:07.670533139+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:07.670533139+02:00",
        "modi_user": "api",
        "path": "/structopt",
        "scheme": "https",
        "title": "structopt - Rust",
        "uri_uuid": "f7dccdc374174f510c2b297aa4513c2b38bb1ee8d6034923737504ab5b6216fe",
        "url": "https://docs.rs/structopt"
    },
    {
        "auto_descr": "A language empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T18:04:08.733165525+02:00",
        "crea_user": "api",
        "host": "www.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:08.733165525+02:00",
        "modi_user": "api",
        "path": "/learn",
        "scheme": "https",
        "title": "\n            Learn Rust - Rust Programming Language\n        ",
        "uri_uuid": "ca1d85ef1b11fcf48c757944d3677c2d04504608c2e1c61e8c05bfda68d82a21",
        "url": "https://www.rust-lang.org/learn"
    },
    {
        "auto_descr": "A place for learning about Rust! 🦀 Content ranges from beginner to advanced so there should be something for everyone! Subscribe and let me know what you th...",
        "crea_time": "2024-08-29T18:04:09.384538484+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:09.384538484+02:00",
        "modi_user": "api",
        "path": "/channel/UCpeX4D-ArTrsqvhLapAHprQ",
        "scheme": "https",
        "title": "Ryan Levick - YouTube",
        "uri_uuid": "a61199a3dcfea9300f0b49c3ab33a1b67b4bf2a670e6c5922925c3f3ecc09147",
        "url": "https://www.youtube.com/channel/UCpeX4D-ArTrsqvhLapAHprQ"
    },
    {
        "auto_descr": "This channel is your #1 resource for the Rust Programming Language! We'll be covering basic Rust language tutorials, advanced Rust language tutorials, Rust l...",
        "crea_time": "2024-08-29T18:04:10.168891693+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:10.168891693+02:00",
        "modi_user": "api",
        "path": "/c/LetsGetRusty/videos",
        "scheme": "https",
        "title": "Let's Get Rusty - YouTube",
        "uri_uuid": "f43db7e9e131e9dc119e359c239b512f88c6c3171b9506be83dc5718846b410f",
        "url": "https://www.youtube.com/c/LetsGetRusty/videos"
    },
    {
        "auto_descr": "The ultimate Rust lang tutorial. Follow along as we go through the Rust lang book chapter by chapter.📝 Get notified when the Rust Cheatsheet comes out: http...",
        "crea_time": "2024-08-29T18:04:10.469889405+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:10.469889405+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Smart Pointers in Rust - Reference Cycles - YouTube",
        "uri_uuid": "cade05c78e484564274327ff80cd5f4699c13361d2beeb39edce15f277d7b39b",
        "url": "https://www.youtube.com/watch?v=pIVZRDFAUyc"
    },
    {
        "auto_descr": "We're building libraries and tools in the Rust programming language!The streams are intended for users who are already somewhat familiar with Rust, but who w...",
        "crea_time": "2024-08-29T18:04:11.069862978+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:11.069862978+02:00",
        "modi_user": "api",
        "path": "/channel/UC_iD0xppBwwsrM9DegC5cQQ",
        "scheme": "https",
        "title": "Jon Gjengset - YouTube",
        "uri_uuid": "e6e4ab17611d1d32a3818675e05c08eadb02fd1e7bc8ae809ee32136dffd110d",
        "url": "https://www.youtube.com/channel/UC_iD0xppBwwsrM9DegC5cQQ"
    },
    {
        "auto_descr": "CodinGame is a challenge-based training platform for programmers where you can play with the hottest programming topics. Solve games, code AI bots, learn from your peers, have fun.",
        "crea_time": "2024-08-29T18:04:11.518864449+02:00",
        "crea_user": "api",
        "host": "www.codingame.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:11.518864449+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Coding Games and Programming Challenges to Code Better",
        "uri_uuid": "29b2d5a9a8ed2d2b7c22ebbb6dba13c10288c486cb8643b5baf4f640375fb354",
        "url": "https://www.codingame.com/"
    },
    {
        "auto_descr": "Cross-platform game engine in Rust. . Contribute to not-fl3/macroquad development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:04:12.998877378+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:12.998877378+02:00",
        "modi_user": "api",
        "path": "/not-fl3/macroquad",
        "scheme": "https",
        "title": "GitHub - not-fl3/macroquad: Cross-platform game engine in Rust.",
        "uri_uuid": "2df93ca4838c07c9147c0acf05d28ae01d637a52744a39353f15b33596f3c906",
        "url": "https://github.com/not-fl3/macroquad"
    },
    {
        "auto_descr": "Educational blog posts for Rust beginners. Contribute to pretzelhammer/rust-blog development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:04:13.852236623+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:13.852236623+02:00",
        "modi_user": "api",
        "path": "/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md",
        "scheme": "https",
        "title": "rust-blog/posts/common-rust-lifetime-misconceptions.md at master · pretzelhammer/rust-blog · GitHub",
        "uri_uuid": "d758cfe42e3f610bc751c0c4015fd5fbb07e8dc78c249e3cbef064708a8a0754",
        "url": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md#2-if-t-static-then-t-must-be-valid-for-the-entire-program"
    },
    {
        "auto_descr": "In this stream we attempt to discuss one example that can challenge even long time Rustaceans when it comes to understanding lifetimes. Follow along as we di...",
        "crea_time": "2024-08-29T18:04:14.455080993+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:14.455080993+02:00",
        "modi_user": "api",
        "path": "/MSi3E5Z8oRw",
        "scheme": "https",
        "title": "Understanding Rust Lifetimes - YouTube",
        "uri_uuid": "f9eacb48fbc392803ff6382d6ad70a96f21e6e5fa6081361f644ae090b08c768",
        "url": "https://youtu.be/MSi3E5Z8oRw"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:15.241100266+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:15.241100266+02:00",
        "modi_user": "api",
        "path": "/wiki/Finite-state_machine",
        "scheme": "https",
        "title": "Finite-state machine - Wikipedia",
        "uri_uuid": "a37465a078767b5ccc59619d30be5e13d12c3e69199a456908a52ee9d277591b",
        "url": "https://en.wikipedia.org/wiki/Finite-state_machine"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:15.630094309+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:15.630094309+02:00",
        "modi_user": "api",
        "path": "/barafael/typestate-actor",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "d6cbc0b4c9f0891b02c0916bb68dc3db0f5239d904a4d6e1142cc004afa699de",
        "url": "https://github.com/barafael/typestate-actor"
    },
    {
        "auto_descr": "Crate `fst` is a library for efficiently storing and searching ordered sets or maps where the keys are byte strings. A key design goal of this crate is to support storing and searching very large sets or maps (i.e., billions). This means that much effort has gone in to making sure that all operations are memory efficient.",
        "crea_time": "2024-08-29T18:04:15.900861276+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:15.900861276+02:00",
        "modi_user": "api",
        "path": "/fst",
        "scheme": "https",
        "title": "fst - Rust",
        "uri_uuid": "3686c5a8d8497cef53bc91b97ad58f6da15abe8381f1c72e97c4a07f23316209",
        "url": "https://docs.rs/fst"
    },
    {
        "auto_descr": "QCon San Francisco International Software Conference is back this November 18-22, 2024. Software leaders at early adopter companies will come together to sha...",
        "crea_time": "2024-08-29T18:04:16.109101295+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:16.109101295+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "The Talk You've Been Await-ing for - YouTube",
        "uri_uuid": "dccb996d12a57cc00274601f93cfb45b67fa1d8756d27dc6c7c62d23397174a2",
        "url": "https://www.youtube.com/watch?v=NNwK5ZPAJCk"
    },
    {
        "auto_descr": "InfoQ Dev Summit Boston, a two-day conference of actionable advice from senior software developers hosted by InfoQ, will take place on June 24-25, 2024 Bosto...",
        "crea_time": "2024-08-29T18:04:16.967637782+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:16.967637782+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust's Journey to Async/Await - YouTube",
        "uri_uuid": "d799b35000d0132a04653dc7a8b78d4eb97bbeeed999439d1346c9ef99a209f3",
        "url": "https://www.youtube.com/watch?v=lJ3NC-R3gSI"
    },
    {
        "auto_descr": "Rayon is a data-parallelism library that makes it easy to convert sequential computations into parallel.",
        "crea_time": "2024-08-29T18:04:17.717556511+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:17.717556511+02:00",
        "modi_user": "api",
        "path": "/rayon",
        "scheme": "https",
        "title": "rayon - Rust",
        "uri_uuid": "b97052dab9c777d0f2abbd368a1ff35869c7896b48589d0ec854f6925f9e7ea2",
        "url": "https://docs.rs/rayon"
    },
    {
        "auto_descr": "Tools for concurrent programming.",
        "crea_time": "2024-08-29T18:04:17.907885960+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:17.907885960+02:00",
        "modi_user": "api",
        "path": "/crossbeam",
        "scheme": "https",
        "title": "crossbeam - Rust",
        "uri_uuid": "ce18f0eb87a584ff822718035ee53bafb0504267130f23316a88f53a7a7bcd42",
        "url": "https://docs.rs/crossbeam"
    },
    {
        "auto_descr": "Let's talk Rust!What's new in the Rust world? What ideas and projects have you been working on? Join, meet new people and discuss :)Rust brings a breath of fresh air to the world of systems programming to make it enjoyable, fearless, and fun - yet also robust, rigorous, and safe! As Rust aims to emp",
        "crea_time": "2024-08-29T18:04:18.058481450+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:18.058481450+02:00",
        "modi_user": "api",
        "path": "/de-DE/Nurnberg-Rust-Meetup-Group/",
        "scheme": "https",
        "title": "Rust Nuremberg | Meetup",
        "uri_uuid": "a5579e63dc88fb3220464c05e039d89783a910898b28b1237474ad68e295934f",
        "url": "https://www.meetup.com/de-DE/Nurnberg-Rust-Meetup-Group/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:18.249373291+02:00",
        "crea_user": "api",
        "host": "en.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:18.249373291+02:00",
        "modi_user": "api",
        "path": "/wiki/CBOR",
        "scheme": "https",
        "title": "CBOR - Wikipedia",
        "uri_uuid": "8f985b8ce6448f5551b1f32c29028d095af9505a9d9dc753bfdce1ff86477672",
        "url": "https://en.wikipedia.org/wiki/CBOR"
    },
    {
        "auto_descr": "Browsersync makes your browser testing workflow faster by synchronising URLs, interactions and code changes across multiple devices. It&rsquo;s wicked-fast and totally free.",
        "crea_time": "2024-08-29T18:04:18.559516688+02:00",
        "crea_user": "api",
        "host": "browsersync.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:18.559516688+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Browsersync - Time-saving synchronised browser testing",
        "uri_uuid": "a7ea89fef09b5f6853eeea49ad70c7570f19c8b4737b1b22ac410aca92db2f9c",
        "url": "https://browsersync.io/"
    },
    {
        "auto_descr": "sunng87/handlebars-rust, handlebars-rust Handlebars templating language implemented in Rust and for Rust. Handlebars-rust is the template engine that renders the official Rust",
        "crea_time": "2024-08-29T18:04:18.759617498+02:00",
        "crea_user": "api",
        "host": "rustrepo.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:18.759617498+02:00",
        "modi_user": "api",
        "path": "/repo/sunng87-handlebars-rust-rust-web-servers",
        "scheme": "https",
        "title": "Rust templating with Handlebars",
        "uri_uuid": "9ee157bb6833daea37292c561c008fc84d7ff6be096e1b9043399f219e2aeb42",
        "url": "https://rustrepo.com/repo/sunng87-handlebars-rust-rust-web-servers"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:19.823575787+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:19.823575787+02:00",
        "modi_user": "api",
        "path": "/crates/cargo-cache",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b97fe7349ad6403c40d9ec100e10722a540e04a00cf3161e6337c286e76c838b",
        "url": "https://crates.io/crates/cargo-cache"
    },
    {
        "auto_descr": "Tailwind CSS is a utility-first CSS framework for rapidly building modern websites without ever leaving your HTML.",
        "crea_time": "2024-08-29T18:04:20.045054337+02:00",
        "crea_user": "api",
        "host": "tailwindcss.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:20.045054337+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Tailwind CSS - Rapidly build modern websites without ever leaving your HTML.",
        "uri_uuid": "632e4672a169dd15bcef730dddfde0082f35240a738fae3c16794c86def59c77",
        "url": "https://tailwindcss.com/"
    },
    {
        "auto_descr": "Rust D-Bus crate. Repository moved to Github",
        "crea_time": "2024-08-29T18:04:22.222992754+02:00",
        "crea_user": "api",
        "host": "gitlab.freedesktop.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:22.222992754+02:00",
        "modi_user": "api",
        "path": "/dbus/zbus/",
        "scheme": "https",
        "title": "dbus / zbus · GitLab",
        "uri_uuid": "d36c9a1447ee3867591b674b921536124c4e4bdae610d9ce65c42b9c6e21acc6",
        "url": "https://gitlab.freedesktop.org/dbus/zbus/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:24.881068207+02:00",
        "crea_user": "api",
        "host": "this-week-in-rust.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:24.881068207+02:00",
        "modi_user": "api",
        "path": "/blog/2021/08/18/this-week-in-rust-404/",
        "scheme": "https",
        "title": "This Week in Rust 404  · This Week in Rust\n",
        "uri_uuid": "7fd51268d51173b0abfe175842ba0cc473e867a42fa6cb0d769ac4d0e0dd2fde",
        "url": "https://this-week-in-rust.org/blog/2021/08/18/this-week-in-rust-404/"
    },
    {
        "auto_descr": "amos loves to tinker",
        "crea_time": "2024-08-29T18:04:25.137506635+02:00",
        "crea_user": "api",
        "host": "fasterthanli.me",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:25.137506635+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "\n        \n        fasterthanli.me\n        \n    ",
        "uri_uuid": "14885e97c49d00f5018324ef651c5ee5edf830e5eef4caa5373a0b45190507de",
        "url": "https://fasterthanli.me/"
    },
    {
        "auto_descr": "\"In The Loop\" presented by Jake Archibald at JSConf.Asia 2018Have you ever had a bug where things were happening in the wrong order, or particular style chan...",
        "crea_time": "2024-08-29T18:04:27.147079510+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:27.147079510+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Jake Archibald on the web browser event loop, setTimeout, micro tasks, requestAnimationFrame, ... - YouTube",
        "uri_uuid": "bfb72453a39bd90255004b8b75473c06374d0df349e466c6f4dcb9624ff479dc",
        "url": "https://www.youtube.com/watch?v=cCOL7MC4Pl0"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:27.977800410+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:27.977800410+02:00",
        "modi_user": "api",
        "path": "/crates/smol",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "36b83ae4a7336564418fe33cc23da3106499a938086f53fcc0d92fd8e1aff229",
        "url": "https://crates.io/crates/smol"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:28.192276518+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:28.192276518+02:00",
        "modi_user": "api",
        "path": "/crates/async-std",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "aa0beb4ec4b8ec93f375a0ac7ad7f931bcecb67815925fb0fdb50561088294b7",
        "url": "https://crates.io/crates/async-std"
    },
    {
        "auto_descr": "A runtime for writing reliable network applications without compromising speed.",
        "crea_time": "2024-08-29T18:04:28.472374845+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:28.472374845+02:00",
        "modi_user": "api",
        "path": "/tokio/1.10.0/tokio/",
        "scheme": "https",
        "title": "tokio - Rust",
        "uri_uuid": "5d3a56f2b17bca0c06d3a12fb8f68a553770c6c7c7b47017ec4566ca5d25e1ef",
        "url": "https://docs.rs/tokio/1.10.0/tokio/"
    },
    {
        "auto_descr": "Strictly following https://github.com/rust-analyzer/rust-analyzer/tree/master/docs/user#sublime-text-3 on Linux, I'm not getting it to work: it simply fails to run ra_lsp_server (or rustup, or anything) because it's not in $PATH for subl...",
        "crea_time": "2024-08-29T18:04:28.684019528+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:28.684019528+02:00",
        "modi_user": "api",
        "path": "/rust-analyzer/rust-analyzer/issues/1811",
        "scheme": "https",
        "title": "Sublime Text 3 instructions aren't sufficient on Linux · Issue #1811 · rust-lang/rust-analyzer · GitHub",
        "uri_uuid": "164093d2edbd1527333fe35c704113e05bf74d7df23497b5aadfeed179781f77",
        "url": "https://github.com/rust-analyzer/rust-analyzer/issues/1811"
    },
    {
        "auto_descr": "rust-analyzer: building a better Rust IDE",
        "crea_time": "2024-08-29T18:04:29.652094658+02:00",
        "crea_user": "api",
        "host": "rust-analyzer.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:29.652094658+02:00",
        "modi_user": "api",
        "path": "/manual.html",
        "scheme": "https",
        "title": "User Manual",
        "uri_uuid": "4d5690a7e230440d875694c6b2b1d2025e1e106829bda32418db87b2cefbddce",
        "url": "https://rust-analyzer.github.io/manual.html#rust-analyzer-language-server-binary"
    },
    {
        "auto_descr": "API documentation for the Rust `select` macro in crate `tokio`.",
        "crea_time": "2024-08-29T18:04:30.576261328+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:30.576261328+02:00",
        "modi_user": "api",
        "path": "/tokio/0.2.18/tokio/macro.select.html",
        "scheme": "https",
        "title": "tokio::select - Rust",
        "uri_uuid": "f68a210050bc6d70ad95a1a636c4dd1ff9565f171a5abf189c1bab0aa2c6f8be",
        "url": "https://docs.rs/tokio/0.2.18/tokio/macro.select.html"
    },
    {
        "auto_descr": "Wait on multiple concurrent branches, returning when all branches complete.",
        "crea_time": "2024-08-29T18:04:30.761467471+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:30.761467471+02:00",
        "modi_user": "api",
        "path": "/tokio/1.10.0/tokio/macro.join.html",
        "scheme": "https",
        "title": "join in tokio - Rust",
        "uri_uuid": "df1fe865884335b462fa043b17bbdeca1c6a3ea467fcc5d761a012524f0eadf3",
        "url": "https://docs.rs/tokio/1.10.0/tokio/macro.join.html"
    },
    {
        "auto_descr": "A scoped, structured logging and diagnostics system.",
        "crea_time": "2024-08-29T18:04:30.931495704+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:30.931495704+02:00",
        "modi_user": "api",
        "path": "/tracing/0.1.26/tracing/index.html",
        "scheme": "https",
        "title": "tracing - Rust",
        "uri_uuid": "74e00363435f49758c74597e702f2c621cd4663041b109b7af3500d83b1f7aa9",
        "url": "https://docs.rs/tracing/0.1.26/tracing/index.html#using-the-macros"
    },
    {
        "auto_descr": "A game jam from 2021-08-21 to 2021-09-04 hosted by dxxi, ElhamAryanpur & AngelOnfira. Welcome to the first unofficial Rust programming language game jam! Rust allows developers to build safe, efficient, and reliable software, especially...",
        "crea_time": "2024-08-29T18:04:31.139140349+02:00",
        "crea_user": "api",
        "host": "itch.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:31.139140349+02:00",
        "modi_user": "api",
        "path": "/jam/rusty-jam",
        "scheme": "https",
        "title": "Rusty Jam - itch.io",
        "uri_uuid": "2e76b8a0f565a1b19100f94db8adc79475e01f1848e5aac1bfe981020ded4e1c",
        "url": "https://itch.io/jam/rusty-jam"
    },
    {
        "auto_descr": "Data-Oriented Design",
        "crea_time": "2024-08-29T18:04:31.996524344+02:00",
        "crea_user": "api",
        "host": "www.dataorienteddesign.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:31.996524344+02:00",
        "modi_user": "api",
        "path": "/dodbook/",
        "scheme": "https",
        "title": "Data-Oriented Design",
        "uri_uuid": "178247f8d137b0becbd3541c0402e40aa1c1b1ff3ce462ba0bafbe16b318aa6f",
        "url": "https://www.dataorienteddesign.com/dodbook/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:33.074718154+02:00",
        "crea_user": "api",
        "host": "cfsamson.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:33.074718154+02:00",
        "modi_user": "api",
        "path": "/books-futures-explained/5_pin.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f3b592814be3a2bae68f712cd597db3fba15f6b689b240a02ac91cfae13940d3",
        "url": "https://cfsamson.github.io/books-futures-explained/5_pin.html"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:04:33.816960577+02:00",
        "crea_user": "api",
        "host": "tony612.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:33.816960577+02:00",
        "modi_user": "api",
        "path": "/tokio-internals/01_intro_async.html",
        "scheme": "https",
        "title": "Rust async 简介 - Tokio Internals",
        "uri_uuid": "25ece548f86d3d60619f1388379e72e9ffe87d8c35fa9f4e4acfbebb53c1b614",
        "url": "https://tony612.github.io/tokio-internals/01_intro_async.html"
    },
    {
        "auto_descr": "#[derive(Iterator, DoubleEndedIterator, ExactSizeIterator, FusedIterator, Extend)] for enums. - taiki-e/iter-enum",
        "crea_time": "2024-08-29T18:04:34.063145235+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:34.063145235+02:00",
        "modi_user": "api",
        "path": "/taiki-e/iter-enum",
        "scheme": "https",
        "title": "GitHub - taiki-e/iter-enum: #[derive(Iterator, DoubleEndedIterator, ExactSizeIterator, FusedIterator, Extend)] for enums.",
        "uri_uuid": "8e99fa96885f8bf92c6074caa3776518bb6cee31dd67d2ce109309106cb5b146",
        "url": "https://github.com/taiki-e/iter-enum"
    },
    {
        "auto_descr": "Make time sheets with git integration. Contribute to barafael/trk development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:04:36.028260694+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:36.028260694+02:00",
        "modi_user": "api",
        "path": "/barafael/trk",
        "scheme": "https",
        "title": "GitHub - barafael/trk: Make time sheets with git integration.",
        "uri_uuid": "bf8b7b77f3455a93f44b838da353e923eb02de8dc629cbf0d6f9e94ac359bca5",
        "url": "https://github.com/barafael/trk"
    },
    {
        "auto_descr": "Alda is a text-based programming language for music composition. It allows you to write and play back music using only a text editor and the command line.\n",
        "crea_time": "2024-08-29T18:04:37.643428342+02:00",
        "crea_user": "api",
        "host": "alda.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:37.643428342+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "alda.io ::  Alda",
        "uri_uuid": "b0cbe916009115aa9e551c5d7df8e74ee0f70523cb39d7fbea00ef172a2242a0",
        "url": "https://alda.io/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:38.276407767+02:00",
        "crea_user": "api",
        "host": "www.amazon.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:38.276407767+02:00",
        "modi_user": "api",
        "path": "/Astronomical-Algorithms-Jean-Meeus/dp/0943396611",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "09071a35d79598072d858dcd876315cb1ddf963b0ba8c98e78c2f550518b1f77",
        "url": "https://www.amazon.de/Astronomical-Algorithms-Jean-Meeus/dp/0943396611"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:40.739143668+02:00",
        "crea_user": "api",
        "host": "crates.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:40.739143668+02:00",
        "modi_user": "api",
        "path": "/crates/herbie-lint",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ff4e07590f7e03766968d87987b41797c107a56050df1c0cdfb56f723966dee7",
        "url": "https://crates.io/crates/herbie-lint"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:40.937316775+02:00",
        "crea_user": "api",
        "host": "cacm.acm.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:40.937316775+02:00",
        "modi_user": "api",
        "path": "/blogs/blog-cacm/253393-why-did-we-ever-think-the-first-programming-language-didnt-matter/fulltext",
        "scheme": "https",
        "title": "Why Did We Ever Think the First Programming Language Didn’t Matter? – Communications of the ACM",
        "uri_uuid": "8c4fb0822cc1088cfcb99cc97cff8cab51b0af5a37b40b2a73e58fc7b6c2ca2b",
        "url": "https://cacm.acm.org/blogs/blog-cacm/253393-why-did-we-ever-think-the-first-programming-language-didnt-matter/fulltext"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:04:41.612325147+02:00",
        "crea_user": "api",
        "host": "bevy-cheatbook.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:41.612325147+02:00",
        "modi_user": "api",
        "path": "/introduction.html",
        "scheme": "https",
        "title": "Introduction - Unofficial Bevy Cheat Book",
        "uri_uuid": "b7ecebc9ce24793d0d1668ceb96a1e710dcd785ba60e10398a68d96dbdb249fe",
        "url": "https://bevy-cheatbook.github.io/introduction.html"
    },
    {
        "auto_descr": "A one-stop shop for Nannou Knowledge!",
        "crea_time": "2024-08-29T18:04:41.885569752+02:00",
        "crea_user": "api",
        "host": "www.guide.nannou.cc",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:41.885569752+02:00",
        "modi_user": "api",
        "path": "/getting_started/create_a_project.html",
        "scheme": "https",
        "title": "Create A Project - The Nannou Guide",
        "uri_uuid": "5b8df0d3c291d31adee8d811baa78e15eb922b80b36fa364d1802875695a9b13",
        "url": "https://www.guide.nannou.cc/getting_started/create_a_project.html"
    },
    {
        "auto_descr": "Follow me on:Twitter: https://twitter.com/camsjamsGitHub: https://github.com/camsjamsMedium: https://cameron-manavian.medium.com/Boids is an artificial life ...",
        "crea_time": "2024-08-29T18:04:42.904658586+02:00",
        "crea_user": "api",
        "host": "youtu.be",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:42.904658586+02:00",
        "modi_user": "api",
        "path": "/e0n9v565HR4",
        "scheme": "https",
        "title": "Flocking Boids in Rust: With Piston vs Tetra vs Amethyst vs Bevy - YouTube",
        "uri_uuid": "114128a41b32c11159bf09ef1af2b0c79e881584aec9eadc6c68ff4073726057",
        "url": "https://youtu.be/e0n9v565HR4"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:43.683952342+02:00",
        "crea_user": "api",
        "host": "www.instagram.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:43.683952342+02:00",
        "modi_user": "api",
        "path": "/mactuitui/",
        "scheme": "https",
        "title": "Aktualisiere deinen Browser",
        "uri_uuid": "929a1bc10be6fbe624f8e512fdf8af8386c43d1332f8a188b40d2b845ef2d9c6",
        "url": "https://www.instagram.com/mactuitui/"
    },
    {
        "auto_descr": "cargo, make me a project. Contribute to cargo-generate/cargo-generate development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:04:44.290405303+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:44.290405303+02:00",
        "modi_user": "api",
        "path": "/cargo-generate/cargo-generate",
        "scheme": "https",
        "title": "GitHub - cargo-generate/cargo-generate: cargo, make me a project",
        "uri_uuid": "895a989db356417e019c9c17aa4b38fc0defbbc64110a570fcce110613bfd8c8",
        "url": "https://github.com/cargo-generate/cargo-generate"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:45.274274290+02:00",
        "crea_user": "api",
        "host": "gstreamer.freedesktop.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:45.274274290+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "GStreamer: open source multimedia framework",
        "uri_uuid": "61d834bb0dd1b5113fd67a203c448a81feebe327089187d11f460210172675cb",
        "url": "https://gstreamer.freedesktop.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:46.355740698+02:00",
        "crea_user": "api",
        "host": "arif-test-web.herokuapp.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:46.355740698+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "db24788acad987aa871ab1f984a717c4ebd2bdf155974a126e0a401bee4d2fdd",
        "url": "https://arif-test-web.herokuapp.com/"
    },
    {
        "auto_descr": "JSON Web Token (JWT) is a compact URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is digitally signed using JSON Web Signature (JWS).",
        "crea_time": "2024-08-29T18:04:46.907848937+02:00",
        "crea_user": "api",
        "host": "jwt.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:46.907848937+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "JSON Web Tokens - jwt.io",
        "uri_uuid": "197357171724f6ce879ae660ce8b6651c1185b345a7348cd62c0c0fc7558e809",
        "url": "https://jwt.io/"
    },
    {
        "auto_descr": "Simple client/server architecture with password hashing/salting and digital signing - arifd/web-server-demo",
        "crea_time": "2024-08-29T18:04:47.445531129+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:47.445531129+02:00",
        "modi_user": "api",
        "path": "/arifd/web-server-demo",
        "scheme": "https",
        "title": "GitHub - arifd/web-server-demo: Simple client/server architecture with password hashing/salting and digital signing",
        "uri_uuid": "c04d8dcd140db9ccb810a0cd44a57904b79e10038279301f47d276b7e0debd36",
        "url": "https://github.com/arifd/web-server-demo"
    },
    {
        "auto_descr": "A simple, expressive, embeddable programming language, made with Rust - koto-lang/koto",
        "crea_time": "2024-08-29T18:04:48.166987121+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:48.166987121+02:00",
        "modi_user": "api",
        "path": "/koto-lang/koto",
        "scheme": "https",
        "title": "GitHub - koto-lang/koto: A simple, expressive, embeddable programming language, made with Rust",
        "uri_uuid": "498a042d9b010339c2071b3cd77312c8e5929d59bcf8a4a70a01d89d6482dde7",
        "url": "https://github.com/koto-lang/koto"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:04:48.909804301+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:48.909804301+02:00",
        "modi_user": "api",
        "path": "/rust-random/rand/pull/1148",
        "scheme": "https",
        "title": "Better random chars example by arifd · Pull Request #1148 · rust-random/rand · GitHub",
        "uri_uuid": "ad09738871760b32dee66744f2e566de4f0f50fb9c7082cc452fbb021ad9e351",
        "url": "https://github.com/rust-random/rand/pull/1148"
    },
    {
        "auto_descr": "Build cross-platform desktop apps with JavaScript, HTML, and CSS",
        "crea_time": "2024-08-29T18:04:50.919728129+02:00",
        "crea_user": "api",
        "host": "www.electronjs.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:50.919728129+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Build cross-platform desktop apps with JavaScript, HTML, and CSS | Electron",
        "uri_uuid": "87be218072484dbfe25c8b98e9c7b2b0c22a54278f8d054ac20d14c1fd582a22",
        "url": "https://www.electronjs.org/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:04:51.598241360+02:00",
        "crea_user": "api",
        "host": "www.ssi.gouv.fr",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:04:51.598241360+02:00",
        "modi_user": "api",
        "path": "/en/guide/programming-rules-to-develop-secure-applications-with-rust/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "3c08b148ff0ba325f28d367c14a97ae6e3e0562cf16ec65ee232984a744e2146",
        "url": "https://www.ssi.gouv.fr/en/guide/programming-rules-to-develop-secure-applications-with-rust/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:05.409877278+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:05.409877278+02:00",
        "modi_user": "api",
        "path": "/v0.5-rc/guide/configuration/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "b0c73bd0e7fdb9afd44b9f2ad619e3cb6a5276786eb85ec1ebbb7b1b0d3c9c02",
        "url": "https://rocket.rs/v0.5-rc/guide/configuration/#tls"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:07.015555973+02:00",
        "crea_user": "api",
        "host": "www.manning.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:07.015555973+02:00",
        "modi_user": "api",
        "path": "/books/rust-web-development",
        "scheme": "https",
        "title": "Rust Web Development",
        "uri_uuid": "661ba9c1a7be06ae7715c0c98cdb81789e17b71e11a51e07290ce3a74a02302f",
        "url": "https://www.manning.com/books/rust-web-development"
    },
    {
        "auto_descr": "Not a Meetup member yet? Log in and find groups that host online or in person events and meet people in your local community who share your interests.",
        "crea_time": "2024-08-29T18:07:08.542547175+02:00",
        "crea_user": "api",
        "host": "www.meetup.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:08.542547175+02:00",
        "modi_user": "api",
        "path": "/de-DE/Nurnberg-Rust-Meetup-Group/events/278076466/",
        "scheme": "https",
        "title": "Login to Meetup | Meetup",
        "uri_uuid": "a954453cfaeef501a95c194bb727dde869ef4e43df0ef15d4d72451e8dae5d64",
        "url": "https://www.meetup.com/de-DE/Nurnberg-Rust-Meetup-Group/events/278076466/"
    },
    {
        "auto_descr": "Learn the foundations of numbers as implemented in Rust",
        "crea_time": "2024-08-29T18:07:10.428397667+02:00",
        "crea_user": "api",
        "host": "mattjperez.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:10.428397667+02:00",
        "modi_user": "api",
        "path": "/numbers-in-rust/num_representation/floats.html",
        "scheme": "https",
        "title": "Floats - Numbers in Rust",
        "uri_uuid": "233b172fbb420d533db7ea421ad6aaa95c90e691d769073c3b6fb1d8dbb7cb78",
        "url": "https://mattjperez.github.io/numbers-in-rust/num_representation/floats.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:10.679858534+02:00",
        "crea_user": "api",
        "host": "en.m.wikipedia.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:10.679858534+02:00",
        "modi_user": "api",
        "path": "/wiki/Fixed_point_(mathematics)",
        "scheme": "https",
        "title": "Fixed point (mathematics) - Wikipedia",
        "uri_uuid": "36adcdcfbb0b7e416a4547d474d25e1a87fb32eee09262ed8f2153cfaa2beb48",
        "url": "https://en.m.wikipedia.org/wiki/Fixed_point_(mathematics)"
    },
    {
        "auto_descr": "Fixed Point Arithmetic. Contribute to japaric/fpa development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:11.145389537+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:11.145389537+02:00",
        "modi_user": "api",
        "path": "/japaric/fpa",
        "scheme": "https",
        "title": "GitHub - japaric/fpa: Fixed Point Arithmetic",
        "uri_uuid": "a9abd66f1a941093c6840b05b1115bfaf87f45abd07c4aaa7a4e69a74a41c09c",
        "url": "https://github.com/japaric/fpa"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:07:12.169414318+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:12.169414318+02:00",
        "modi_user": "api",
        "path": "/book/ch03-02-data-types.html",
        "scheme": "https",
        "title": "Data Types - The Rust Programming Language",
        "uri_uuid": "b55ebe06d019480f0da68c4f33ba43c6085adb953b182cf8b2fe520e53bca31e",
        "url": "https://doc.rust-lang.org/book/ch03-02-data-types.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:12.430502105+02:00",
        "crea_user": "api",
        "host": "www.jakobmeier.ch",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:12.430502105+02:00",
        "modi_user": "api",
        "path": "/blogging/Untapped-Rust.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "f9ab779ee3dfb661a6004d0b33f879f7cf8fb1f2b35719453158f073cf78b9ef",
        "url": "https://www.jakobmeier.ch/blogging/Untapped-Rust.html"
    },
    {
        "auto_descr": "The library source for the ESP32 BLE support for Arduino. - nkolban/ESP32_BLE_Arduino",
        "crea_time": "2024-08-29T18:07:12.684511430+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:12.684511430+02:00",
        "modi_user": "api",
        "path": "/nkolban/ESP32_BLE_Arduino",
        "scheme": "https",
        "title": "GitHub - nkolban/ESP32_BLE_Arduino: The library source for the ESP32 BLE support for Arduino.",
        "uri_uuid": "1fcaf14bc9f7499fcace366df903f05a9d1d079e0dfc5984a208c4c3fe704c95",
        "url": "https://github.com/nkolban/ESP32_BLE_Arduino"
    },
    {
        "auto_descr": "Kostengünstiges Track & Trace und LPWAN Netzwerke. Optimieren Sie Prozesse mit IoT-Lösungen für Asset - und Betriebsmittel Tracking in Supply Chain, Logistik und Smart City.",
        "crea_time": "2024-08-29T18:07:13.477644215+02:00",
        "crea_user": "api",
        "host": "sigfox.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:13.477644215+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Track & Trace und LPWAN Netze für Industrie | Heliot Europe",
        "uri_uuid": "225bfc0b8a36a10ad510fceabe92ceea02890466748169ad8176c80e6890f971",
        "url": "https://sigfox.de/"
    },
    {
        "auto_descr": "Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust",
        "crea_time": "2024-08-29T18:07:14.943459794+02:00",
        "crea_user": "api",
        "host": "actix.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:14.943459794+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Actix Web",
        "uri_uuid": "6795856881829835fc4b0c5836f1f9d7ee1b8d3f43f7fc17548fd5e7667a29b5",
        "url": "https://actix.rs/"
    },
    {
        "auto_descr": "Rocket is a web framework for the Rust\n      programming language that makes it simple to write fast web applications\n      without sacrificing flexibility or type safety.",
        "crea_time": "2024-08-29T18:07:15.435031445+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:15.435031445+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": " Rocket - Simple, Fast, Type-Safe Web Framework for Rust ",
        "uri_uuid": "e6100335ecf0736a190da4d0e9181f636c93cb3d35995a9c115c81a0f5e3829b",
        "url": "https://rocket.rs/"
    },
    {
        "auto_descr": "A web framework for Rust. Contribute to rwf2/Rocket development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:15.961039605+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:15.961039605+02:00",
        "modi_user": "api",
        "path": "/SergioBenitez/Rocket/blob/v0.5-rc/CHANGELOG.md",
        "scheme": "https",
        "title": "Rocket/CHANGELOG.md at v0.5-rc · rwf2/Rocket · GitHub",
        "uri_uuid": "63777361d0aa505cc5764dde7b802965e5d3ef5d76630f453827ec88d3edb0a1",
        "url": "https://github.com/SergioBenitez/Rocket/blob/v0.5-rc/CHANGELOG.md#version-050-rc1-jun-9-2021"
    },
    {
        "auto_descr": "Open Source resource for learning Data Structures & Algorithms and their implementation in any Programming Language - The Algorithms",
        "crea_time": "2024-08-29T18:07:16.922982653+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:16.922982653+02:00",
        "modi_user": "api",
        "path": "/TheAlgorithms",
        "scheme": "https",
        "title": "The Algorithms · GitHub",
        "uri_uuid": "e2a05fe62f6fb62184c503e6a8d839f4ec9e6fa0385263f4798618dde8e57e9b",
        "url": "https://github.com/TheAlgorithms"
    },
    {
        "auto_descr": "Slint is a declarative GUI toolkit to build native user interfaces for Rust, C++, or JavaScript apps. - slint-ui/slint",
        "crea_time": "2024-08-29T18:07:17.715069312+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:17.715069312+02:00",
        "modi_user": "api",
        "path": "/sixtyfpsui/sixtyfps",
        "scheme": "https",
        "title": "GitHub - slint-ui/slint: Slint is a declarative GUI toolkit to build native user interfaces for Rust, C++, or JavaScript apps.",
        "uri_uuid": "bdb05fbe8f4c0c68a35bff45770db7284e41ffa66195fcbb69cbee66a8eb3cdf",
        "url": "https://github.com/sixtyfpsui/sixtyfps"
    },
    {
        "auto_descr": "Contribute to jefffhaynes/ublox development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:18.913857491+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:18.913857491+02:00",
        "modi_user": "api",
        "path": "/jefffhaynes/ublox",
        "scheme": "https",
        "title": "GitHub - jefffhaynes/ublox",
        "uri_uuid": "1355f1f0fcea377ce8f30deecf311b6955aca17e446a49f2820fb20f2cc2ffd0",
        "url": "https://github.com/jefffhaynes/ublox"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:19.842185913+02:00",
        "crea_user": "api",
        "host": "aws.amazon.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:19.842185913+02:00",
        "modi_user": "api",
        "path": "/de/blogs/developer/a-new-aws-sdk-for-rust-alpha-launch/",
        "scheme": "https",
        "title": "A New AWS SDK for Rust – Alpha Launch | AWS Developer Tools Blog",
        "uri_uuid": "c394402da19d4d91a37912c80ce13c2809487a4d0d77bf025f030868e5635e79",
        "url": "https://aws.amazon.com/de/blogs/developer/a-new-aws-sdk-for-rust-alpha-launch/"
    },
    {
        "auto_descr": "Kubernetes Rust Kubelet. Contribute to krustlet/krustlet development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:20.503476407+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:20.503476407+02:00",
        "modi_user": "api",
        "path": "/deislabs/krustlet",
        "scheme": "https",
        "title": "GitHub - krustlet/krustlet: Kubernetes Rust Kubelet",
        "uri_uuid": "a9e32a15f53d094fd15918a20a97589e49dcf65b17bd64e5b21125b3f6c8372c",
        "url": "https://github.com/deislabs/krustlet"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:21.627107079+02:00",
        "crea_user": "api",
        "host": "canonical.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:21.627107079+02:00",
        "modi_user": "api",
        "path": "/~kragen/memory-models/",
        "scheme": "http",
        "title": "The memory models that underlie programming languages",
        "uri_uuid": "00df367e9c03788ec03b5fd4e22a267b8241ddeaa67324900e607d3bc33a956f",
        "url": "http://canonical.org/~kragen/memory-models/"
    },
    {
        "auto_descr": "Rocket is a web framework for the Rust\n      programming language that makes it simple to write fast web applications\n      without sacrificing flexibility or type safety.",
        "crea_time": "2024-08-29T18:07:22.685873030+02:00",
        "crea_user": "api",
        "host": "rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:22.685873030+02:00",
        "modi_user": "api",
        "path": "/v0.5-rc/news/2021-06-09-version-0.5-rc.1/",
        "scheme": "https",
        "title": " Rocket v0.5 Release Candidate - Rocket Web Framework ",
        "uri_uuid": "85599cbaec57bd4e008aa2c83c767aa9fe28d43107a9ab61deb55834b0f687d1",
        "url": "https://rocket.rs/v0.5-rc/news/2021-06-09-version-0.5-rc.1/"
    },
    {
        "auto_descr": "Educational blog posts for Rust beginners. Contribute to pretzelhammer/rust-blog development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:23.636402629+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:23.636402629+02:00",
        "modi_user": "api",
        "path": "/pretzelhammer/rust-blog/blob/master/posts/learning-rust-in-2020.md",
        "scheme": "https",
        "title": "rust-blog/posts/learning-rust-in-2020.md at master · pretzelhammer/rust-blog · GitHub",
        "uri_uuid": "495151238d2dddb948a4196bad23ad1ee932daa86139b23c028af1ec1c7cc916",
        "url": "https://github.com/pretzelhammer/rust-blog/blob/master/posts/learning-rust-in-2020.md"
    },
    {
        "auto_descr": "Empowering everyone to build reliable and efficient software.",
        "crea_time": "2024-08-29T18:07:27.328544961+02:00",
        "crea_user": "api",
        "host": "blog.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:27.328544961+02:00",
        "modi_user": "api",
        "path": "/2021/05/11/edition-2021.html",
        "scheme": "https",
        "title": "The Plan for the Rust 2021 Edition | Rust Blog",
        "uri_uuid": "0ea74c102cb382fd935134d88b37a463177f943c618d0c7753072827807ceeb6",
        "url": "https://blog.rust-lang.org/2021/05/11/edition-2021.html"
    },
    {
        "auto_descr": "`macroquad` is a simple and easy to use game library for Rust programming language.",
        "crea_time": "2024-08-29T18:07:27.600309138+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:27.600309138+02:00",
        "modi_user": "api",
        "path": "/macroquad/0.3.4/macroquad/",
        "scheme": "https",
        "title": "macroquad - Rust",
        "uri_uuid": "4434f5cadd471e56d119c6efbc86beb26b4888a6e544a826c9194051734b5927",
        "url": "https://docs.rs/macroquad/0.3.4/macroquad/"
    },
    {
        "auto_descr": "Rapier",
        "crea_time": "2024-08-29T18:07:27.782565834+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:27.782565834+02:00",
        "modi_user": "api",
        "path": "/rapier2d/0.8.0/rapier2d/",
        "scheme": "https",
        "title": "rapier2d - Rust",
        "uri_uuid": "e6c21821f595b7b65933c91e8856173a22e6a26bd9faf51037edbc43673d11e3",
        "url": "https://docs.rs/rapier2d/0.8.0/rapier2d/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:28.408385059+02:00",
        "crea_user": "api",
        "host": "navitron.mobi",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:28.408385059+02:00",
        "modi_user": "api",
        "path": "/astronomical-algorithms-jean-meeus-15/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "ab5dd12b66b3cda91786389b446718994605ca7bad7ae3a90ad442ae46e3565a",
        "url": "https://navitron.mobi/astronomical-algorithms-jean-meeus-15/"
    },
    {
        "auto_descr": "nalgebra",
        "crea_time": "2024-08-29T18:07:28.662504433+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:28.662504433+02:00",
        "modi_user": "api",
        "path": "/nalgebra/0.26.2/nalgebra/",
        "scheme": "https",
        "title": "nalgebra - Rust",
        "uri_uuid": "e7e640cef0a62de1069007e90e15a4f71a268a14c9bb8f4f20bfc372bbcae951",
        "url": "https://docs.rs/nalgebra/0.26.2/nalgebra/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:28.861143683+02:00",
        "crea_user": "api",
        "host": "www.codeproject.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:28.861143683+02:00",
        "modi_user": "api",
        "path": "/Articles/3479/The-Bip-Buffer-The-Circular-Buffer-with-a-Twist",
        "scheme": "https",
        "title": "The Bip Buffer - The Circular Buffer with a Twist - CodeProject",
        "uri_uuid": "e68fa2377f3c3a050382b7f0763b0d2e6bed2c323c9eec48638905cc00c7ee62",
        "url": "https://www.codeproject.com/Articles/3479/The-Bip-Buffer-The-Circular-Buffer-with-a-Twist"
    },
    {
        "auto_descr": "A SPSC, lockless, no_std, thread safe, queue, based on BipBuffers - jamesmunns/bbqueue",
        "crea_time": "2024-08-29T18:07:30.054516545+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:30.054516545+02:00",
        "modi_user": "api",
        "path": "/jamesmunns/bbqueue",
        "scheme": "https",
        "title": "GitHub - jamesmunns/bbqueue: A SPSC, lockless, no_std, thread safe, queue, based on BipBuffers",
        "uri_uuid": "c962f2589ab5bedb99335e009617b9172a54fa8304c1568dfb6d6fffabc8de2c",
        "url": "https://github.com/jamesmunns/bbqueue"
    },
    {
        "auto_descr": "Floating point format explorer – binary representations of common floating point formats.",
        "crea_time": "2024-08-29T18:07:30.963178965+02:00",
        "crea_user": "api",
        "host": "float.exposed",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:30.963178965+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "\n\t\tFloat Exposed\n\t",
        "uri_uuid": "d19931da99e102b41a7734059b0f18e2c4f71f29b7d189f443556c3dc28a1059",
        "url": "https://float.exposed/"
    },
    {
        "auto_descr": "rust-analyzer extension for coc.nvim. Contribute to fannheyward/coc-rust-analyzer development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:31.713375053+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:31.713375053+02:00",
        "modi_user": "api",
        "path": "/fannheyward/coc-rust-analyzer",
        "scheme": "https",
        "title": "GitHub - fannheyward/coc-rust-analyzer: rust-analyzer extension for coc.nvim",
        "uri_uuid": "57dd7a81d4ccdbc35ed864654ac273ed81914cc0c7420551626cdc47d68f1f3d",
        "url": "https://github.com/fannheyward/coc-rust-analyzer"
    },
    {
        "auto_descr": "Blazing 💥 fast terminal-ui for git written in rust 🦀 - extrawurst/gitui",
        "crea_time": "2024-08-29T18:07:32.605674975+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:32.605674975+02:00",
        "modi_user": "api",
        "path": "/extrawurst/gitui",
        "scheme": "https",
        "title": "GitHub - extrawurst/gitui: Blazing 💥 fast terminal-ui for git written in rust 🦀",
        "uri_uuid": "8fcdecbe682743ce7ecc949a3b5c3213c42c41a6c557907cfc7e0227c7295801",
        "url": "https://github.com/extrawurst/gitui"
    },
    {
        "auto_descr": "Linux/OSX/FreeBSD resource monitor. Contribute to aristocratos/bpytop development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:35.114432311+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:35.114432311+02:00",
        "modi_user": "api",
        "path": "/aristocratos/bpytop",
        "scheme": "https",
        "title": "GitHub - aristocratos/bpytop: Linux/OSX/FreeBSD resource monitor",
        "uri_uuid": "08898a33c61b40b677c6652b24183774baff7799a2031eb8b2802217ac316e5b",
        "url": "https://github.com/aristocratos/bpytop"
    },
    {
        "auto_descr": "A cross-platform, OpenGL terminal emulator. Contribute to alacritty/alacritty development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:36.846330435+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:36.846330435+02:00",
        "modi_user": "api",
        "path": "/alacritty/alacritty",
        "scheme": "https",
        "title": "GitHub - alacritty/alacritty: A cross-platform, OpenGL terminal emulator.",
        "uri_uuid": "0539d3bc49266ffc93380b26a631a10a5122d9923494022497b7303d7b855be4",
        "url": "https://github.com/alacritty/alacritty"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:37.655067162+02:00",
        "crea_user": "api",
        "host": "www.avatar-cli.dev",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:37.655067162+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "73a6f525b30f5e166440acf03e5b5afa5358642e958c199022b87bebad76af6b",
        "url": "https://www.avatar-cli.dev/"
    },
    {
        "auto_descr": "A no_std graphics library for embedded applications - embedded-graphics/embedded-graphics",
        "crea_time": "2024-08-29T18:07:37.811740449+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:37.811740449+02:00",
        "modi_user": "api",
        "path": "/embedded-graphics/embedded-graphics",
        "scheme": "https",
        "title": "GitHub - embedded-graphics/embedded-graphics: A no_std graphics library for embedded applications",
        "uri_uuid": "9b48eda4ef27686bd6d79181e5e3eeb8a85d1342724e26b563c4f2e437b2a715",
        "url": "https://github.com/embedded-graphics/embedded-graphics"
    },
    {
        "auto_descr": "Take advantage of native speed rust implementation coupled with a Python interface to smooth amplitude spectra. - HerrMuellerluedenscheid/konnoohmachi",
        "crea_time": "2024-08-29T18:07:38.772812802+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:38.772812802+02:00",
        "modi_user": "api",
        "path": "/HerrMuellerluedenscheid/konnoohmachi",
        "scheme": "https",
        "title": "GitHub - HerrMuellerluedenscheid/konnoohmachi: Take advantage of native speed rust implementation coupled with a Python interface to smooth amplitude spectra.",
        "uri_uuid": "e2077183363118bb9f3eeb00e86e5e5ead3dfff272ca0d8f380cbaadffdfbc95",
        "url": "https://github.com/HerrMuellerluedenscheid/konnoohmachi"
    },
    {
        "auto_descr": "Statistics-driven benchmarking library for Rust. Contribute to bheisler/criterion.rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:39.730916441+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:39.730916441+02:00",
        "modi_user": "api",
        "path": "/bheisler/criterion.rs",
        "scheme": "https",
        "title": "GitHub - bheisler/criterion.rs: Statistics-driven benchmarking library for Rust",
        "uri_uuid": "d9a426b6b89a1be45b05e0c367a47fed25223f7809de352ca72cf23ec9f4b0ed",
        "url": "https://github.com/bheisler/criterion.rs"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:07:41.252748847+02:00",
        "crea_user": "api",
        "host": "doc.rust-lang.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:41.252748847+02:00",
        "modi_user": "api",
        "path": "/rustc/profile-guided-optimization.html",
        "scheme": "https",
        "title": "Profile-guided Optimization - The rustc book",
        "uri_uuid": "b50b206cc861790a3f728db7576e77f7cb92b1f4291bcac586caf1e77e55f3c0",
        "url": "https://doc.rust-lang.org/rustc/profile-guided-optimization.html"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:41.509642078+02:00",
        "crea_user": "api",
        "host": "cropping.rocks",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:41.509642078+02:00",
        "modi_user": "api",
        "path": "/en.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "99fd50599eae5c69ad9a397baa876e3804966a87a5bd842a81048be2c06cae6a",
        "url": "https://cropping.rocks/en.html"
    },
    {
        "auto_descr": "A request guard and future for graceful shutdown.",
        "crea_time": "2024-08-29T18:07:41.645920040+02:00",
        "crea_user": "api",
        "host": "api.rocket.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:41.645920040+02:00",
        "modi_user": "api",
        "path": "/master/rocket/struct.Shutdown.html",
        "scheme": "https",
        "title": "Shutdown in rocket - Rust",
        "uri_uuid": "7b6b488f3894e5dbb70be4258cbc40cb78946eb55742adfb569764122df2cd6f",
        "url": "https://api.rocket.rs/master/rocket/struct.Shutdown.html"
    },
    {
        "auto_descr": "A semi-deep dive into the finer points of path parsing and rendering in web applications",
        "crea_time": "2024-08-29T18:07:42.616301816+02:00",
        "crea_user": "api",
        "host": "www.fpcomplete.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:42.616301816+02:00",
        "modi_user": "api",
        "path": "/blog/pains-path-parsing/",
        "scheme": "https",
        "title": "The Pains of Path Parsing",
        "uri_uuid": "767cfd56c20c2b02ce100496942cea820bea09b8471aaee22660c3816847c8ed",
        "url": "https://www.fpcomplete.com/blog/pains-path-parsing/"
    },
    {
        "auto_descr": "An example of C/Rust interaction using CMake and Corrosion - CarlHMitchell/rust-c-ffi-example-with-cmake",
        "crea_time": "2024-08-29T18:07:42.981699709+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:42.981699709+02:00",
        "modi_user": "api",
        "path": "/CarlHMitchell/rust-c-ffi-example-with-cmake",
        "scheme": "https",
        "title": "GitHub - CarlHMitchell/rust-c-ffi-example-with-cmake: An example of C/Rust interaction using CMake and Corrosion",
        "uri_uuid": "79ad994ed817b5ec3621de57d3b8cec61c8088cd747e85175a17dddae8dbf0af",
        "url": "https://github.com/CarlHMitchell/rust-c-ffi-example-with-cmake"
    },
    {
        "auto_descr": "\n      \n\n  Rust and Tell\n\n\n  \n    \n\n \n \n\nTuesday,\nApril\n  \n27th,\n2021\n    19:00 CEST\n  \n  \n    \n    \n    @ Online\n    \n  \n\n\n    ",
        "crea_time": "2024-08-29T18:07:43.769713070+02:00",
        "crea_user": "api",
        "host": "berline.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:43.769713070+02:00",
        "modi_user": "api",
        "path": "/2021/04/27/rust-and-tell.html",
        "scheme": "https",
        "title": "Rust and Tell - Berline.rs",
        "uri_uuid": "2431bbdfb0a13cc76b91c5cfa15cfedd20af0c8aba8aa0bf15739ae32e0fc562",
        "url": "https://berline.rs/2021/04/27/rust-and-tell.html"
    },
    {
        "auto_descr": "At Mozilla, Firefox is not the only product we ship. Many others — including a variety of smartphone applications, and certainly not just web browsers — are ...",
        "crea_time": "2024-08-29T18:07:43.987706740+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:43.987706740+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust Linz, April 2021 - Jan-Erik Rediger - Leveraging Rust to build cross-platform libraries - YouTube",
        "uri_uuid": "22a28cc53bffb3625a524abc98fb38c9e77c8a46d1c248b7ab3d5e5a891fed71",
        "url": "https://www.youtube.com/watch?v=peu-rtN4358"
    },
    {
        "auto_descr": "Beneath every safe programming language, library, or virtual machine is a whole lot of unsafe code. Rust is no exception. This talk will explain why “unsafe”...",
        "crea_time": "2024-08-29T18:07:44.613759653+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:44.613759653+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Building on an unsafe foundation — Jason Orendorff - YouTube",
        "uri_uuid": "e95b949401a4823472a5f93795a4ad1ad05db847dfbe312d6ce7b21e472d1a5d",
        "url": "https://www.youtube.com/watch?v=rTo2u13lVcQ&t=33m25s"
    },
    {
        "auto_descr": "All details: https://berline.rs/2021/04/27/rust-and-tell.html00:00:00 Introduction00:04:00 Xavier Denis - Safer Rust: program verification with Creusot00:33:...",
        "crea_time": "2024-08-29T18:07:45.607443387+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:45.607443387+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "Rust & Tell - April 2021 - YouTube",
        "uri_uuid": "99fa5e908cf3aa00f4f8b2a9664dd816e9e63ba9b12b8294d09ca4798399f1b6",
        "url": "https://www.youtube.com/watch?v=q-oANR8sspw"
    },
    {
        "auto_descr": "API documentation for the Rust `optional` crate.",
        "crea_time": "2024-08-29T18:07:46.349500157+02:00",
        "crea_user": "api",
        "host": "docs.rs",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:46.349500157+02:00",
        "modi_user": "api",
        "path": "/optional",
        "scheme": "https",
        "title": "optional - Rust",
        "uri_uuid": "5ef2821ad728cd31504abcc435cb1b8736a349b76e73b90541349f755ee4e9a4",
        "url": "https://docs.rs/optional"
    },
    {
        "auto_descr": "15.6inch Universal Portable Touch Monitor, 1920×1080 FHD, IPS, HDMI, Type-C, Raspberry Pi",
        "crea_time": "2024-08-29T18:07:47.554361950+02:00",
        "crea_user": "api",
        "host": "www.waveshare.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:47.554361950+02:00",
        "modi_user": "api",
        "path": "/15.6inch-fhd-monitor.htm",
        "scheme": "https",
        "title": "15.6inch Universal Portable Touch Monitor, 1920×1080 FHD, IPS, HDMI, Type-C, Raspberry Pi",
        "uri_uuid": "7c22abe0fe0d5d4debc2e65664415f0701c846d826392636c2b21037e670a647",
        "url": "https://www.waveshare.com/15.6inch-fhd-monitor.htm"
    },
    {
        "auto_descr": "1304×984, 12.48inch E-Ink display module, red/black/white three-color, SPI interface",
        "crea_time": "2024-08-29T18:07:49.790924551+02:00",
        "crea_user": "api",
        "host": "www.waveshare.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:49.790924551+02:00",
        "modi_user": "api",
        "path": "/product/displays/e-paper/12.48inch-e-paper-module-b.htm",
        "scheme": "https",
        "title": "1304×984, 12.48inch E-Ink display module, red/black/white three-color, SPI interface",
        "uri_uuid": "1c657528a397488bec86140026f0353f46f2f9cedc86c42aeb21e889cc4f95c0",
        "url": "https://www.waveshare.com/product/displays/e-paper/12.48inch-e-paper-module-b.htm"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:51.175693735+02:00",
        "crea_user": "api",
        "host": "www.st.com",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:51.175693735+02:00",
        "modi_user": "api",
        "path": "/en/microcontrollers-microprocessors/stm32f042c6.html",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "fb6f4341a3cf4db965ff44a51264b86090545dbe76ac7956e00dc10d647fb65e",
        "url": "https://www.st.com/en/microcontrollers-microprocessors/stm32f042c6.html"
    },
    {
        "auto_descr": "Welcome to the lightning-fast world of robot sumo, where two robots battle it out for mechanical supremacy. But, keep your eyes peeled—robots that take years...",
        "crea_time": "2024-08-29T18:07:51.315280576+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:51.315280576+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "The Freakishly Fast World of Robot Sumo - YouTube",
        "uri_uuid": "ef8e337b64b247457f65cfdbee3b5c970c2585c48182fad537841ffeff9455bb",
        "url": "https://www.youtube.com/watch?v=mS-L2fpV1Is"
    },
    {
        "auto_descr": "nRF52840 Bluetooth 5.0 Module BLE",
        "crea_time": "2024-08-29T18:07:51.983547136+02:00",
        "crea_user": "api",
        "host": "www.waveshare.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:51.983547136+02:00",
        "modi_user": "api",
        "path": "/core52840.htm",
        "scheme": "https",
        "title": "nRF52840 Bluetooth 5.0 Module, Small Size, Stable Performance",
        "uri_uuid": "0f94d0914a0906b64b645543c6bfd761322dc4505b4adcfa2241f8c4aa6a1013",
        "url": "https://www.waveshare.com/core52840.htm"
    },
    {
        "auto_descr": "Contribute to barafael/sdp8xx-anemometer-pcb development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:53.302694934+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:53.302694934+02:00",
        "modi_user": "api",
        "path": "/barafael/sdp8xx-anemometer-pcb",
        "scheme": "https",
        "title": "GitHub - barafael/sdp8xx-anemometer-pcb",
        "uri_uuid": "77a3883040060650cf286d9aefaf459d1f5df8945bdbc237f62fc6151430ccc0",
        "url": "https://github.com/barafael/sdp8xx-anemometer-pcb"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:07:54.037712574+02:00",
        "crea_user": "api",
        "host": "cropping.rocks",
        "live_status": "0",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:54.037712574+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "e7ec9374ffa0ddf8ab1ed4f1bfa7e8ea32d1b225f1a41f9a5c3270fa6f725060",
        "url": "https://cropping.rocks/"
    },
    {
        "auto_descr": "In 2017, I said that “asynchronous Rust programming is a disaster and a mess”. In 2021a lot more of the Rust ecosystem has become asynchronous – such that it...",
        "crea_time": "2024-08-29T18:07:54.387005092+02:00",
        "crea_user": "api",
        "host": "theta.eu.org",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:54.387005092+02:00",
        "modi_user": "api",
        "path": "/2021/03/08/async-rust-2.html",
        "scheme": "https",
        "title": "Why asynchronous Rust doesn't work",
        "uri_uuid": "ccfb0e59e9a2c394bca0a504ef08ed2d2b245196ad654dabf18bef393f0d0b03",
        "url": "https://theta.eu.org/2021/03/08/async-rust-2.html"
    },
    {
        "auto_descr": "A minimalist Rust WebAssembly project template. Contribute to thedjinn/MiniWASM development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:07:58.142167477+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:58.142167477+02:00",
        "modi_user": "api",
        "path": "/thedjinn/MiniWASM",
        "scheme": "https",
        "title": "GitHub - thedjinn/MiniWASM: A minimalist Rust WebAssembly project template",
        "uri_uuid": "6d23156879b719a03858382d44fdc273f5516c694886f39cf0b704a7c4bfa331",
        "url": "https://github.com/thedjinn/MiniWASM"
    },
    {
        "auto_descr": "Closing Keynote Talk - PyCon India, Chennai, October 13, 2019 (Screencast).  In this talk, I live-code a simple stack machine and turn it into an interpreter...",
        "crea_time": "2024-08-29T18:07:59.143107579+02:00",
        "crea_user": "api",
        "host": "www.youtube.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:59.143107579+02:00",
        "modi_user": "api",
        "path": "/watch",
        "scheme": "https",
        "title": "A Talk Near the Future of Python (a.k.a., Dave live-codes a WebAssembly Interpreter) - YouTube",
        "uri_uuid": "fb1361050a304232e749f1f9596ae7418a66206815ff6c3a949b1e166b739a4b",
        "url": "https://www.youtube.com/watch?v=r-A78RgMhZU"
    },
    {
        "auto_descr": "Tabnine is the AI code assistant that accelerates and simplifies software development while keeping your code private, secure, and compliant.",
        "crea_time": "2024-08-29T18:07:59.640066406+02:00",
        "crea_user": "api",
        "host": "www.tabnine.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:07:59.640066406+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Tabnine AI code assistant | Private, personalized, protected",
        "uri_uuid": "94673a1dd136ca6ecf07780756f6d8e14d1de9fe897ed2a553de48f9776ad0f5",
        "url": "https://www.tabnine.com/"
    },
    {
        "auto_descr": "Build, bundle & ship your Rust WASM application to the web. - trunk-rs/trunk",
        "crea_time": "2024-08-29T18:08:00.098000355+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:00.098000355+02:00",
        "modi_user": "api",
        "path": "/thedodd/trunk",
        "scheme": "https",
        "title": "GitHub - trunk-rs/trunk: Build, bundle & ship your Rust WASM application to the web.",
        "uri_uuid": "1713721f86d80ab2431d8501113daa03dbbc24e7a1711c916e76052319e65576",
        "url": "https://github.com/thedodd/trunk"
    },
    {
        "auto_descr": "Slint is a declarative GUI toolkit to build native user interfaces for Rust, C++, or JavaScript apps. - slint-ui/slint",
        "crea_time": "2024-08-29T18:08:01.048020301+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:01.048020301+02:00",
        "modi_user": "api",
        "path": "/sixtyfpsui/sixtyfps/",
        "scheme": "https",
        "title": "GitHub - slint-ui/slint: Slint is a declarative GUI toolkit to build native user interfaces for Rust, C++, or JavaScript apps.",
        "uri_uuid": "bcd4841bcd19670d962b5e5e2c66fac81fc8a65210bd6e23408a4db3715b5b33",
        "url": "https://github.com/sixtyfpsui/sixtyfps/"
    },
    {
        "auto_descr": "Rust bindings for Dear ImGui. Contribute to imgui-rs/imgui-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:02.037638556+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:02.037638556+02:00",
        "modi_user": "api",
        "path": "/imgui-rs/imgui-rs",
        "scheme": "https",
        "title": "GitHub - imgui-rs/imgui-rs: Rust bindings for Dear ImGui",
        "uri_uuid": "a27ccee824622d39f8f6f2afc2ba2c6771d6f1ee173c13818e4a2c41279a19aa",
        "url": "https://github.com/imgui-rs/imgui-rs"
    },
    {
        "auto_descr": "rust bindings to imnodes - imgui node editor. Contribute to benmkw/imnodes-rs development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:02.896535082+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:02.896535082+02:00",
        "modi_user": "api",
        "path": "/benmkw/imnodes-rs",
        "scheme": "https",
        "title": "GitHub - benmkw/imnodes-rs: rust bindings to imnodes - imgui node editor",
        "uri_uuid": "306259e3bf99b3ae2517af835e684b8a20e3db1dfa0be3afa29589e4792ebf52",
        "url": "https://github.com/benmkw/imnodes-rs"
    },
    {
        "auto_descr": "Rust bindings to https://github.com/epezent/implot - 4bb4/implot-rs",
        "crea_time": "2024-08-29T18:08:03.793367178+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:03.793367178+02:00",
        "modi_user": "api",
        "path": "/4bb4/implot-rs",
        "scheme": "https",
        "title": "GitHub - 4bb4/implot-rs: Rust bindings to https://github.com/epezent/implot",
        "uri_uuid": "6da5cb7c729daa55d6d4f7bf706ea1dd0411d4487d6051c4724c4e5e18927279",
        "url": "https://github.com/4bb4/implot-rs"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:08:04.706426573+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:04.706426573+02:00",
        "modi_user": "api",
        "path": "/Yatekii/imgui-wgpu-rs/blob/master/examples/basic_simple_api.rs",
        "scheme": "https",
        "title": "-",
        "uri_uuid": "4fa65332818b7f6444b2395bc4b227ad6e76858f4849df2b8b50a2c0c6fd8c9d",
        "url": "https://github.com/Yatekii/imgui-wgpu-rs/blob/master/examples/basic_simple_api.rs"
    },
    {
        "auto_descr": "(Bild: Foto von Magda Ehlers von Pexels) Von Florian Gilcher Die Programmiersprache Rust macht nicht nur weniger Fehler, sie findet sie auch früher. Seit einiger Zeit ist die Programmiersprache Rust ein beliebtes Diskussionsthema. Sicherer soll sie sein, dabei aber genauso schnell wie andere Systemprogrammiersprachen. ",
        "crea_time": "2024-08-29T18:08:05.208646357+02:00",
        "crea_user": "api",
        "host": "www.golem.de",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:05.208646357+02:00",
        "modi_user": "api",
        "path": "/news/programmiersprachen-weniger-frust-mit-rust-2102-154243.html",
        "scheme": "https",
        "title": "Programmiersprachen: Weniger Frust mit Rust",
        "uri_uuid": "1a4fb5577078b9bd5aa4ea117a426ab4da3daebb6171452e15347009f8611b6e",
        "url": "https://www.golem.de/news/programmiersprachen-weniger-frust-mit-rust-2102-154243.html"
    },
    {
        "auto_descr": "Veloren is an open-source action RPG set in a fantasy world made of voxels.",
        "crea_time": "2024-08-29T18:08:05.938695203+02:00",
        "crea_user": "api",
        "host": "veloren.net",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:05.938695203+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "Veloren",
        "uri_uuid": "5be2ee3d735f0b2e84508f793c7c269b28730d070d3dbf20b31e4339e415d0b7",
        "url": "https://veloren.net/"
    },
    {
        "auto_descr": "NASA’s Mars Perseverance rover seeks signs of ancient life and collects samples of rock and regolith for possible Earth return.",
        "crea_time": "2024-08-29T18:08:06.473979476+02:00",
        "crea_user": "api",
        "host": "mars.nasa.gov",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:06.473979476+02:00",
        "modi_user": "api",
        "path": "/mars2020/timeline/landing/",
        "scheme": "https",
        "title": "Mars 2020: Perseverance Rover - NASA Science",
        "uri_uuid": "51c22f4ddd77971e42388d8b7896ca0737f5c5b54031e90a7b7005a9451c9e66",
        "url": "https://mars.nasa.gov/mars2020/timeline/landing/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:08:07.030735752+02:00",
        "crea_user": "api",
        "host": "news.ycombinator.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:07.030735752+02:00",
        "modi_user": "api",
        "path": "/item",
        "scheme": "https",
        "title": "Rust Foundation: Hello, World | Hacker News",
        "uri_uuid": "93ac352b95c651aa49841d7b9adc096c551575e6d8d6a9563cddd99d1b72813f",
        "url": "https://news.ycombinator.com/item?id=26067118"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:08:09.283523873+02:00",
        "crea_user": "api",
        "host": "security.googleblog.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:09.283523873+02:00",
        "modi_user": "api",
        "path": "/2021/02/mitigating-memory-safety-issues-in-open.html",
        "scheme": "https",
        "title": "\nGoogle Online Security Blog: Mitigating Memory Safety Issues in Open Source Software\n",
        "uri_uuid": "6db6dd3eeb94533e1f6849d0b1490d16cf6536f844da00c63f42251044a87e8d",
        "url": "https://security.googleblog.com/2021/02/mitigating-memory-safety-issues-in-open.html"
    },
    {
        "auto_descr": "A web framework for Rust. Contribute to rwf2/Rocket development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:09.750285641+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:09.750285641+02:00",
        "modi_user": "api",
        "path": "/SergioBenitez/Rocket",
        "scheme": "https",
        "title": "GitHub - rwf2/Rocket: A web framework for Rust.",
        "uri_uuid": "af403d60076a64f1f6bbb0bf5b61d110e37ced8d3f2b6be882659e5de48e970e",
        "url": "https://github.com/SergioBenitez/Rocket"
    },
    {
        "auto_descr": "Declarative and procedural macros enable metaprogramming in Rust, which can lead to runtime cost savings and more powerful code.",
        "crea_time": "2024-08-29T18:08:10.605169458+02:00",
        "crea_user": "api",
        "host": "blog.logrocket.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:10.605169458+02:00",
        "modi_user": "api",
        "path": "/macros-in-rust-a-tutorial-with-examples/",
        "scheme": "https",
        "title": "Macros in Rust: A tutorial with examples - LogRocket Blog",
        "uri_uuid": "1bf5b0d6cd501ea30a6aa5178bb1024c487c8671d5880dfedc6dc21b34a2d4f1",
        "url": "https://blog.logrocket.com/macros-in-rust-a-tutorial-with-examples/"
    },
    {
        "auto_descr": "",
        "crea_time": "2024-08-29T18:08:10.840714372+02:00",
        "crea_user": "api",
        "host": "rustwasm.github.io",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:10.840714372+02:00",
        "modi_user": "api",
        "path": "/docs/book/",
        "scheme": "https",
        "title": "Introduction - Rust and WebAssembly",
        "uri_uuid": "490dd48568693ddeaa6ec2b3cb78b304d917ba89b2b1a18b541b6a05bd9dad31",
        "url": "https://rustwasm.github.io/docs/book/"
    },
    {
        "auto_descr": "-",
        "crea_time": "2024-08-29T18:08:11.070913270+02:00",
        "crea_user": "api",
        "host": "robert.kra.hn",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:11.070913270+02:00",
        "modi_user": "api",
        "path": "/",
        "scheme": "https",
        "title": "",
        "uri_uuid": "fa76d10d32fba881248b55ad0b70807c28d5f0ff6412634b8ad35541b9186926",
        "url": "https://robert.kra.hn/"
    },
    {
        "auto_descr": "Rust implementation of Reactive Extensions. . Contribute to rxRust/rxRust development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:11.463952282+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:11.463952282+02:00",
        "modi_user": "api",
        "path": "/rxRust/rxRust",
        "scheme": "https",
        "title": "GitHub - rxRust/rxRust: Rust implementation of Reactive Extensions.",
        "uri_uuid": "51b51ed29fd4ec4f0eb2dbc7c7a0aeb371a8a476a29562e18da2778b22526f15",
        "url": "https://github.com/rxRust/rxRust"
    },
    {
        "auto_descr": "A runtime for writing reliable asynchronous applications with Rust. Provides I/O, networking, scheduling, timers, ... - tokio-rs/tokio",
        "crea_time": "2024-08-29T18:08:12.403000968+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:12.403000968+02:00",
        "modi_user": "api",
        "path": "/tokio-rs/tokio",
        "scheme": "https",
        "title": "GitHub - tokio-rs/tokio: A runtime for writing reliable asynchronous applications with Rust. Provides I/O, networking, scheduling, timers, ...",
        "uri_uuid": "a471bb68e5a0a195a55c28aec19cea43653696092a130aeeb13bb29fa2ea3cf6",
        "url": "https://github.com/tokio-rs/tokio"
    },
    {
        "auto_descr": "GStreamer bindings for Rust - This repository moved to https://gitlab.freedesktop.org/gstreamer/gstreamer-rs - sdroege/gstreamer-rs",
        "crea_time": "2024-08-29T18:08:13.205253214+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:13.205253214+02:00",
        "modi_user": "api",
        "path": "/sdroege/gstreamer-rs",
        "scheme": "https",
        "title": "GitHub - sdroege/gstreamer-rs: GStreamer bindings for Rust - This repository moved to https://gitlab.freedesktop.org/gstreamer/gstreamer-rs",
        "uri_uuid": "4b3ea4e589ace377e370b787a7ea151af5d59653a784a51a5cd3002eeece66d6",
        "url": "https://github.com/sdroege/gstreamer-rs"
    },
    {
        "auto_descr": "A modular implementation of timely dataflow in Rust - TimelyDataflow/timely-dataflow",
        "crea_time": "2024-08-29T18:08:14.138782891+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:14.138782891+02:00",
        "modi_user": "api",
        "path": "/TimelyDataflow/timely-dataflow",
        "scheme": "https",
        "title": "GitHub - TimelyDataflow/timely-dataflow: A modular implementation of timely dataflow in Rust",
        "uri_uuid": "e646dfdac80f3a0355349f89a62f393c19302a5ed6f016c5416e3a40cf73498f",
        "url": "https://github.com/TimelyDataflow/timely-dataflow"
    },
    {
        "auto_descr": "Subcommand to show result of macro expansion. Contribute to dtolnay/cargo-expand development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:14.923130810+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:14.923130810+02:00",
        "modi_user": "api",
        "path": "/dtolnay/cargo-expand",
        "scheme": "https",
        "title": "GitHub - dtolnay/cargo-expand: Subcommand to show result of macro expansion",
        "uri_uuid": "fe5aa749883b10967d460e8bc7884f2975cd2a0a75c1c4d0fbd828f8e81c4ebc",
        "url": "https://github.com/dtolnay/cargo-expand"
    },
    {
        "auto_descr": "Yet Another Serializer/Deserializer. Contribute to media-io/yaserde development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:15.730069216+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:15.730069216+02:00",
        "modi_user": "api",
        "path": "/media-io/yaserde",
        "scheme": "https",
        "title": "GitHub - media-io/yaserde: Yet Another Serializer/Deserializer",
        "uri_uuid": "a0d20f9bfafd7c12944a8a64e73e48c879b427d82757227ea1c4d3bce3ccf06c",
        "url": "https://github.com/media-io/yaserde"
    },
    {
        "auto_descr": "A bunch of lints to catch common mistakes and improve your Rust code. Book: https://doc.rust-lang.org/clippy/ - rust-lang/rust-clippy",
        "crea_time": "2024-08-29T18:08:17.739846004+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:17.739846004+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rust-clippy/",
        "scheme": "https",
        "title": "GitHub - rust-lang/rust-clippy: A bunch of lints to catch common mistakes and improve your Rust code. Book: https://doc.rust-lang.org/clippy/",
        "uri_uuid": "606ca9e7f973abf213f555bda9d1a4e17502177f784250a05e7fe77a432d376f",
        "url": "https://github.com/rust-lang/rust-clippy/"
    },
    {
        "auto_descr": "Format Rust code. Contribute to rust-lang/rustfmt development by creating an account on GitHub.",
        "crea_time": "2024-08-29T18:08:18.551139697+02:00",
        "crea_user": "api",
        "host": "github.com",
        "live_status": "1",
        "man_descr": "",
        "modi_time": "2024-08-29T18:08:18.551139697+02:00",
        "modi_user": "api",
        "path": "/rust-lang/rustfmt",
        "scheme": "https",
        "title": "GitHub - rust-lang/rustfmt: Format Rust code",
        "uri_uuid": "5adc4bc34b956597aa5d1a8a5af73ac7bb448611b1e5540b0d3ce4f96f407356",
        "url": "https://github.com/rust-lang/rustfmt"
    }
]